{"version":3,"sources":["reportWebVitals.js","redux/reducers/ThemeReducer.js","redux/reducers/index.js","services/auth.service.js","assets/JsonData/sidebareRoute.js","services/auth-header.js","services/user.service.js","controllers/Role.js","components/sidebar/SidebarItem.jsx","assets/images/sofitech.png","components/sidebar/SidebarTableau.jsx","components/sidebar/Sidebar.jsx","components/dropdown/Dropdown.jsx","redux/actions/ThemeAction.js","components/thememenu/ThemeMenu.jsx","services/Action.js","components/topnav/TopNav.jsx","components/status-card/StatusCard.jsx","controllers/Action.js","controllers/Societe.js","components/societe/ListeDashbord.js","components/action/ListeDashboard.js","components/chart/chartAction.js","components/chart/chartSociete.js","components/Date/inputDate.jsx","components/Date/inputDate2.jsx","pages/Dashboard.jsx","components/card/statuscardadmin.jsx","components/card/statuscardEvolis.jsx","components/card/statuscard.jsx","pages/Customers.jsx","common/Register/checkedForm.js","pages/Register.jsx","assets/images/Spinner-5.gif","components/LoadingPage.jsx","pages/Login.jsx","pages/ActionUser.jsx","services/Interlocuteur.js","pages/Action.jsx","services/societe.js","common/Ajouter/checkedForm.js","pages/Ajouter.jsx","pages/DashboardAdmin.jsx","pages/Interlocuteur.jsx","pages/InterlocuteurDetails.jsx","pages/CustomerInfo.jsx","pages/User.jsx","pages/societeMod.jsx","pages/ActionMod.jsx","pages/InterlocuteurMod.jsx","pages/Error-page.jsx","pages/Evolis.jsx","pages/PasswordChange.jsx","pages/sendMail.jsx","pages/resetPassword.jsx","components/Routes.jsx","components/layout/Layout.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ThemeReducer","state","arguments","length","undefined","action","type","_objectSpread","mode","payload","color","rootReducer","combineReducers","API_URL","concat","process","AuthService","_classCallCheck","_createClass","key","value","username","password","axios","post","response","data","accessToken","sessionStorage","setItem","JSON","stringify","verificationCode","removeItem","_this","setTimeout","logout","message","get","delete","id","email","roles","parse","getItem","userId","oldPassword","newPassword","resetToken","interlocuteurs","Actions","gestion","Tableaudebord","ajouter","Societes","connexion","AdminDashboard","authHeader","user","UserService","headers","_useState","useState","_useState2","_slicedToArray","admin","setadmin","getAdminBoard","error","_useState3","_useState4","sofitech","setsofitech","getSofitechBoard","_useState5","_useState6","cemeca","setcemeca","getCemecaBoard","SidebarIteact","props","active","_jsx","disabled","className","children","_jsxs","icon","title","status","SidbarTableActive","_Fragment","actItem","map","item","index","Link","to","route","display_name","activeItem2","activeItem","SidbarImage","mysofitech","src","logo","alt","renderImage","SidbarTableDeconnexion","href","onClick","Sidebar","getCurrentUser","new_sidbar","setSidbar","myadmin","Role","nameUrl","window","location","slice","findIndex","includes","pathname","filter","task","useEffect","retrieveRole","nouveaustate","push","sidebareRoute","Dropdown","content_ref","toggle_ref","dropdown_toggle_el","useRef","dropdown_content_el","document","addEventListener","e","current","contains","target","classList","toggle","remove","ref","badge","customToggle","contentData","renderItems","renderFooter","exportDefault","setColor","setMode","getTheme","mode_settings","name","background","class","color_settings","ThemeMenu","menu_ref","menu_toggle_ref","currMode","setcurrMode","currColor","setcurrColor","dispatch","useDispatch","themeClass","find","localStorage","colorClass","add","ThemeAction","AuthAction","update","put","curr_user","Topnav","currentUser","setCurrentUser","Action","SetAction","RoleUser","findAll","catch","console","log","date","Date","mysn","Action_util1","date_rdv","id_utili","passwordLastChanged","passwordExpirationDate","daysUntilExpiration","Math","ceil","role","renderPasswordExpirationAlert","image","user_menu","content","renderUserMenu","nom_societe","Moment","fromNow","renderNotificationItem","StatusCard","count","ActionListe","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","abrupt","t0","stop","apply","ActionPost","_ref2","_callee2","_context2","CemecaListe","SofitechListe","AllSociete","_ref3","_callee3","_context3","ListeDashboard","societeListe","societe_util","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","page","rowsPerPage","row","border","siret","nom_soc","observation","adresse_local","createdAt","app_cemeca","Chip","label","app_sofitech","TablePagination","rowsPerPageOptions","labelRowsPerPage","onPageChange","handleChangePage","onRowsPerPageChange","handleChangeRowsPerPage","labelDisplayedRows","from","ListeAction","page2","handleChangePage2","handleChangeRowsPerPage2","Action_util","rowsPerPage2","scope","moment","format","nom_interlocuteur","credit_cop","validation","type_action","ChartDate","themeReducer","useSelector","chartOptions","series","tableau_action","options","chart","dataLabels","enabled","stroke","curve","xaxis","categories","legend","position","grid","show","Chart","theme","height","tableau_societe","InputDate","LocalizationProvider","dateAdapter","AdapterMoment","Stack","spacing","DesktopDatePicker","valueDate1","onChange","handleChangeDate1","renderInput","params","TextField","InputDateFin","valueDate2","handleChangeDate2","Dashboard","history","useHistory","mycemeca","Setsociete","sort","b","a","getTime","Societe","event","setMonth","getMonth","_React$useState","React","_React$useState2","setValueDate1","_React$useState3","_React$useState4","setValueDate2","_loop","date_action","fltr_date","filtre_date_Action_util1","statusCardAdmin","statusCardEvolis","getStatusCardEvolis","statusCard","fncardadmin","_React$useState5","_React$useState6","setRowsPerPage","_React$useState7","_React$useState8","setPage","_React$useState9","_React$useState10","setRowsPerPage2","_React$useState11","_React$useState12","setPage2","handleClickGoToEvolis","navigateToEvolis","Box","m","width","noValidate","autoComplete","InputDateDebut","newValue","ChartDateAction","ChartDateSociete","ListeSociete","handleChangeDate","newPage","useStyles","makeStyles","table","secondary","light","main","dark","contrastText","tableContainer","borderRadius","margin","maxWidth","tableHeaderCell","fontWeight","backgroundColor","palette","primary","getContrastText","avatar","fontSize","display","FontAwesomeSvgIcon","forwardRef","_icon$icon","svgPathData","SvgIcon","viewBox","d","i","style","opacity","Customers","classes","ListTest","SetTest","searchAll","setSearchAll","Filter","SetFilter","tableCellStyle","placeholder","nom","val","toLowerCase","code_postal","String","siren","overflow","maxHeight","size","stickyHeader","Grid","container","lg","Typography","variant","ville_soc","Button","startIcon","FontAwesomeIcon","faUser","IconButton","faFile","faEllipsisV","checkedForm","required","vemail","isEmail","vrole","isNaN","vusername","vpassword","Register","padding","listuser","setListeUser","listauth","setListeAuth","form","checkBtn","checkForm","setUsername","_useState7","_useState8","setEmail","_useState9","_useState10","setRoles","_useState11","_useState12","setPassword","_useState13","_useState14","successful","setSuccessful","_useState15","_useState16","setMessage","retrieveTutorials","retrieveUsers","getListe_User","get_historique_auth","onChangeRoles","_toConsumableArray","Avatar","company","TableFooter","onChangePage","onChangeRowsPerPage","date_connection","Form","onSubmit","preventDefault","validateAll","context","_errors","register","resMessage","toString","htmlFor","Input","validations","CheckButton","Loader","LoaderGif","Copyright","getFullYear","createTheme","Login","loading","setLoading","showVerificationModal","setShowVerificationModal","setVerificationCode","verificationError","setVerificationError","_useState17","_useState18","handleLogin","login","create_historique_auth","ThemeProvider","Container","CssBaseline","marginTop","flexDirection","alignItems","bgcolor","LockOutlinedIcon","mt","mb","fullWidth","autoFocus","xs","Modal","open","onClose","closeAfterTransition","Fade","in","justifyContent","boxShadow","p","twoFactorAuth","ActionDetails","ReadMore","text","isReadMore","setIsReadMore","Vali","setVali","ACtionFilter","SetActionFilter","Etat","setEtat","Test","setTest","SetsocieteListe","realiserFilter","setRealiserFilter","_useState19","_useState21","_useState23","_useState24","searchTerm","setSearchTerm","_useState25","_useState26","tableRef","valideAction","reload","prevFilter","md","Switch","inputProps","checked","DownloadTableExcel","filename","sheet","currentTableRef","isRealiser","besoin","description","cursor","EditIcon","AuthInterlocuteur","myJSON","setactive","myJSON2","setactive2","myJSON3","setactive3","EvolisJson","setEvolisjSon","ID_societe","setID_societe","sidebar_items","interlocuteur","setInterlocuteur","_useState20","Credit","setCredit","_useState22","Factor","setFactor","showInvestissementProductif","setShowInvestissementProductif","join","AuthInter","useParams","nb","parseInt","filterInter","id_soc","initial1ctionState","date_factor","date_assur","nom_assur","nom_factor","investissement","montant","setAction","handleInputChange","_event$target","_defineProperty","interl","create","FormControl","multiline","Multiselect","displayValue","isObject","onNOMPressFn","onRemove","onSearch","onSelect","Array","isArray","x","showCheckbox","rows","InputLabel","Select","labelId","MenuItem","groupBy","selectedValues","NOM","besoinliste","Evolis","liste","AuthSociete","findByTitle","vsiret","vsiren","vnom_soc","vnom_responsable","vdate_creation_soc","vactivité","vadresse","vpays","cville","vcode_postal","vopportunité","vobservation","vtel","vid_role","sleep","delay","Promise","resolve","AddTutorial","vsyndicat","setOpen","setOptions","initialSocieteState","date_creation_soc","activite_soc","libelle_naf","pays","syndicat","tel","soc_sofitech","soc_cemeca","id_role","origineprospect","setSociete","messagesiret","setMessagesiret","setrole","rolesofitech","setrolesofitech","Soc","chaine","SIRETAPI","setSIRETAPI","Etablissement","SetETA","_useState27","_useState28","setValue","result","Object","entries","result2","Siren","Nom","_ref4","Code_naf","_ref6","_ref8","adresse","_ref10","paye","_ref12","ville","_ref14","_ref16","SIREN","valeur","CODENAF","LibelleCodeNaf","ADRESSE","PAYE","VILLE","CODE","Autocomplete","noOptionsText","onOpen","isOptionEqualToValue","option","getOptionLabel","InputProps","endAdornment","Fragment","CircularProgress","onKeyPress","Origine_du_prospect","nom_responsable_soc","etablissement","origine_prospect","emptyRecordMsg","defaultValue","DashboardAdmin","societe","setsociete","search","setSearch","retrieveInterlocuteur","initialState","prenom","code_postale","activite","Interlocuteur","listeinter","Setlisteinter","fonction","fonction_inter","InterlocuteurDetails","Inter","SetInter","listSoc","setSoc","card","Card","CardContent","c","CardActions","id_interlocuteur","Customersinfo","ListSociete","SetSociete","listInter","Liste_User","SetListe_User","test","activSoc","getResponsibleName","responsibleId","responsibleUser","gutterBottom","Usersinfo","Listuser","Setuser","Listsociete","id_action","valueDate","setDate","now","endIcon","SendIcon","index2","setListeSociete","SocieteAPI","ActionMod","setListeAction","ListeInter","setListeInter","myJSON_Interlocuteur","myJSON_besoin","setactivebesoin","land","land2","land3","societefiltred","setsocietefiltred","societefiltredid","setsocietefiltredid","idSociete","idSocieteInterl","substring","ListeInterlocuteur","setListeInterlocuteur","PageError","PasswordChangeCountdown","daysSinceLastChange","setDaysSinceLastChange","setOldPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","showPasswordChangeForm","setShowPasswordChangeForm","fetchDaysSinceLastChange","days","daysRemaining","changePassword","PasswordForget","setmail","forgotPassword","Resetpassword","confirmPassword","setConfirmPassword","handleResetPassword","resetPassword","newPasswordValue","newConfirmPassword","CRMRoutes","Route","path","exact","CustomerInfo","CustomerModify","Ajouter","UsersInfo","InterlocuteurMod","render","Layout","require","config","BrowserRouter","TopNav","store","createStore","ReactDOM","Provider","getElementById"],"mappings":"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","file":"static/js/main.a9c649c5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const ThemeReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case 'SET_MODE':\r\n            return {\r\n                ...state,\r\n                mode: action.payload\r\n            }\r\n        case 'SET_COLOR':\r\n            return {\r\n                ...state,\r\n                color: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ThemeReducer","import ThemeReducer from \"./ThemeReducer\"\r\nimport { combineReducers } from \"redux\"\r\n\r\nconst rootReducer = combineReducers({ThemeReducer})\r\n\r\nexport default rootReducer","import axios from \"axios\";\r\n\r\nconst API_URL = `${process.env.REACT_APP_API_HOST}/api/auth/`;\r\n\r\nclass AuthService {\r\n\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          sessionStorage.setItem(\"user\", JSON.stringify(response.data));\r\n\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n  twoFactorAuth(username,verificationCode) {\r\n    return axios\r\n      .post(API_URL + \"2fa\", {\r\n        username,\r\n        verificationCode\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          sessionStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    sessionStorage.removeItem(\"user\");\r\n  }\r\n  runLogoutTimer() {\r\n    setTimeout(() => {\r\n        this.logout();\r\n    }, 5000);\r\n}\r\n\r\n\r\n  create_historique_auth(username,password,message){\r\n    return axios.post(API_URL + \"historique\", {\r\n      username,\r\n      password,\r\n      message\r\n\r\n    });\r\n\r\n  }\r\n    get_historique_auth(){\r\n    return axios.get(API_URL + \"list_historique\");\r\n\r\n  };\r\n  removeAll_historique_auth () {\r\n    return axios.delete(API_URL +`list_historique`);\r\n  };\r\n  remove_historiqueremove(id) {\r\n    return axios.delete(API_URL +`list_historique/${id}`);\r\n  };\r\n\r\n  register(username, email,roles, password,) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      roles,\r\n      password,\r\n\r\n    });\r\n  }\r\n  \r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(sessionStorage.getItem('user'));;\r\n  }\r\n  changePassword(userId, oldPassword, newPassword) {\r\n    return axios.post(API_URL + \"change-password\", {\r\n      userId,\r\n      oldPassword,\r\n      newPassword,\r\n    });\r\n  }\r\n  // Forgot Password\r\n  forgotPassword(email) {\r\n    return axios.post(API_URL + 'reset-password', {\r\n      email\r\n    });\r\n  }\r\n\r\n  // Reset Password with Token\r\n  resetPassword(resetToken, newPassword) {\r\n    return axios.post(API_URL + `modifier-password`, {\r\n      resetToken,\r\n      newPassword\r\n      \r\n    });\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","export let interlocuteurs = {\r\n    \"display_name\": \"Interlocuteur\",\r\n    \"route\": \"/Interl\",\r\n    \"icon\": \"bx bx-user-pin\",\r\n    \"status\": \"active\"\r\n}\r\nexport let desinterlocuteur = {\r\n    \"display_name\": \"Interlocuteur\",\r\n    \"route\": \"/Interl\",\r\n    \"icon\": \"bx bx-user-pin\",\r\n    \"status\": \"desactive\"\r\n}\r\nexport let Actions = {\r\n    \"display_name\": \"Activité commerciale\",\r\n    \"route\": \"/AllAction\",\r\n    \"icon\": \"bx bxs-edit-alt\",\r\n    \"status\": \"active\"\r\n}\r\nexport let desAction = {\r\n    \"display_name\": \"Activité commerciale\",\r\n    \"route\": \"/Action\",\r\n    \"icon\": \"bx bx-user-pin\",\r\n    \"status\": \"desactive\"\r\n}\r\nexport let Parametre = {\r\n    \"display_name\": \"Parametre\",\r\n    \"route\": \"/Parametre\",\r\n    \"icon\": \"bx bx-cog\",\r\n    \"status\": \"active\"\r\n}\r\nexport let desparametre = {\r\n    \"display_name\": \"Parametre\",\r\n    \"route\": \"/Parametre\",\r\n    \"icon\": \"bx bx-user-pin\",\r\n    \"status\": \"desactive\"\r\n}\r\n\r\nexport let contrat = {\r\n    \"display_name\": \"Contrats\",\r\n    \"route\": \"/Contrat\",\r\n    \"icon\": \"bx bxs-book-content\",\r\n    \"status\": \"active\"\r\n}\r\nexport let descontrat = {\r\n    \"display_name\": \"Contrat\",\r\n    \"route\": \"/Contrat\",\r\n    \"icon\": \"bx bxs-book-content\",\r\n    \"status\": \"desactive\"\r\n}\r\nexport let gestion = {\r\n    \"display_name\": \"Gestion Utilisateur\",\r\n    \"route\": \"/Register\",\r\n    \"icon\": \"bx bxs-user-plus\",\r\n    \"status\": \"active\"\r\n}\r\nexport let desgestion = {\r\n    \"display_name\": \"Gestion Utilisateurs\",\r\n    \"route\": \"/Register\",\r\n    \"icon\": \"bx bxs-user-plus\",\r\n    \"status\": \"desactive\"\r\n}\r\nexport let Tableaudebord = {\r\n    \"display_name\": \"Tableau de bord\",\r\n    \"route\": \"/\",\r\n    \"icon\": \"bx bx-category-alt\",\r\n    \"status\": \"active\"\r\n}\r\nexport let desTableaudebord = {\r\n    \"display_name\": \"Tableau de bord\",\r\n    \"route\": \"/\",\r\n    \"icon\": \"bx bx-category-alt\",\r\n    \"status\": \"desactive\"\r\n}\r\n\r\nexport let ajouter = {\r\n    \"display_name\": \"Nouvelle Société\",\r\n    \"route\": \"/Ajouter\",\r\n    \"icon\": \"bx bxs-folder-plus\",\r\n    \"status\": \"active\"\r\n}\r\nexport let desajouter = {\r\n    \"display_name\": \"Nouvelle Société\",\r\n    \"route\": \"/Ajouter\",\r\n    \"icon\": \"bx bxs-folder-plus\",\r\n    \"status\": \"desactive\"\r\n}\r\n\r\nexport let Societes = {\r\n    \"display_name\": \"Sociétés\",\r\n    \"route\": \"/Societes\",\r\n    \"icon\": \"bx bxs-bank\",\r\n    \"status\": \"active\"\r\n}\r\nexport let desSocietes = {\r\n    \"display_name\": \"Société\",\r\n    \"route\": \"/Societes\",\r\n    \"icon\": \"bx bxs-bank\",\r\n    \"status\": \"desactive\"\r\n}\r\nexport let connexion = {\r\n    \"display_name\": \"Login\",\r\n    \"route\": \"/login\",\r\n    \"icon\": \"bx bxs-bank\",\r\n    \"status\": \"active\"\r\n}\r\nexport let AdminDashboard = {\r\n    \"display_name\": \"Admin\",\r\n    \"route\": \"/admin\",\r\n    \"icon\": \"bx bx-cool\",\r\n    \r\n    \"status\": \"active\"\r\n}","export default function authHeader() {\r\n  \r\n  const user = JSON.parse(sessionStorage.getItem('user'));\r\n\r\n  if (user && user.accessToken) {\r\n    // return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\r\n    return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = `${process.env.REACT_APP_API_HOST}/api/test/`;\r\n\r\nclass UserService {\r\n  getListe_User() {\r\n \r\n    return axios.get(API_URL + 'liste_user' ,{ headers: authHeader() });\r\n  }\r\n  getPublicContent() {\r\n    return axios.get(API_URL + 'all');\r\n  }\r\n\r\n  getCemecaBoard() {\r\n    return axios.get(API_URL + 'cemeca', { headers: authHeader() });\r\n  }\r\n  getSofitechBoard() {\r\n    return axios.get(API_URL + 'sofitech', { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + 'admin-societe', { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import  { useState } from 'react'\r\nimport UserService from \"../services/user.service\";\r\n\r\n\r\n//admin user \r\nconst  AdminRole = ()=> {\r\n  const [admin,setadmin] = useState (false)\r\n \r\n        UserService.getAdminBoard().then(\r\n          () => {\r\n\r\n            setadmin(true)\r\n          },\r\n          error => {\r\n            setadmin(false);\r\n          }\r\n      );\r\n      return admin\r\n\r\n  }\r\n//admin sofitech \r\nconst  SofitechRole = ()=> {\r\n  const [sofitech,setsofitech] = useState (false)\r\n \r\n        UserService.getSofitechBoard().then(\r\n          () => {\r\n\r\n            setsofitech(true)\r\n          },\r\n          error => {\r\n            setsofitech(false);\r\n          }\r\n      );\r\n      return sofitech\r\n\r\n  }\r\n  //Cemeca user \r\nconst  CemecaRole = ()=> {\r\n  const [cemeca,setcemeca] = useState (false)\r\n \r\n        UserService.getCemecaBoard().then(\r\n          () => {\r\n\r\n            setcemeca(true)\r\n          },\r\n          error => {\r\n            setcemeca(false);\r\n          }\r\n      );\r\n      return cemeca\r\n\r\n  }\r\n  \r\n    \r\nexport default {AdminRole,SofitechRole,CemecaRole}","import React from 'react'\r\n\r\n//sidabr desactivation parametres\r\nexport const SidebarItedes = props => {\r\n\r\n    const active = props.desactive ? '' : 'desactive';\r\n\r\n    return (\r\n        <div className=\"sidebar__item\">\r\n            <div disabled className={`sidebar__item-inner ${active}`}>\r\n                <i className={props.icon}></i>\r\n                <span >\r\n                    {props.title}\r\n                    {props.status}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n//sidabr activation parametres\r\nexport  const SidebarIteact = props => {\r\n\r\n    const active = props.active ? 'active' : '';\r\n\r\n    return (\r\n        <div disabled className=\"sidebar__item\">\r\n            <div disabled className={`sidebar__item-inner ${active}`}>\r\n                <i className={props.icon}></i>\r\n                <span >\r\n                    {props.title}\r\n                    {props.status}\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/sofitech.28261e02.png\";","import { SidebarIteact } from \"./SidebarItem\";\r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../../assets/images/sofitech.png'\r\nimport AuthService from \"../../services/auth.service\";\r\nexport const SidbarTableActive = (props) => {\r\n    return (\r\n        <>\r\n        {props.actItem.map((item, index) => (\r\n                <Link to={item.route} key={index}  >\r\n                    <SidebarIteact key={index}\r\n                        title={item.display_name}\r\n                        icon={item.icon}\r\n                        active={(index === props.activeItem2) || (index === props.activeItem)}\r\n\r\n                    />\r\n                </Link>\r\n            ))}\r\n        </>\r\n     );\r\n}\r\nexport const SidbarImage =(props) =>{\r\n\r\n    const renderImage = () => {\r\n        if (props.mysofitech === true) {\r\n            return <img src={logo} alt=\"company logo\" />\r\n        }\r\n    }\r\n\r\n    return (\r\n    <>\r\n    {renderImage()}\r\n    </>\r\n    );\r\n}\r\nexport const SidbarTableDeconnexion = (props) =>{\r\n    // DECONNECTION\r\n    const logOut = () => { AuthService.logout() };\r\n    const active = props.active ? 'active' : '';\r\n    return (\r\n        <>\r\n          {props.user ? (\r\n                <div>\r\n                    <div className=\"sidebar__item\">\r\n                        <div className={`sidebar__item-inner${active}`}>\r\n                            <i className='bx bxs-log-out'></i>\r\n                            <a href=\"/login\" className=\"nav-link\" onClick={logOut}>Déconnexion</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"sidebar__item\">\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport './sidebar.css'\r\nimport AuthService from \"../../services/auth.service\";\r\nimport * as sidebareRoute from '../../assets/JsonData/sidebareRoute';\r\nimport Role from '../../controllers/Role';\r\nimport {SidbarTableActive,SidbarTableDeconnexion,SidbarImage} from './SidebarTableau';\r\n\r\n\r\nconst Sidebar = props => {\r\n\r\n    const user = AuthService.getCurrentUser()\r\n    const [new_sidbar, setSidbar] = useState([]);\r\n    const myadmin = Role.AdminRole();\r\n    const mysofitech = Role.SofitechRole()\r\n    // Get  URL from window location\r\n    const nameUrl = window.location.href.slice(21, 28)\r\n    //ACTIVE LINK\r\n    const activeItem = new_sidbar.findIndex(item => item.route.includes(props.location.pathname))\r\n    const activeItem2 = new_sidbar.findIndex(item => item.route === nameUrl)\r\n    //FILTER SIDEBAR CONNECTION && DECONNECTION\r\n    const actItem = new_sidbar.filter(task => task.status === \"active\")\r\n    // GET ROLE\r\n    useEffect(() => {\r\n        retrieveRole()\r\n    }, [myadmin, mysofitech])\r\n    const retrieveRole = () => {\r\n        if (user) {\r\n            if (myadmin && mysofitech) {\r\n                const nouveaustate = []\r\n                nouveaustate.push(sidebareRoute.Tableaudebord, sidebareRoute.ajouter, sidebareRoute.Societes, sidebareRoute.Actions, sidebareRoute.interlocuteurs, sidebareRoute.AdminDashboard, sidebareRoute.gestion);\r\n                setSidbar(nouveaustate)\r\n            }\r\n            else if (mysofitech && !myadmin) {\r\n                const nouveaustate = []\r\n                nouveaustate.push(sidebareRoute.Tableaudebord, sidebareRoute.ajouter, sidebareRoute.Societes, sidebareRoute.Actions, sidebareRoute.interlocuteurs);\r\n                setSidbar(nouveaustate)\r\n            }\r\n        }\r\n        //DECONNECTION\r\n        else {\r\n            const nouveaustate = []\r\n            nouveaustate.push(sidebareRoute.connexion);\r\n            setSidbar(nouveaustate)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebar__logo\">\r\n                <SidbarImage mysofitech={mysofitech} />\r\n            </div>\r\n            <SidbarTableActive\r\n                actItem={actItem}\r\n                activeItem2={activeItem2}\r\n                activeItem={activeItem}\r\n            />\r\n            <SidbarTableDeconnexion\r\n            user={user}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n\r\n","import React, {useRef} from 'react'\r\n\r\nimport './dropdown.css'\r\n\r\nconst clickOutsideRef = (content_ref, toggle_ref) => {\r\n    document.addEventListener('mousedown', (e) => {\r\n        // user click toggle\r\n        if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\r\n            content_ref.current.classList.toggle('active')\r\n        } else {\r\n            // user click outside toggle and content\r\n            if (content_ref.current && !content_ref.current.contains(e.target)) {\r\n                content_ref.current.classList.remove('active')\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nconst Dropdown = props => {\r\n\r\n    const dropdown_toggle_el = useRef(null)\r\n    const dropdown_content_el = useRef(null)\r\n\r\n    clickOutsideRef(dropdown_content_el, dropdown_toggle_el)\r\n    \r\n    return (\r\n        <div className='dropdown'>\r\n            <button ref={dropdown_toggle_el} className=\"dropdown__toggle\">\r\n                {\r\n                    props.icon ? <i className={props.icon}></i> : ''\r\n                }\r\n                {\r\n                    props.badge ? <span className='dropdown__toggle-badge'>{props.badge}</span> : ''\r\n                }\r\n                {\r\n                    props.customToggle ? props.customToggle() : ''\r\n                }\r\n            </button>\r\n            <div ref={dropdown_content_el} className=\"dropdown__content\">\r\n                {\r\n                    props.contentData && props.renderItems ? props.contentData.map((item, index) => props.renderItems(item, index)) : ''\r\n                }\r\n                {\r\n                    props.renderFooter ? (\r\n                        <div className=\"dropdown__footer\">\r\n                            {props.renderFooter()}\r\n                        </div>\r\n                    ) : ''\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropdown\r\n","const setMode = mode => {\r\n    return {\r\n        type: 'SET_MODE',\r\n        payload: mode\r\n    }\r\n}\r\n\r\nconst setColor = color => {\r\n    return {\r\n        type: 'SET_COLOR',\r\n        payload: color\r\n    }\r\n}\r\n\r\nconst getTheme = () => {\r\n    return {\r\n        type: 'GET_THEME'\r\n    }\r\n}\r\n\r\nconst exportDefault = {\r\n    setColor,\r\n    setMode,\r\n    getTheme\r\n}\r\n\r\nexport default exportDefault","import React, {useRef, useState, useEffect} from 'react'\r\n\r\nimport './thememenu.css'\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport ThemeAction from '../../redux/actions/ThemeAction'\r\n\r\nconst mode_settings = [\r\n    {\r\n        id: 'light',\r\n        name: 'Light',\r\n        background: 'light-background',\r\n        class: 'theme-mode-light'\r\n    },\r\n    {\r\n        id: 'dark',\r\n        name: 'Dark',\r\n        background: 'dark-background',\r\n        class: 'theme-mode-dark'\r\n    }\r\n]\r\n\r\nconst color_settings = [\r\n    {\r\n        id: 'blue',\r\n        name: 'Blue',\r\n        background: 'blue-color',\r\n        class: 'theme-color-blue'\r\n    },\r\n    {\r\n        id: 'red',\r\n        name: 'Red',\r\n        background: 'red-color',\r\n        class: 'theme-color-red'\r\n    },\r\n    {\r\n        id: 'cyan',\r\n        name: 'Cyan',\r\n        background: 'cyan-color',\r\n        class: 'theme-color-cyan'\r\n    },\r\n    {\r\n        id: 'green',\r\n        name: 'Green',\r\n        background: 'green-color',\r\n        class: 'theme-color-green'\r\n    },\r\n    {\r\n        id: 'orange',\r\n        name: 'Orange',\r\n        background: 'orange-color',\r\n        class: 'theme-color-orange'\r\n    },\r\n]\r\n\r\nconst clickOutsideRef = (content_ref, toggle_ref) => {\r\n    document.addEventListener('mousedown', (e) => {\r\n        // user click toggle\r\n        if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\r\n            content_ref.current.classList.toggle('active')\r\n        } else {\r\n            // user click outside toggle and content\r\n            if (content_ref.current && !content_ref.current.contains(e.target)) {\r\n                content_ref.current.classList.remove('active')\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nconst ThemeMenu = () => {\r\n\r\n    const user = AuthService.getCurrentUser()\r\n    const menu_ref = useRef(null)\r\n    const menu_toggle_ref = useRef(null)\r\n\r\n    clickOutsideRef(menu_ref, menu_toggle_ref)\r\n\r\n    const setActiveMenu = () => menu_ref.current.classList.add('active')\r\n\r\n    const closeMenu = () => menu_ref.current.classList.remove('active')\r\n\r\n    const [currMode, setcurrMode] = useState('light')\r\n\r\n    const [currColor, setcurrColor] = useState('blue')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setMode = mode => {\r\n        setcurrMode(mode.id)\r\n        localStorage.setItem('themeMode', mode.class)\r\n        dispatch(ThemeAction.setMode(mode.class))\r\n    }\r\n\r\n    const setColor = color => {\r\n        setcurrColor(color.id)\r\n        localStorage.setItem('colorMode', color.class)\r\n        dispatch(ThemeAction.setColor(color.class))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const themeClass = mode_settings.find(e => e.class === localStorage.getItem('themeMode', 'theme-mode-light'))\r\n\r\n        const colorClass = color_settings.find(e => e.class === localStorage.getItem('colorMode', 'theme-mode-light'))\r\n\r\n        if (themeClass !== undefined) setcurrMode(themeClass.id)\r\n\r\n        if (colorClass !== undefined) setcurrColor(colorClass.id)\r\n\r\n    }, []);\r\n\r\n    if(user){\r\n        \r\n    }\r\n\r\n    return (\r\n       \r\n        <div>\r\n            {user?(\r\n                <div>\r\n                     <button ref={menu_toggle_ref} className=\"dropdown__toggle\" onClick={() => setActiveMenu()}>\r\n                    <i className='bx bx-palette'></i>\r\n                    </button>\r\n                    <div ref={menu_ref} className=\"theme-menu\">\r\n                        <h4>Theme settings</h4>\r\n                        <button className=\"theme-menu__close\" onClick={() => closeMenu()}>\r\n                            <i className='bx bx-x'></i>\r\n                        </button>\r\n                        <div className=\"theme-menu__select\">\r\n                            <span>Choose mode</span>\r\n                            <ul className=\"mode-list\">\r\n                                {\r\n                                    mode_settings.map((item, index) => (\r\n                                        <li key={index} onClick={() => setMode(item)}>\r\n                                            <div className={`mode-list__color ${item.background} ${item.id === currMode ? 'active' : ''}`}>\r\n                                                <i className='bx bx-check'></i>\r\n                                            </div>\r\n                                            <span>{item.name}</span>\r\n                                        </li>\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"theme-menu__select\">\r\n                            <span>Choose color</span>\r\n                            <ul className=\"mode-list\">\r\n                                {\r\n                                    color_settings.map((item, index) => (\r\n                                        <li key={index} onClick={() => setColor(item)}>\r\n                                            <div className={`mode-list__color ${item.background} ${item.id === currColor ? 'active' : ''}`}>\r\n                                                <i className='bx bx-check'></i>\r\n                                            </div>\r\n                                            <span>{item.name}</span>\r\n                                        </li>\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n     \r\n            ):(\r\n                <div>               \r\n                </div>\r\n            )}\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeMenu\r\n","import axios from \"axios\";\r\n\r\n\r\nconst API_URL = `${process.env.REACT_APP_API_HOST}/api/auth/`;\r\n\r\n\r\n\r\n\r\nclass AuthAction {\r\n\r\n//creation de l'action \r\n  create(data){\r\n    return axios.post(API_URL + \"action\", data);\r\n  }\r\n//afficher tous les  l'actions\r\n  findAll(){\r\n    return axios.get(API_URL + \"action\");\r\n\r\n  };\r\n//modifier l'action \r\nupdate = (id, data) => {\r\n  return  axios.put(API_URL + `action/update/${id}`, data);\r\n};\r\n\r\n}\r\n\r\nexport default new AuthAction();\r\n","import React, { useEffect, useState } from 'react'\r\nimport AuthService from \"../../services/auth.service\";\r\nimport './topnav.css'\r\nimport { Link } from 'react-router-dom'\r\nimport Dropdown from '../dropdown/Dropdown'\r\nimport ThemeMenu from '../thememenu/ThemeMenu'\r\nimport user_menu from '../../assets/JsonData/user_menus.json'\r\nimport AuthAction from '../../services/Action'\r\nimport Moment from 'react-moment';\r\nimport 'moment/locale/fr';\r\n\r\nimport RoleUser from \"../../controllers/Role\";\r\nconst curr_user = {\r\n    username: 'pas de user',\r\n\r\n}\r\nconst user = AuthService.getCurrentUser();\r\n\r\nconst renderNotificationItem = (item, index) => (\r\n    <div className=\"notification-item\" key={index}>\r\n        <i class='bx bxs-notepad' ></i>\r\n        <span>{item.nom_societe} RDV:  <Moment fromNow>{item.date_rdv}</Moment></span>\r\n    </div>\r\n)\r\n\r\nconst renderUserToggle = (user) => (\r\n    <div className=\"topnav__right-user\">\r\n        <div className=\"topnav__right-user__image\">\r\n            <img src={user.image} alt=\"\" />\r\n        </div>\r\n        <div className=\"topnav__right-user__name\">\r\n            {user.display_name}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst renderUserMenu = (item, index) => (\r\n    <Link to='/' key={index}>\r\n        <div className=\"notification-item\">\r\n            <i className={item.icon}></i>\r\n            <span>{item.content}</span>\r\n        </div>\r\n    </Link>\r\n)\r\n\r\nconst Topnav = props => {\r\n    const [currentUser, setCurrentUser] = useState(undefined);\r\n    const [Action, SetAction] = useState([]);\r\n    const mysofitech = RoleUser.SofitechRole();\r\n\r\n\r\n    useEffect(() => {\r\n        const user = AuthService.getCurrentUser();\r\n        if (user) {\r\n            //ACTION\r\n            AuthAction.findAll().then((response) => {\r\n                SetAction(response.data)\r\n            })\r\n                .catch((e) => {\r\n                    console.log(e);\r\n                });\r\n\r\n            setCurrentUser(user)\r\n\r\n        }\r\n\r\n\r\n    }, [])\r\n    console.log(currentUser)\r\n     // Calculate the number of days left until password expiration\r\n   \r\n    // Rendre l'alerte d'expiration du mot de passe\r\n    const renderPasswordExpirationAlert = () => {\r\n        if (user && user.passwordLastChanged) {\r\n            const passwordExpirationDate = new Date(currentUser.passwordLastChanged);\r\n            \r\n            const daysUntilExpiration = Math.ceil(\r\n                (new Date() - passwordExpirationDate  ) / (1000 * 3600 * 24)\r\n            );\r\n    \r\n            if (30 - daysUntilExpiration <= 7 && daysUntilExpiration > 0) {\r\n                if (daysUntilExpiration === 0) {\r\n                    return (\r\n                        <a href=\"/change-password\" className=\"alert alert-warning\" role=\"alert\">\r\n                            Votre mot de passe expire demain.\r\n                        </a>\r\n                    );\r\n                }\r\n                return (\r\n                    <a href=\"/change-password\" className=\"alert alert-warning\" role=\"alert\">\r\n                        Votre mot de passe expirera dans {30- daysUntilExpiration} jours. \r\n                    </a>\r\n                );\r\n            } else if (daysUntilExpiration > 7) {\r\n                return (\r\n                    <a href=\"/change-password\" className=\"alert alert-success\" role=\"alert\">\r\n                        Votre mot de passe expirera dans {daysUntilExpiration} jours.\r\n                    </a>\r\n                );\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    \r\n \r\n    let date = new Date()\r\n    const mysn = 1000 * 3600 * 24\r\n    const fltr_date = Action.filter(task => (((new Date(task.date_rdv) - date) / mysn) < 7) && ((new Date(task.date_rdv) - date) / mysn) > 0)\r\n\r\n    const Action_util1 = fltr_date.filter(task => task.id_utili === currentUser.id)\r\n    return (\r\n        <div>\r\n            {user && mysofitech  ? (\r\n\r\n                <div className='topnav'>\r\n                    <div className=\"input-group mb-3\">\r\n                    {renderPasswordExpirationAlert()}\r\n                        <div className=\"topnav\">\r\n                            <div className=''>\r\n                            \r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"topnav__right\">\r\n                        <div className=\"topnav__right-item\">\r\n                            {/* dropdown here */}\r\n                            {currentUser  ? (\r\n\r\n\r\n                                    <div className=\"sidebar__item\">\r\n                                        <div className={`sidebar__item-inner`}>\r\n                                        \r\n                                            <i className='bx bxs-user-check' ></i>\r\n                                            <span >\r\n                                                {currentUser.username}\r\n                                            </span>\r\n                                        </div>\r\n                                        \r\n\r\n                                    </div>\r\n\r\n                            ) : (\r\n                                <Dropdown\r\n                                    customToggle={() => renderUserToggle(curr_user)}\r\n                                    contentData={user_menu}\r\n                                    renderItems={(item, index) => renderUserMenu(item, index)}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        <div className=\"topnav__right-item\">\r\n                            <Dropdown\r\n                                icon='bx bx-bell'\r\n                                badge={Action_util1.length}\r\n                                contentData={Action_util1}\r\n                                renderItems={(item, index) => renderNotificationItem(item, index)}\r\n\r\n                            />\r\n                            {/* dropdown here */}\r\n                        </div>\r\n                        <div className=\"topnav__right-item\">\r\n                            <ThemeMenu />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n            ) : (\r\n                <div>\r\n                </div>\r\n            )}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Topnav\r\n","import React from 'react'\r\n\r\nimport './statuscard.css'\r\n\r\nconst StatusCard = props => {\r\n    return (\r\n        <div className='status-card'>\r\n            <div className=\"status-card__icon\">\r\n                <i className={props.icon}></i>\r\n            </div>\r\n            <div className=\"status-card__info\">\r\n                <h4>{props.count}</h4>\r\n                <span>{props.title}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default StatusCard\r\n","\r\nimport axios from 'axios';\r\nconst API_URL =`${process.env.REACT_APP_API_HOST}/api/auth/`\r\n//action liste\r\nconst  ActionListe = async ()=> {\r\n  try {\r\n    let response = await axios.get(API_URL+\"action\");\r\n    return response.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n\r\n  //action poste\r\nconst  ActionPost = async ()=> {\r\n  try {\r\n    let response = await axios.post(API_URL+\"action\");\r\n    return response.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n  }\r\n\r\n\r\nexport default {ActionListe,ActionPost}","\r\nimport axios from 'axios';\r\nconst API_URL =`${process.env.REACT_APP_API_HOST}/`\r\n//cemecaa liste\r\nconst  CemecaListe = async ()=> {\r\n            try {\r\n              let response = await axios.get(API_URL+\"cemeca\");\r\n              return response.data;\r\n            } catch (error) {\r\n              if (error.response.status === 403) {\r\n                return 'Access denied';\r\n              } else {\r\n                console.log('An error occurred', error);\r\n              }\r\n            }\r\n          };\r\n\r\n\r\n  //sofitech liste\r\nconst  SofitechListe = async ()=> {\r\n    try {\r\n      let response = await axios.get(API_URL+\"sofitech\");\r\n      return response.data;\r\n    } catch (error) {\r\n      if (error.response.status === 403) {\r\n        return ('Access denied');\r\n      } else {\r\n        console.log('An error occurred', error);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  //all Societe\r\nconst AllSociete = async () => {\r\n    let response = await axios.get(API_URL+\"allsociete\")\r\n    return response.data;\r\n}\r\n\r\n\r\n\r\nexport default {CemecaListe,SofitechListe,AllSociete}","import Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Chip from '@mui/material/Chip';\r\nimport Moment from 'react-moment';\r\nimport { Link } from 'react-router-dom'\r\nconst ListeDashboard = (props) => {\r\n    const societeListe = props.societeListe\r\n    const myadmin = props.myadmin\r\n    const societe_util =props.societe_util\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card__header\">\r\n                <h3>Société</h3>\r\n            </div>\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Nom</TableCell>\r\n                                <TableCell align=\"center\">Observation</TableCell>\r\n                                <TableCell align=\"center\">Adresse postale</TableCell>\r\n                                <TableCell align=\"center\">Date d'ajout</TableCell>\r\n                                <TableCell align=\"center\">Statut</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {myadmin ? (\r\n                                societeListe.slice(props.page * props.rowsPerPage, props.page * props.rowsPerPage + props.rowsPerPage).map((row, index) => (\r\n                                    <TableRow\r\n                                        key={index}\r\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                    >\r\n                                        <TableCell align=\"center\"><a href={`/Societe/${row.siret}`}>{row.nom_soc}</a></TableCell>\r\n                                        <TableCell align=\"center\">{row.observation}</TableCell>\r\n                                        <TableCell align=\"center\">{row.adresse_local}</TableCell>\r\n                                        <TableCell align=\"center\"> <Moment fromNow>{row.createdAt}</Moment></TableCell>\r\n                                        {row.app_cemeca === 1 && (\r\n                                            <TableCell align=\"right\">\r\n\r\n                                                <Chip label=\" Adhérent Cemeca\" color=\"primary\" />\r\n\r\n\r\n                                            </TableCell>\r\n\r\n                                        )}\r\n                                        {row.app_sofitech === 1 && (\r\n                                            <TableCell align=\"center\">\r\n                                                <Chip label=\" Prospect Sofitech\" color=\"warning\" />\r\n                                            </TableCell>\r\n                                        )}\r\n                                    </TableRow>\r\n                                ))\r\n\r\n\r\n\r\n                            ) : (\r\n\r\n                                societe_util.slice(props.page * props.rowsPerPage, props.page * props.rowsPerPage + props.rowsPerPage).map((row, index) => (\r\n                                    <TableRow\r\n                                        key={index}\r\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                    >\r\n\r\n                                        <TableCell align=\"center\"><a href={`/Societe/${row.siret}`}>{row.nom_soc}</a></TableCell>\r\n                                        <TableCell align=\"center\">{row.observation}</TableCell>\r\n                                        <TableCell align=\"center\">{row.adresse_local}</TableCell>\r\n                                        <TableCell align=\"center\"> <Moment fromNow>{row.createdAt}</Moment></TableCell>\r\n                                        {row.app_cemeca === 1 && (\r\n                                            <TableCell align=\"right\">\r\n\r\n                                                <Chip label=\" Adhérent Cemeca\" color=\"primary\" />\r\n\r\n\r\n                                            </TableCell>\r\n\r\n                                        )}\r\n                                        {row.app_sofitech === 1 && (\r\n                                            <TableCell align=\"center\">\r\n                                                <Chip label=\" Prospect Sofitech\" color=\"warning\" />\r\n                                            </TableCell>\r\n                                        )}\r\n                                    </TableRow>\r\n                                ))\r\n\r\n                            )}\r\n\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[2, 5, 10]}\r\n                    labelRowsPerPage='lignes par page'\r\n                    component=\"div\"\r\n                    count={societeListe.length}\r\n                    rowsPerPage={props.rowsPerPage}\r\n                    page={props.page}\r\n                    onPageChange={props.handleChangePage}\r\n                    onRowsPerPageChange={props.handleChangeRowsPerPage}\r\n                    labelDisplayedRows={({ from, to, count }) => `Affichage des pages ${from}-${to} sur un total de  ${count} pages`}\r\n                />\r\n\r\n            </div>\r\n            <div className=\"card__footer\">\r\n                <Link to='Societes'>Voir plus</Link>\r\n            </div>\r\n        </div>\r\n\r\n      );\r\n}\r\n\r\nexport default ListeDashboard;","import Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Chip from '@mui/material/Chip';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom'\r\nconst ListeAction = (props) => {\r\n    const page2=props.page2\r\n    const handleChangePage2=props.handleChangePage2\r\n    const handleChangeRowsPerPage2=props.handleChangeRowsPerPage2\r\n    const Action= props.Action\r\n    const Action_util=props.Action_util\r\n    const rowsPerPage2=props.rowsPerPage2\r\n    const myadmin=props.myadmin\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card__header\">\r\n                <h3>Activité commerciale</h3>\r\n            </div>\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Nom société</TableCell>\r\n                                <TableCell align=\"center\">Date du RDV</TableCell>\r\n                                <TableCell align=\"center\">Nom interlocuteur</TableCell>\r\n                                <TableCell align=\"center\">Crédit_cop</TableCell>\r\n                                <TableCell align=\"center\">Etat</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n\r\n                        </TableBody>\r\n                        <TableBody>\r\n                            {myadmin ? (\r\n\r\n                                Action.slice(page2 * rowsPerPage2, page2 * rowsPerPage2 + rowsPerPage2).map((row, index) => (\r\n                                    <TableRow\r\n                                        key={index}\r\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                    >\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            <a href={`/modifier/${row.id}`}>{row.nom_societe}</a>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">{moment(row.date_rdv).format(\"DD  MMMM YYYY HH:mm\")}</TableCell>\r\n                                        <TableCell align=\"center\">{row.nom_interlocuteur}</TableCell>\r\n                                        <TableCell align=\"center\"> {row.credit_cop}</TableCell>\r\n                                        {row.validation === 'realiser' && (\r\n                                            <TableCell align=\"center\">\r\n\r\n                                                <Chip label=\"réalisé\" color=\"success\" />\r\n\r\n\r\n                                            </TableCell>\r\n\r\n                                        )}\r\n                                        {row.validation === 'non realiser' && (\r\n                                            <TableCell align=\"center\">\r\n                                                <Chip label=\"Non réalisé\" color=\"error\" />\r\n                                            </TableCell>\r\n                                        )}\r\n                                    </TableRow>\r\n\r\n                                ))\r\n\r\n\r\n\r\n                            ) : (\r\n                                Action_util.slice(page2 * rowsPerPage2, page2 * rowsPerPage2 + rowsPerPage2).map((row, index) => (\r\n                                    <TableRow\r\n                                        key={index}\r\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                    >\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            <a href={`/modifier/${row.id}`}>{row.nom_societe}</a>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">{moment(row.date_rdv).format(\"DD  MMMM YYYY HH:mm\")}</TableCell>\r\n                                        <TableCell align=\"center\">{row.nom_interlocuteur}</TableCell>\r\n                                        <TableCell align=\"center\"> {row.type_action}</TableCell>\r\n                                        {row.validation === 'realiser' && (\r\n                                            <TableCell align=\"center\">\r\n\r\n                                                <Chip label=\"réalisé\" color=\"success\" />\r\n\r\n\r\n                                            </TableCell>\r\n\r\n                                        )}\r\n                                        {row.validation === 'non realiser' && (\r\n                                            <TableCell align=\"center\">\r\n                                                <Chip label=\"Non réalisé\" color=\"error\" />\r\n                                            </TableCell>\r\n                                        )}\r\n                                    </TableRow>\r\n                                ))\r\n                            )}\r\n\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[2, 5, 10]}\r\n                    labelRowsPerPage='lignes par page'\r\n                    component=\"div\"\r\n                    count={Action_util.length}\r\n                    rowsPerPage={rowsPerPage2}\r\n                    page={page2}\r\n                    onPageChange={handleChangePage2}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage2}\r\n                    labelDisplayedRows={({ from, to, count }) => `Affichage des pages ${from}-${to}`}\r\n                />\r\n\r\n            </div>\r\n            <div className=\"card__footer\">\r\n                <Link to='AllAction'>Voir plus </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListeAction;","import { useSelector } from 'react-redux'\r\nimport Chart from 'react-apexcharts'\r\nconst ChartDate = (props) => {\r\n    const themeReducer = useSelector(state => state.ThemeReducer.mode)\r\n    const chartOptions = {\r\n        series: [{\r\n            name: 'Action',\r\n            data: props.tableau_action\r\n        }],\r\n        options: {\r\n            color: ['#6ab04c', '#2980b9'],\r\n            chart: {\r\n                background: 'transparent'\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            xaxis: {\r\n                categories: ['JAN', 'FÉV', 'MAR', 'AVR', 'MAI', 'JUN', 'JUL', 'AOÛ', 'SEP', 'OCT', 'NOV', 'DÉC']\r\n            },\r\n            legend: {\r\n                position: 'top'\r\n            },\r\n            grid: {\r\n                show: false\r\n            }\r\n        }\r\n    }\r\n    return ( \r\n        <div className=\"card full-height\">\r\n\r\n                                <Chart\r\n                                    options={themeReducer === 'theme-mode-dark' ? {\r\n                                        ...chartOptions.options,\r\n                                        theme: { mode: 'dark' }\r\n                                    } : {\r\n                                        ...chartOptions.options,\r\n                                        theme: { mode: 'light' }\r\n                                    }}\r\n                                    series={chartOptions.series}\r\n                                    type='line'\r\n                                    height='100%'\r\n                                />\r\n                            </div>\r\n     );\r\n}\r\n \r\nexport default ChartDate;","import { useSelector } from 'react-redux'\r\nimport Chart from 'react-apexcharts'\r\nconst ChartDate = (props) => {\r\n    const themeReducer = useSelector(state => state.ThemeReducer.mode)\r\n    const chartOptions = {\r\n        series: [{\r\n            name: 'Action',\r\n            data: props.tableau_societe\r\n        }],\r\n        options: {\r\n            color: ['#6ab04c', '#2980b9'],\r\n            chart: {\r\n                background: 'transparent'\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            xaxis: {\r\n                categories: ['JAN', 'FÉV', 'MAR', 'AVR', 'MAI', 'JUN', 'JUL', 'AOÛ', 'SEP', 'OCT', 'NOV', 'DÉC']\r\n            },\r\n            legend: {\r\n                position: 'top'\r\n            },\r\n            grid: {\r\n                show: false\r\n            }\r\n        }\r\n    }\r\n    return ( \r\n        <div className=\"card full-height\">\r\n\r\n                                <Chart\r\n                                    options={themeReducer === 'theme-mode-dark' ? {\r\n                                        ...chartOptions.options,\r\n                                        theme: { mode: 'dark' }\r\n                                    } : {\r\n                                        ...chartOptions.options,\r\n                                        theme: { mode: 'light' }\r\n                                    }}\r\n                                    series={chartOptions.series}\r\n                                    type='line'\r\n                                    height='100%'\r\n                                />\r\n                            </div>\r\n     );\r\n}\r\n \r\nexport default ChartDate;","import { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport Stack from '@mui/material/Stack';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nconst InputDate = (props) => {\r\n    return ( \r\n        <>\r\n         <p>Date début d'action</p>\r\n        <LocalizationProvider dateAdapter={AdapterMoment} >\r\n            <Stack spacing={5}>\r\n                <DesktopDatePicker\r\n                    value={props.valueDate1}\r\n                    onChange={props.handleChangeDate1}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                />\r\n            </Stack>\r\n        </LocalizationProvider>\r\n        </>  \r\n     );\r\n}\r\n \r\nexport default InputDate;","import { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport Stack from '@mui/material/Stack';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nconst InputDateFin = (props) => {\r\n    return ( \r\n        <>\r\n        <p>Date fin d'action</p>\r\n       <LocalizationProvider dateAdapter={AdapterMoment} >\r\n           <Stack spacing={5}>\r\n               <DesktopDatePicker\r\n                   value={props.valueDate2}\r\n                   onChange={props.handleChangeDate2}\r\n                   renderInput={(params) => <TextField {...params} />}\r\n               />\r\n           </Stack>\r\n       </LocalizationProvider>\r\n       </>  \r\n\r\n     );\r\n}\r\n \r\nexport default InputDateFin;","import React, { useEffect, useState } from 'react'\r\nimport StatusCard from '../components/status-card/StatusCard'\r\nimport 'moment/locale/fr';\r\nimport Box from '@mui/material/Box';\r\nimport AuthAction from \"../controllers/Action\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport RoleUser from \"../controllers/Role\";\r\nimport Societe from '../controllers/Societe';\r\n//components\r\nimport ListeSociete from '../components/societe/ListeDashbord'\r\nimport ListeAction from '../components/action/ListeDashboard'\r\nimport ChartDateAction from '../components/chart/chartAction';\r\nimport ChartDateSociete from '../components/chart/chartSociete';\r\nimport InputDateDebut from '../components/Date/inputDate';\r\nimport InputDateFin from '../components/Date/inputDate2';\r\nimport { getStatusCardAdmin } from '../components/card/statuscardadmin';\r\nimport  { getStatusCardEvolis } from '../components/card/statuscardEvolis';\r\nimport { fncardadmin } from '../components/card/statuscard';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Dashboard = () => {\r\n    const history = useHistory();\r\n    //GET user\r\n    const user = AuthService.getCurrentUser();\r\n    //GET role admin\r\n    const myadmin = RoleUser.AdminRole();\r\n    //GET role sofitech\r\n    const mysofitech = RoleUser.SofitechRole();\r\n    //GET role cemece\r\n    const mycemeca = RoleUser.CemecaRole()\r\n\r\n    \r\n\r\n    //GET societer\r\n    const [societeListe, Setsociete] = useState([])\r\n    //GET actions\r\n    const [Action, SetAction] = useState([]);\r\n    const Action_util = Action.filter(task => task.id_utili === user.id)\r\n    Action.sort((b, a) => new Date(a.date_rdv).getTime() - new Date(b.date_rdv).getTime());\r\n    //GET societes\r\n    const societe_util = societeListe.filter(task => task.id_utili === user.id)\r\n    societeListe.sort((b, a) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime());\r\n    console.log(societe_util)\r\n    //refreh data\r\n    useEffect(() => {\r\n        if (user) {\r\n            //ACTION\r\n            AuthAction.ActionListe()\r\n            .then(data => SetAction(data))\r\n            .catch(error => {\r\n                console.log('Error fetching data:', error);\r\n                SetAction(null); // set the data to null to indicate an error\r\n              });\r\n            //afficher cemeca\r\n            if (mycemeca) Societe.CemecaListe().then(data => Setsociete(data))\r\n\r\n            //afficher sofitech\r\n            if (mysofitech) Societe.AllSociete().then(data => Setsociete(data))\r\n\r\n        }\r\n    }, [mycemeca, mysofitech])\r\n    // date time input field Action\r\n    const event = new Date();\r\n    event.setMonth(event.getMonth() + 1);\r\n    const [valueDate1, setValueDate1] = React.useState(\"\");\r\n    const [valueDate2, setValueDate2] = React.useState(\"\");\r\n    const handleChangeDate1 = (newValue) => {\r\n        setValueDate1(newValue);\r\n    };\r\n    const handleChangeDate2 = (newValue) => {\r\n        setValueDate2(newValue);\r\n    };\r\n    //filter Month action chart\r\n    const tableau_action = []\r\n    const tableau_societe = []\r\n    for (let index = 0; index < 12; index++) {\r\n        tableau_action.push(Action.filter(task => (((new Date(task.date_action)).getMonth() === index))).length)\r\n        tableau_societe.push(societeListe.filter(task => (((new Date(task.createdAt)).getMonth() === index))).length)\r\n    }\r\n\r\n    const mysn = 1000 * 3600 * 24\r\n    const fltr_date = Action.filter(task => (((new Date(task.date_rdv) - valueDate2) / mysn) < 0) && ((new Date(task.date_rdv) - valueDate1) / mysn) > 0)\r\n    const filtre_date_Action_util1 = fltr_date.filter(task => task.id_utili === user.id)\r\n    //card contrat\r\n    const StatusContrat = [\r\n        {\r\n            \"icon\": \"bx bxs-contact\",\r\n            \"count\": 0,\r\n            \"title\": \"Sociétaire SOFITECH \"\r\n        }\r\n    ]\r\n    //card acrion admin\r\n    const statusCardAdmin = getStatusCardAdmin({fltr_date})\r\n    const statusCardEvolis = getStatusCardEvolis({fltr_date})\r\n      //carde action user\r\n      const statusCard = fncardadmin({filtre_date_Action_util1})\r\n   \r\n\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [page, setPage] = React.useState(0);\r\n    const handleChangePage = ( newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    const [rowsPerPage2, setRowsPerPage2] = React.useState(10);\r\n    const [page2, setPage2] = React.useState(0);\r\n    const handleChangePage2 = (event, newPage) => {\r\n        setPage2(newPage);\r\n    };\r\n    const handleChangeRowsPerPage2 = (event) => {\r\n        setRowsPerPage2(+event.target.value);\r\n        setPage2(0);\r\n    };\r\n    const navigateToEvolis = (fltr_date) => {\r\n        // Use the useHistory hook to get access to the history object\r\n        history.push({\r\n          pathname: '/Evolis',\r\n          state: { fltr_date }, // Pass the filterObject in the state property\r\n        });\r\n      };\r\n      const handleClickGoToEvolis = () => {\r\n        navigateToEvolis(fltr_date);\r\n      };\r\n      console.log(fltr_date)\r\n    return (\r\n\r\n        <div>\r\n            {/* si le client est connecter*/}\r\n            {user ? (\r\n                <div>\r\n                    <h2 className=\"page-header\">Tableau de bord\r\n                    </h2>\r\n                    <Box\r\n                        component=\"form\"\r\n                        sx={{\r\n                            '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                        }}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6\">\r\n                                    <InputDateDebut\r\n                                         valueDate1={valueDate1}\r\n                                         handleChangeDate1={handleChangeDate1}\r\n                                       />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                    <InputDateFin\r\n                                         valueDate2={valueDate2}\r\n                                         handleChangeDate2={handleChangeDate2}\r\n                                       />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Box>\r\n                    <div className=\"row\">\r\n                        {/* carte des actions  */}\r\n                        <div className=\"col-6\">\r\n                            <div className=\"row\">\r\n                                <div>\r\n                                    {myadmin ? (\r\n                                        <div className='row'>\r\n                                            {\r\n                                                statusCard.map((item, index) => (\r\n                                                    <div className=\"col-6\" key={index}>\r\n                                                        <a href=\"AllAction\">\r\n                                                            <StatusCard\r\n                                                                icon={item.icon}\r\n                                                                count={item.count}\r\n                                                                title={item.title}\r\n                                                            />\r\n                                                        </a>\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                            {\r\n                                                statusCardAdmin.map((item, index) => (\r\n                                                    <div className=\"col-6\" key={index}>\r\n                                                        <a href=\"AllAction\">\r\n                                                            <StatusCard\r\n                                                                icon={item.icon}\r\n                                                                count={item.count}\r\n                                                                title={item.title}\r\n                                                            />\r\n                                                        </a>\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n\r\n                                        </div>\r\n                                    ) : (\r\n                                         <div className='row'>\r\n                                           \r\n                                               {\r\n                                                statusCard.map((item, index) => (             \r\n                                                        <div className=\"col-6\" key={index}>\r\n                                                            <a href=\"#\">\r\n                                                                <StatusCard\r\n                                                                    icon={item.icon}\r\n                                                                    count={item.count}\r\n                                                                    title={item.title}\r\n                                                                />\r\n                                                            </a>\r\n                                                        </div>                               \r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* chart graphique des clients  */}\r\n                        <div className=\"col-6\">\r\n                            <ChartDateAction\r\n                                tableau_action={tableau_action}\r\n                            />\r\n                        </div>\r\n                        {/* cart des societe clientes  */}\r\n                        {\r\n                            statusCardEvolis.map((item, index) => (\r\n                                <div className=\"col-6\" key={index}>\r\n                                    <div className=\"row justify-content-md-center\">\r\n                                        <div className=\"col-4\" key={index}>\r\n                                        <button onClick={handleClickGoToEvolis}>\r\n            {/* Pass the props to the StatusCard component */}\r\n            <StatusCard icon={item.icon}  title={item.title} />\r\n          </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        \r\n                        \r\n                        <div className=\"col-6\">\r\n                            <ChartDateSociete\r\n                                tableau_societe={tableau_societe}\r\n                            />\r\n                        </div>\r\n                        {/* dernier societe cree */}\r\n                        <div className=\"col-6\">\r\n                            <ListeSociete\r\n                                handleChangeDate={handleChangePage}\r\n                                societeListe={societeListe}\r\n                                societe_util={societe_util}\r\n                                page={page}\r\n                                myadmin={myadmin}\r\n                                rowsPerPage={rowsPerPage}\r\n                                handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                            />\r\n                        </div>\r\n                        {/* dernier action cree */}\r\n                        <div className=\"col-6\">\r\n                            <ListeAction\r\n                                handleChangeDate2={handleChangePage2}\r\n                                Action={Action}\r\n                                Action_util={Action_util}\r\n                                page2={page2}\r\n                                myadmin={myadmin}\r\n                                rowsPerPage2={rowsPerPage2}\r\n                                handleChangeRowsPerPage2={handleChangeRowsPerPage2}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            ) :\r\n\r\n                (\r\n                    <div className=\"sidebar__item\">\r\n                        <div disabled className={`sidebar__item-inner `}>\r\n                            <i className='bx bxs-user-x' ></i>\r\n                            <span >\r\n                                pas connecter\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","\r\nexport const getStatusCardAdmin = (props) => {\r\n    return [\r\n      {\r\n        \"icon\": \"bx bxs-user-detail\",\r\n        \"count\": props.fltr_date.length,\r\n        \"title\": \"Activités commerciales\"\r\n      }\r\n    ];\r\n  }\r\n  \r\n","export const getStatusCardEvolis = (props) => {\r\n    return [\r\n      {\r\n        \"icon\": \"bx bx-line-chart\",\r\n        \"count\": props.fltr_date.length,\r\n        \"title\": \"Evolis\"\r\n      }\r\n    ];\r\n  }\r\n  ","export const fncardadmin = (props) => {\r\n  return [\r\n    {\r\n      \"icon\": \"bx bxs-user-detail\",\r\n      \"count\": props.filtre_date_Action_util1.length,\r\n      \"title\": \"Activités commerciales\"\r\n    }\r\n  ];\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport SvgIcon from '@mui/material/SvgIcon';\r\nimport PropTypes from 'prop-types';\r\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons/faEllipsisV';\r\nimport { faFile } from '@fortawesome/free-solid-svg-icons/faFile';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons/faUser';\r\nimport AuthService from \"../services/auth.service\";\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\nimport Stack from '@mui/material/Stack';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport '../components/topnav/topnav.css'\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\n//material ui table\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TablePagination,\r\n} from '@material-ui/core';\r\nimport RoleUser from \"../controllers/Role\";\r\nimport Societe from '../controllers/Societe';\r\n//css\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    secondary: {\r\n      light: '#ff7961',\r\n      main: '#f44336',\r\n      dark: '#ba000d',\r\n      contrastText: '#000',\r\n    },\r\n  },\r\n  tableContainer: {\r\n    borderRadius: 15,\r\n    margin: '10px 10px',\r\n    maxWidth: 1350\r\n  },\r\n  tableHeaderCell: {\r\n    sx: '4',\r\n    fontWeight: 'bold',\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.getContrastText(theme.palette.secondary.dark)\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.primary.light,\r\n    color: theme.palette.getContrastText(theme.palette.primary.light)\r\n  },\r\n  name: {\r\n    fontWeight: 'bold',\r\n    color: theme.palette.secondary.dark\r\n  },\r\n  status: {\r\n    fontWeight: 'bold',\r\n    fontSize: '0.75rem',\r\n    color: 'white',\r\n    backgroundColor: 'grey',\r\n    borderRadius: 8,\r\n    display: 'inline-block'\r\n  }\r\n}));\r\nconst FontAwesomeSvgIcon = React.forwardRef((props, ref) => {\r\n  const { icon } = props;\r\n\r\n  const {\r\n    icon: [width, height, , , svgPathData],\r\n  } = icon;\r\n\r\n  return (\r\n    <SvgIcon ref={ref} viewBox={`0 0 ${width} ${height}`}>\r\n      {typeof svgPathData === 'string' ? (\r\n        <path d={svgPathData} />\r\n      ) : (\r\n        /**\r\n         * A multi-path Font Awesome icon seems to imply a duotune icon. The 0th path seems to\r\n         * be the faded element (referred to as the \"secondary\" path in the Font Awesome docs)\r\n         * of a duotone icon. 40% is the default opacity.\r\n         *\r\n         * @see https://fontawesome.com/how-to-use/on-the-web/styling/duotone-icons#changing-opacity\r\n         */\r\n        svgPathData.map((d, i) => (\r\n          <path style={{ opacity: i === 0 ? 0.4 : 1 }} d={d} />\r\n        ))\r\n      )}\r\n    </SvgIcon>\r\n  );\r\n});\r\n\r\nFontAwesomeSvgIcon.propTypes = {\r\n  icon: PropTypes.any.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\nfunction Customers() {\r\n\r\n\r\n\r\n\r\n\r\n  //liste des users\r\n  const classes = useStyles();\r\n  const user = AuthService.getCurrentUser()\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [ListTest, SetTest] = useState([]);\r\n  //GET role sofitech\r\n  const mysofitech = RoleUser.SofitechRole();\r\n  //GET role cemece\r\n  const mycemeca = RoleUser.CemecaRole();\r\n  //GET societer\r\n  const [searchAll, setSearchAll] = useState(\"\");\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0); // Reset the page to the first one when changing rows per page\r\n  };\r\n  //SELECT WHERE SEARCH INPUT\r\n  const onChangeSearchAll = (e) => {\r\n    const searchAll = e.target.value;\r\n    setSearchAll(searchAll);\r\n    const nom = ListTest.filter((val) => {\r\n      if (val.nom_soc.toLowerCase().includes(searchAll.toLowerCase())) {\r\n        return val\r\n      }\r\n    })\r\n    const code_postal = ListTest.filter((val) => {\r\n      if (String(val.code_postal).includes(searchAll)) {\r\n        return val\r\n      }\r\n    })\r\n    const siret = ListTest.filter((val) => {\r\n      if (String(val.siret).includes(searchAll)) {\r\n        return val\r\n      }\r\n    })\r\n    const siren = ListTest.filter((val) => {\r\n      if (String(val.siren).includes(searchAll)) {\r\n        return val\r\n      }\r\n    })\r\n\r\n    if (nom.length !== 0) {\r\n      console.log(nom)\r\n      SetFilter(nom);\r\n    }\r\n    if (code_postal.length !== 0) {\r\n      console.log(true)\r\n      SetFilter(code_postal);\r\n    }\r\n    if (siret.length !== 0) {\r\n      console.log(true)\r\n      SetFilter(siret);\r\n    }\r\n    if (siren.length !== 0) {\r\n      console.log(true)\r\n      SetFilter(siren);\r\n    }\r\n\r\n  };\r\n  //SELECT ALL SOCIETES (CEMECA/SOFITECH)\r\n  const retrieveTutorials = () => {\r\n    if (user) {\r\n      //afficher cemca\r\n      if (mycemeca) Societe.CemecaListe().then(data => SetTest(data))\r\n        ;\r\n      //afficher sofitech\r\n      if (mysofitech) Societe.AllSociete().then(data => SetTest(data))\r\n        ;\r\n    }\r\n\r\n  };\r\n\r\n\r\n  const [Filter, SetFilter] = useState(ListTest);\r\n  //USE_EFFECT\r\n  useEffect(() => {\r\n    retrieveTutorials()\r\n  }, [mysofitech, mycemeca, searchAll]);\r\n  useEffect(() => {\r\n    ListTest.sort((b, a) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime())\r\n  }, [Filter]);\r\n\r\n  const tableCellStyle = { fontSize: '11px' };\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* liste des connections */}\r\n\r\n      <div className=\"list row\">\r\n        <h2 className=\" col-md-6 page-`header\">Liste des Sociétés</h2>\r\n        {/* SEARCH INPUT */}\r\n        <div className=\"col-md-4 list\">\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"topnav\">\r\n              <div className=\"topnav__search\">\r\n                <input type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Recherche \"\r\n                  value={searchAll}\r\n                  onChange={onChangeSearchAll}\r\n                />\r\n                <i className='bx bx-search'></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* TABLEAU DES SOCIETES */}\r\n\r\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n          <TableContainer sx={{ maxHeight: 550 }}>\r\n            <Table sx={{ minWidth: 650 }} size=\"small\" stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n              <TableRow>\r\n        <TableCell style={tableCellStyle}>\r\n          🏢 Société\r\n        </TableCell>\r\n        <TableCell align='left' style={{ ...tableCellStyle, minWidth: 50 }}>\r\n          📮 Adresse postale\r\n        </TableCell>\r\n        <TableCell align='left' style={{ ...tableCellStyle, minWidth: 50 }}>\r\n          👤 Interlocuteur\r\n        </TableCell>\r\n        <TableCell align='left' style={{ ...tableCellStyle, minWidth: 50 }}>\r\n          ℹ️ Info\r\n        </TableCell>\r\n        <TableCell align='left' style={{ ...tableCellStyle, minWidth: 50 }}>\r\n          ⚙️ Action\r\n        </TableCell>\r\n      </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {Filter.length ? (\r\n                  Filter.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                    <TableRow key={row.name}>\r\n                      <TableCell align='left' style={{ ...tableCellStyle, minWidth: 50 }}>\r\n                        <Grid container >\r\n                          <Grid item lg={10}>\r\n                            <Typography className={classes.name} color=\"textSecondary\" variant=\"body2\"><i class='bx bxs-bank'></i><a href={`/Societe/${row.siret}`}>{row.nom_soc}</a></Typography>\r\n                            <Typography variant=\"body3\" >{row.siret}</Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </TableCell>\r\n\r\n                      <TableCell align='left' style={{ ...tableCellStyle, minWidth: 50 }}>\r\n                        <Grid >\r\n                          <Typography style={{ minWidth: 50 }}>{row.code_postal} {row.ville_soc} </Typography>\r\n                          <Typography color=\"textSecondary\" variant=\"body2\">{row.adresse_local}</Typography>\r\n                        </Grid>\r\n\r\n                      </TableCell>\r\n\r\n\r\n\r\n\r\n\r\n                      <TableCell align='left' style={{ minWidth: 50 }}>\r\n                        <Button startIcon={<FontAwesomeIcon icon={faUser} />} href={`/Interlocuteur/${row.siret}`} variant=\"outlined\" size=\"small\"> +\r\n                        </Button>\r\n                      </TableCell>\r\n\r\n                      <TableCell align='left' style={{ minWidth: 50 }}>\r\n                        <IconButton aria-label=\"Example\" href={`/Societe/${row.siret}`} >\r\n                          <FontAwesomeSvgIcon icon={faFile} />\r\n                        </IconButton>\r\n                      </TableCell>\r\n\r\n                      <TableCell align='left' style={{ minWidth: 50 }}>\r\n                        <IconButton aria-label=\"Example\" href={`/Action/${row.siret}`} >\r\n                          <FontAwesomeSvgIcon icon={faEllipsisV} />\r\n                        </IconButton>\r\n                      </TableCell>\r\n\r\n\r\n                    </TableRow>\r\n                  ))\r\n                ) : (\r\n                  ListTest.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                    <TableRow key={row.name}>\r\n                      <TableCell align='left' style={{ ...tableCellStyle, minWidth: 50 }}>\r\n                        <Grid container >\r\n                          <Grid item lg={10}>\r\n                            <Typography className={classes.name} color=\"textSecondary\" variant=\"body2\"><i class='bx bxs-bank'></i><a href={`/Societe/${row.siret}`}>{row.nom_soc}</a></Typography>\r\n                            <Typography variant=\"body3\" >{row.siret}</Typography>\r\n                            <Typography color=\"textSecondary\" variant=\"body2\">{row.siren}</Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </TableCell>\r\n\r\n                      <TableCell align='left' style={{ ...tableCellStyle, minWidth: 50 }}>\r\n                        <Grid >\r\n                          <Typography style={{ ...tableCellStyle}}>{row.code_postal} {row.ville_soc} </Typography>\r\n                          <Typography style={{ ...tableCellStyle}} color=\"textSecondary\" variant=\"body2\">{row.adresse_local}</Typography>\r\n                        </Grid>\r\n\r\n                      </TableCell>\r\n\r\n\r\n\r\n\r\n\r\n                      <TableCell align='left' style={{ ...tableCellStyle, minWidth: 50 }}>\r\n                        <Button startIcon={<FontAwesomeIcon icon={faUser} />} href={`/Interlocuteur/${row.siret}`} variant=\"outlined\" size=\"small\"> +\r\n                        </Button>\r\n                      </TableCell>\r\n\r\n                      <TableCell align='left' style={{ ...tableCellStyle, minWidth: 50 }}>\r\n                        <IconButton aria-label=\"Example\" href={`/Societe/${row.siret}`} >\r\n                          <FontAwesomeSvgIcon icon={faFile} />\r\n                        </IconButton>\r\n                      </TableCell>\r\n\r\n                      <TableCell align='left' style={{ ...tableCellStyle, minWidth: 50 }}>\r\n                        <IconButton aria-label=\"Example\" href={`/Action/${row.siret}`} >\r\n                          <FontAwesomeSvgIcon icon={faEllipsisV} />\r\n                        </IconButton>\r\n                      </TableCell>\r\n\r\n\r\n                    </TableRow>\r\n                  ))\r\n\r\n                )}\r\n\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            component=\"div\"\r\n            count={ListTest.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n\r\n        </Paper>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Customers\r\n","\r\nimport {isEmail} from \"validator\";\r\n\r\n\r\nclass checkedForm{\r\n\r\n   required = value => {\r\n    if (!value) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          This field is required!\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vemail = value => {\r\n    if (!isEmail(value)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          This is not a valid email.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n   vrole = value => {\r\n    if (isNaN(value)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          This is not a valid role.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vusername = value => {\r\n    if (value.length < 3 || value.length > 20) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          The username must be between 3 and 20 characters.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vpassword = value => {\r\n    if (value.length < 6 || value.length > 40) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          The password must be between 6 and 40 characters.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n}\r\nexport default new checkedForm();\r\n","import React, { useState, useRef ,useEffect} from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport checkForm from \"../common/Register/checkedForm\"\r\nimport AuthService from \"../services/auth.service\";\r\nimport UserService from \"../services/user.service\";\r\n//react table\r\n//material ui table\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/fr';\r\n\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Avatar,\r\n  Grid,\r\n  Typography,\r\n  TablePagination,\r\n  TableFooter,\r\n} from '@material-ui/core';\r\n\r\n\r\nconst Register = (props) => {\r\n  //css style\r\n  //css\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 200,\r\n  },\r\n  tableContainer: {\r\n      borderRadius: 15,\r\n      margin: '10px 10px',\r\n      maxWidth: 950\r\n  },\r\n  tableHeaderCell: {\r\n      fontWeight: 'bold',\r\n      backgroundColor: theme.palette.primary.dark,\r\n      color: theme.palette.getContrastText(theme.palette.primary.dark)\r\n  },\r\n  avatar: {\r\n      backgroundColor: theme.palette.primary.light,\r\n      color: theme.palette.getContrastText(theme.palette.primary.light)\r\n  },\r\n  name: {\r\n      fontWeight: 'bold',\r\n      color: theme.palette.secondary.dark\r\n  },\r\n  status: {\r\n      fontWeight: 'bold',\r\n      fontSize: '0.75rem',\r\n      color: 'white',\r\n      backgroundColor: 'grey',\r\n      borderRadius: 8,\r\n      padding: '3px 10px',\r\n      display: 'inline-block'\r\n  }\r\n}));\r\n    //variable liste des UserService\r\n  const [listuser,setListeUser] = useState([]);\r\n   //variable liste authetification\r\n   const [listauth, setListeAuth] = useState([]);\r\n   const listauthRef = useRef();\r\n   listauthRef.current = listauth;\r\n  //register user variable\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n  const vrole = checkForm.vrole;\r\n  const vusername =checkForm.vusername;\r\n  const vpassword = checkForm.vpassword;\r\n  const vemail = checkForm.vemail;\r\n  const required = checkForm.required;\r\n//les status des variable\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [roles, setRoles] = useState([]);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n //useEffect de toute la table Register\r\n  useEffect(() => {\r\n    retrieveTutorials();\r\n    retrieveUsers();\r\n  }, []);\r\n\r\n\r\n\r\n //afficher la liste des users\r\n  const retrieveUsers = () => {\r\n    UserService.getListe_User()\r\n      .then((response) => {\r\n        setListeUser(response.data);\r\n\r\n      })\r\n  };\r\n  console.log(UserService.getListe_User())\r\n\r\n\r\n   //afficher la liste des hauthentification\r\n  const retrieveTutorials = () => {\r\n    AuthService.get_historique_auth()\r\n      .then((response) => {\r\n        setListeAuth(response.data);\r\n      })\r\n\r\n  };\r\n  listauth.sort((b, a) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime());\r\n /* const refreshList = () => {\r\n    retrieveTutorials();\r\n  };\r\n\r\n\r\n  const deleteTutorial = (rowIndex) => {\r\n    const id = listauthRef.current[rowIndex].id;\r\n    console.log(id)\r\n\r\n    AuthService.remove_historiqueremove(id)\r\n      .then((response) => {\r\n        props.history.push(\"Register\");\r\n\r\n        let newTutorials = [...listauthRef.current];\r\n        newTutorials.splice(rowIndex, 1);\r\n\r\n        setListeAuth(newTutorials);\r\n      })\r\n      .catch((e) => {\r\n        console.log('tets');\r\n      });\r\n  };\r\n    const openTutorial = (rowIndex) => {\r\n    const id = listauthRef.current[rowIndex].id;\r\n\r\n    props.history.push(\"/tutorials/\" + id);\r\n  };\r\n  */\r\n\r\n\r\n\r\n\r\n  //liste des users\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = ( newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n    /*const colu = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Userame\",\r\n        accessor: \"username\",\r\n      },\r\n      {\r\n        Header: \"Role\",\r\n        accessor: \"role\",\r\n      },\r\n\r\n      {\r\n        Header: \"Actions\",\r\n        accessor: \"actions\",\r\n        Cell: (props) => {\r\n          const rowIdx = props.row.id;\r\n          return (\r\n            <div>\r\n              <span onClick={() => openTutorial(rowIdx)}>\r\n                <i className=\"far fa-edit action mr-2\"></i>\r\n              </span>\r\n\r\n              <span onClick={() => deleteTutorial(rowIdx)}>\r\n                <i className=\"bx bxs-trash-alt action\"></i>\r\n              </span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data: listauth,\r\n  });\r\n  */\r\n    //crud ajouter un user\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n  const onChangeRoles = (e) => {\r\n    const role = e.target.value;\r\n    setRoles([...roles,role]);\r\n\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    setMessage(\"\");\r\n    setSuccessful(false);\r\n    form.current.validateAll();\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthService.register(username, email,roles, password).then(\r\n        (response) => {\r\n          setMessage(response.data.message);\r\n          setSuccessful(true);\r\n        },\r\n\r\n        (error) => {\r\n            console.log(roles)\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n          setMessage(resMessage);\r\n          setSuccessful(false);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n\r\n        <h1>\r\n          gestion utilisateur\r\n        </h1>\r\n    {/* liste des users */}\r\n        <div className=\"card card-container\">\r\n          <div className=\"list row\">\r\n            <div className=\"col-md-12 list\">\r\n              <h3>Listes des Utilisateurs</h3>\r\n                  <TableContainer component={Paper} className={classes.tableContainer}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell className={classes.tableHeaderCell}>nom</TableCell>\r\n                          <TableCell className={classes.tableHeaderCell}>email</TableCell>\r\n                          <TableCell className={classes.tableHeaderCell}>password</TableCell>\r\n                          <TableCell className={classes.tableHeaderCell}>Status</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {listuser.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                          <TableRow key={row.name}>\r\n                            <TableCell>\r\n                                <Grid container>\r\n                                    <Grid item lg={2}>\r\n                                        <Avatar alt={row.name} src='.' className={classes.avatar}/>\r\n                                    </Grid>\r\n                                    <Grid item lg={10}>\r\n                                        <Typography className={classes.name}>{row.name}</Typography>\r\n                                        <Typography color=\"textSecondary\" variant=\"body2\">{row.username}</Typography>\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n                              </TableCell>\r\n                            <TableCell>\r\n                                <Typography color=\"primary\" variant=\"subtitle2\">{row.email}</Typography>\r\n                                <Typography color=\"textSecondary\" variant=\"body2\">{row.company}</Typography>\r\n                              </TableCell>\r\n                            <TableCell>*********</TableCell>\r\n                            <TableCell>\r\n                                <Typography\r\n                                  className={classes.status}\r\n                                  style={{\r\n                                      backgroundColor:\r\n                                      ((row.status === 'Active' && 'green') ||\r\n                                      (row.status === 'Pending' && 'blue') ||\r\n                                      (row.status === 'Blocked' && 'orange'))\r\n                                  }}\r\n                                >{row.status}</Typography>\r\n                              </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                      <TableFooter>\r\n                      <TablePagination\r\n                          rowsPerPageOptions={[5, 10, 15]}\r\n                          component=\"div\"\r\n                          count={listuser.length}\r\n                          rowsPerPage={rowsPerPage}\r\n                          page={page}\r\n                          onChangePage={handleChangePage}\r\n                          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                      />\r\n                      </TableFooter>\r\n                    </Table>\r\n                  </TableContainer>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    {/* liste des connections */}\r\n        <div className=\"card card-container\">\r\n          <div className=\"list row\">\r\n            <div className=\"col-md-12 list\">\r\n              <h3>Historique des Authentifications</h3>\r\n\r\n                <TableContainer component={Paper} className={classes.tableContainer}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell className={classes.tableHeaderCell}>Username</TableCell>\r\n                          <TableCell className={classes.tableHeaderCell}>Password</TableCell>\r\n                          <TableCell className={classes.tableHeaderCell}>Message</TableCell>\r\n                          <TableCell className={classes.tableHeaderCell}>Date De Connection</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {listauth.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                          <TableRow key={row.name}>\r\n                            <TableCell>\r\n                                <Grid container>\r\n                                    <Grid item lg={2}>\r\n                                        <Avatar alt={row.name} src='.' className={classes.avatar}/>\r\n                                    </Grid>\r\n                                    <Grid item lg={10}>\r\n                                        <Typography className={classes.name}>{row.name}</Typography>\r\n                                        <Typography color=\"textSecondary\" variant=\"body2\">{row.username}</Typography>\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n                              </TableCell>\r\n\r\n                            <TableCell>{row.password}</TableCell>\r\n                            <TableCell>\r\n                                <Typography\r\n                                  className={classes.status}\r\n                                  style={{\r\n                                      backgroundColor:\r\n                                      ((row.message === 'Connexion établie  !' && 'green') ||\r\n                                      (row.message === 'Connexion échouée  !' && 'red'))\r\n                                  }}\r\n                                >{row.message}</Typography>\r\n                              </TableCell>\r\n                              <TableCell>\r\n                                <Typography color=\"primary\" variant=\"subtitle2\">{moment(row.date_connection).format(\"DD  MMMM YYYY HH:mm\")}</Typography>\r\n\r\n                              </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                      <TableFooter>\r\n                      <TablePagination\r\n                          rowsPerPageOptions={[5, 10, 15]}\r\n                          component=\"div\"\r\n                          count={listauth.length}\r\n                          rowsPerPage={rowsPerPage}\r\n                          page={page}\r\n                          onChangePage={handleChangePage}\r\n                          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                      />\r\n                      </TableFooter>\r\n                    </Table>\r\n                  </TableContainer>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    {/* ajouter un user */}\r\n          <div className=\"card card-container\">\r\n            <h3>Ajouter un utilisateur</h3>\r\n              <Form onSubmit={handleRegister} ref={form}>\r\n                {!successful && (\r\n                    <div>\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"username\"\r\n                          value={username}\r\n                          onChange={onChangeUsername}\r\n                          validations={[required, vusername]}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"email\"\r\n                          value={email}\r\n                          onChange={onChangeEmail}\r\n                          validations={[required, vemail]}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <Input\r\n                          type=\"password\"\r\n                          className=\"form-control\"\r\n                          name=\"password\"\r\n                          value={password}\r\n                          onChange={onChangePassword}\r\n                          validations={[required, vpassword]}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"form-check container\">\r\n                        <div className=\"row\">\r\n                        <label className=\"form-check-label\" htmlFor=\"role\">cemeca</label>\r\n                        <Input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check\"\r\n                          name=\"cemeca\"\r\n                          value=\"1\"\r\n                          onChange={onChangeRoles}\r\n                          validations={[required, vrole]}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"role\">sofitech</label>\r\n                          <Input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check\"\r\n                          name=\"sofitech\"\r\n                          value=\"2\"\r\n                          onChange={onChangeRoles}\r\n                          validations={[required, vrole]}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"role\">admin cemeca</label>\r\n                          <Input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check\"\r\n                          name=\"admin_cemeca\"\r\n                          value=\"3\"\r\n                          onChange={onChangeRoles}\r\n                          validations={[required, vrole]}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"role\">admin sofitech</label>\r\n                          <Input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check\"\r\n                          name=\"admin_sofitech\"\r\n                          value=\"4\"\r\n                          onChange={onChangeRoles}\r\n                          validations={[required, vrole]}\r\n                        />\r\n                        </div>\r\n                          <label className=\"form-check-label\" htmlFor=\"role\">super_cemeca</label>\r\n                          <Input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check\"\r\n                          name=\"super_cemeca\"\r\n                          value=\"5\"\r\n                          onChange={onChangeRoles}\r\n                          validations={[required, vrole]}\r\n                        />\r\n                          <label className=\"form-check-label\" htmlFor=\"role\">super_sofitech</label>\r\n                          <Input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check\"\r\n                          name=\"super_sofitech\"\r\n                          value=\"6\"\r\n                          onChange={onChangeRoles}\r\n                          validations={[required, vrole]}\r\n                        />\r\n                          <label className=\"form-check-label\" htmlFor=\"role\">super_admin</label>\r\n                          <Input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check\"\r\n                          name=\"super_admin1\"\r\n                          value=\"7\"\r\n                          onChange={onChangeRoles}\r\n                          validations={[required, vrole]}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"role\">super_admin2</label>\r\n                        <Input\r\n                        type=\"checkbox\"\r\n                        className=\"form-check\"\r\n                        name=\"super_admin2\"\r\n                        value=\"8\"\r\n                        onChange={onChangeRoles}\r\n                        validations={[required, vrole]}\r\n                      />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary btn-block\">Ajouter</button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {message && (\r\n                    <div className=\"form-group\">\r\n                      <div\r\n                        className={\r\n                          successful\r\n                            ? \"alert alert-success\"\r\n                            : \"alert alert-danger\"\r\n                        }\r\n                        role=\"alert\"\r\n                      >\r\n                        {message}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n              </Form>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n  export default Register;\r\n\r\n","export default __webpack_public_path__ + \"static/media/Spinner-5.e9202c75.gif\";","import React from \"react\";\r\nimport LoaderGif from'../assets/images/Spinner-5.gif'\r\nexport default function Loader(){\r\n    return (\r\n        <div className=\"-position\">\r\n         <img src={LoaderGif} alt=\"\" />\r\n        </div>\r\n    )\r\n}","import React, { useState, useRef } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Form from \"react-validation/build/form\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport Modal from '@mui/material/Modal';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport Fade from '@mui/material/Fade';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Loader from \"../components/LoadingPage\";\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://crm.sofitech.pro/\">\r\n        sofitech & cemeca\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nconst Login = () => {\r\n  let history = useHistory();\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(undefined);\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [showVerificationModal, setShowVerificationModal] = useState(false);\r\n  const [verificationCode, setVerificationCode] = useState(\"\");\r\n  const [verificationError, setVerificationError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messagevalidation, setMessagevalidation] = useState(\"\");\r\n  const openVerificationModal = () => {\r\n    setShowVerificationModal(true);\r\n  };\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    setMessage(\"\");\r\n\r\n    form.current.validateAll();\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthService.login(username, password).then(\r\n        (response) => {\r\n          const message = 'Mail envoyé. Vérifiez votre boîte de réception pour le code de vérification.';\r\n          const password = '********'\r\n          setLoading(true)\r\n          setMessage(message);\r\n          setSuccessful(true);\r\n          setTimeout(() => {\r\n                setLoading(false)\r\n                openVerificationModal();\r\n              }, 1000)\r\n\r\n\r\n          AuthService.create_historique_auth(username, password, message).then(\r\n            () => {\r\n            },\r\n            (error) => {\r\n              const resMessage =\r\n                (error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n              setMessage(resMessage);\r\n\r\n            }\r\n          );\r\n        },\r\n        (error) => {\r\n          const message = 'connection echouer !'\r\n          AuthService.create_historique_auth(username, password, message).then(\r\n            () => {\r\n            },\r\n            (error) => {\r\n              const resMessage =\r\n                (error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n              setMessage(resMessage);\r\n            }\r\n          );\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setMessage(resMessage);\r\n          console.log(message)\r\n        }\r\n      );\r\n    } else {\r\n\r\n    }\r\n  };\r\n  const handleVerification = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!verificationCode) {\r\n      setVerificationError(\"Veuillez saisir le code de vérification.\");\r\n      return;\r\n    }\r\n\r\n    AuthService.twoFactorAuth(username,verificationCode).then(\r\n      (data) => {\r\n        if (data.accessToken) {\r\n          sessionStorage.setItem(\"user\", JSON.stringify(data));\r\n          history.push(\"/\"); // Rediriger vers la page principale en cas de succès\r\n        } else {\r\n          setVerificationError(\"Code de vérification incorrect ou expiré.\");\r\n        }\r\n      },\r\n      (error) => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setVerificationError(resMessage);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n\r\n    <div className=\"col-md-12\">\r\n      {loading ?\r\n        (\r\n        <div className=\"card card-container\">\r\n        <ThemeProvider theme={theme}>\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <Box\r\n              sx={{\r\n                marginTop: 8,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n                <br></br>\r\n                <Loader />\r\n              </Typography>\r\n              <a href=\"/forget-password\">Mot de passe oublier ?</a>\r\n\r\n            </Box>\r\n            <Copyright sx={{ mt: 8, mb: 4 }} />\r\n          </Container>\r\n        </ThemeProvider>\r\n\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n     \r\n      </div>)\r\n        : (\r\n          <div className=\"card card-container\">\r\n          <ThemeProvider theme={theme}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n              <CssBaseline />\r\n              <Box\r\n                sx={{\r\n                  marginTop: 8,\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                  <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                  Sign in\r\n                </Typography>\r\n                <Box component=\"form\" onSubmit={handleLogin} noValidate sx={{ mt: 1 }}>\r\n                  <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    onChange={onChangeUsername}\r\n                    id=\"email\"\r\n                    label=\"Identifiant\"\r\n                    name=\"username\"\r\n                    value={username}\r\n                    autoComplete=\"username\"\r\n                    autoFocus\r\n                  />\r\n                  <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={onChangePassword}\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                  >\r\n                    Connection\r\n                  </Button >\r\n                  {message && (\r\n            <div className=\"form-group\">\r\n              <div\r\n                className={\r\n                  successful\r\n                    ? \"alert alert-success\"\r\n                    : \"alert alert-danger\"\r\n                }\r\n                role=\"alert\"\r\n              >\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n                  <Grid container>\r\n                    <Grid item xs>\r\n                    <a href=\"/forget-password\">Mot de passe oublier ?</a>\r\n                    </Grid>\r\n                    <Grid item>\r\n\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </Box>\r\n              <Copyright sx={{ mt: 8, mb: 4 }} />\r\n            </Container>\r\n          </ThemeProvider>\r\n\r\n          <Form onSubmit={handleLogin} ref={form}>\r\n\r\n            <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n          </Form>\r\n          <div className=\"col-md-12\">\r\n      {/* ... Le reste du code ... */}\r\n      {/* Modal de vérification 2FA */}\r\n      <Modal\r\n        open={showVerificationModal}\r\n        onClose={() => setShowVerificationModal(false)}\r\n        closeAfterTransition\r\n     \r\n      >\r\n        <Fade in={showVerificationModal}>\r\n          {/* Utiliser le composant Container pour centrer le modal */}\r\n          <Container maxWidth=\"sm\" style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", height: \"100vh\" }}>\r\n            <Box sx={{ bgcolor: 'background.paper', boxShadow: 24, p: 4, borderRadius: 8 }}>\r\n            {message && (\r\n            <div className=\"form-group\">\r\n              <div\r\n                className={\r\n                  successful\r\n                    ? \"alert alert-success\"\r\n                    : \"alert alert-danger\"\r\n                }\r\n                role=\"alert\"\r\n              >\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n              <h4 className=\"modal-title\">Vérification 2FA</h4>\r\n              <form onSubmit={handleVerification}>\r\n                <div className=\"form-group\">\r\n              \r\n                  <label htmlFor=\"verificationCode\">Code de vérification</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"verificationCode\"\r\n                    required\r\n                    value={verificationCode}\r\n                    onChange={(e) => setVerificationCode(e.target.value)}\r\n                  />\r\n                </div>\r\n                {verificationError && (\r\n                  <div className=\"alert alert-danger\" role=\"alert\">\r\n                    {verificationError}\r\n                  </div>\r\n                )}\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Vérifier\r\n                </button>\r\n              </form>\r\n            </Box>\r\n          </Container>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n        </div>\r\n        )}\r\n\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport Form from \"react-validation/build/form\";\r\nimport Box from '@mui/material/Box';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport Button from '@mui/material/Button';\r\nimport AuthAction from '../services/Action';\r\nimport AuthService from \"../services/auth.service\";\r\nimport RoleUser from \"../controllers/Role\";\r\nimport moment from \"moment\";\r\nimport Societe from '../controllers/Societe';\r\nimport 'moment/locale/fr';\r\nimport Switch from '@mui/material/Switch';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport UserService from '../services/user.service';\r\nimport { accordionActionsClasses } from '@mui/material';\r\n\r\nconst ActionDetails = () => {\r\n  const [showFullDescription, setFullDescription] = useState(false);\r\n  const myadmin = RoleUser.AdminRole();\r\n  const ReadMore = ({ children }) => {\r\n    const text = children;\r\n    const [isReadMore, setIsReadMore] = useState(true);\r\n    const toggleReadMore = () => {\r\n      setIsReadMore(!isReadMore);\r\n    };\r\n\r\n    if (!text) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <p className=\"text\">\r\n        {isReadMore ? text.slice(0, 30) : text}\r\n        <span onClick={toggleReadMore} className=\"read-or-hide\">\r\n          {isReadMore ? \"...read more\" : \" show less\"}\r\n        </span>\r\n      </p>\r\n    );\r\n  };\r\n\r\n  const user = AuthService.getCurrentUser();\r\n  const [Vali, setVali] = useState({});\r\n  const [Action, SetAction] = useState([]);\r\n  const [ACtionFilter, SetActionFilter] = useState([]);\r\n  const [Etat, setEtat] = useState([]);\r\n  const [Test, setTest] = useState([]);\r\n  const [societeListe,SetsocieteListe]=useState([]);\r\n  const label = { inputProps: { 'aria-label': 'Color switch demo' } };\r\n  const [realiserFilter, setRealiserFilter] = useState(false);\r\n  const [ setSuccessful] = useState(false);\r\n  const [ setMessage] = useState(\"\");\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [listuser, setListeUser] = useState([]);\r\n  const mysofitech = RoleUser.SofitechRole();\r\n//GET role cemece\r\nconst mycemeca = RoleUser.CemecaRole\r\n  const tableRef = useRef(null);\r\n\r\n\r\n  const retrieveActions = () => {\r\n    if (user) {\r\n      AuthAction.findAll()\r\n        .then((response) => {\r\n          SetAction(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    }\r\n  };\r\n\r\n   //SELECT ALL SOCIETES (CEMECA/SOFITECH)\r\n   const retrieveSociete = () => {\r\n    if (user) {\r\n    //afficher cemca\r\n    if (mycemeca) Societe.CemecaListe().then(data => SetsocieteListe(data))\r\n    ;\r\n  //afficher sofitech\r\n    if (mysofitech) Societe.AllSociete().then(data => SetsocieteListe(data))\r\n    ;\r\n    }\r\n  };\r\n  const retrieveUsers = () => {\r\n    UserService.getListe_User()\r\n      .then((response) => {\r\n        setListeUser(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  const valideAction = (e) => {\r\n    var data = {\r\n      id: Test,\r\n      validation: Etat,\r\n    };\r\n\r\n    e.preventDefault();\r\n    form.current.validateAll();\r\n    if (checkBtn.current && checkBtn.current.context && checkBtn.current.context._errors.length === 0) {\r\n      AuthAction.update(Test, data)\r\n        .then(response => {\r\n          setVali({\r\n            id: response.data.id,\r\n            validation: response.data.validation,\r\n          });\r\n          setSuccessful(true);\r\n          window.location.reload();\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveActions();\r\n    retrieveUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (myadmin) {\r\n      SetActionFilter(Action);\r\n      Action.sort((b, a) => new Date(a.date_rdv).getTime() - new Date(b.date_rdv).getTime());\r\n    } else {\r\n      const data = Action.filter((task) => task.id_utili === user.id);\r\n      data.sort((b, a) => new Date(a.date_rdv).getTime() - new Date(b.date_rdv).getTime());\r\n      SetActionFilter(data);\r\n\r\n    }\r\n\r\n    // Apply the filter based on \"Etat\" (Status)\r\n    if (realiserFilter) {\r\n      SetActionFilter((prevFilter) => prevFilter.filter((task) => task.validation === 'non realiser'));\r\n      if (mysofitech) Societe.AllSociete().then(data => SetsocieteListe(data))\r\n    ;\r\n    } else {\r\n       if (mysofitech) Societe.AllSociete().then(data => SetsocieteListe(data))\r\n    ;\r\n    }\r\n\r\n    // Apply the filter based on the search term\r\n    if (searchTerm !== '') {\r\n      SetActionFilter((prevFilter) =>\r\n        prevFilter.filter((task) => task.nom_societe.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      );\r\n    }\r\n\r\n    // Update the page when filters change\r\n  }, [myadmin, Action, searchTerm, realiserFilter,mysofitech]);\r\n\r\n  const handleSearchChange = (event) => {\r\n    const searchTerm = event.target.value || '';\r\n    setSearchTerm(searchTerm);\r\n  };\r\n\r\n  const renderCardRow = (e) => {\r\n    const isRealiser = e.validation === 'realiser';\r\n    console.log(\"Action data:\", e);\r\n    console.log(\"societeListe:\", societeListe);\r\n    console.log(\"Filtered:\", societeListe.filter((task) => task.nom_soc.toLowerCase() === e.nom_societe.toLowerCase()));\r\n \r\n    return (\r\n      <TableRow key={e.id} style={{ fontSize: '10px' }}>\r\n\r\n<TableCell style={{ fontSize: '8px' }}>\r\n{societeListe\r\n  .filter((task) => task.nom_soc.toLowerCase() === e.nom_societe.toLowerCase())\r\n  .map((index) => (\r\n    <a href={`/Societe/${index.siret}`} key={index.id}>\r\n      {index.nom_soc}\r\n    </a>\r\n  ))\r\n}\r\n</TableCell>\r\n        {myadmin &&\r\n          (listuser.filter((task) => task.id === e.id_utili)).map((index) => (\r\n            <TableCell style={{ fontSize: '8px' }}>\r\n              <Typography variant=\"body2\" key={index.id} style={{ fontSize: '8px' }}>\r\n                {index.username}\r\n              </Typography>\r\n            </TableCell>\r\n          ))}\r\n        <TableCell style={{ fontSize: '10px' }}>\r\n          {moment(e.date_rdv).format('DD MMMM YYYY HH:mm')}\r\n        </TableCell>\r\n        <TableCell style={{ fontSize: '8px' }}>{e.nom_interlocuteur}</TableCell>\r\n        <TableCell style={{ fontSize: '8px' }}>{e.besoin}</TableCell>\r\n        <TableCell style={{ fontSize: '8px' }}><ReadMore>{e.description}</ReadMore></TableCell>\r\n        <TableCell style={{ fontSize: '8px' }}>\r\n          {moment(e.createdAt).format('DD MMMM YYYY HH:mm')}\r\n        </TableCell>\r\n        <TableCell style={{ fontSize: '8px' }}>\r\n     <Form onSubmit={valideAction} ref={form}>\r\n  <button\r\n    className=\"btn\"\r\n    onClick={() => {\r\n      setTest(e.id);\r\n      setMessage(isRealiser ? 'Activité commerciale Réalisée Annulée' : 'Activité commerciale Réalisée');\r\n      setEtat(isRealiser ? 'non realiser' : 'realiser');\r\n    }}\r\n    value={Vali.id = e.id}\r\n    name=\"id\"\r\n    style={{\r\n      fontSize: '8px',\r\n      padding: '4px',\r\n      color: isRealiser ? 'white' : 'black',\r\n      backgroundColor: isRealiser ? 'green' : 'red',\r\n      border: 'none',\r\n      cursor: 'pointer',\r\n    }}\r\n  >\r\n    {isRealiser ? 'Réalisé' : 'Non Réalisé'}\r\n  </button>\r\n  <CheckButton style={{ display: 'none' }} ref={checkBtn} />\r\n</Form>\r\n      </TableCell>\r\n      <TableCell>\r\n      <Button\r\n        href={`/Actions/modifier/${e.id}`}\r\n        color=\"warning\"\r\n        size=\"small\"\r\n        style={{ fontSize: '8px' }}\r\n        startIcon={<EditIcon />} // Add the icon to the startIcon prop\r\n      >\r\n      </Button>\r\n    </TableCell>\r\n      </TableRow>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ minWidth: 275 }}>\r\n      <div className=\"row\">\r\n        <Grid container alignItems=\"center\">\r\n          <Grid item xs={12} md={4}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"recherche par Société\"\r\n              value={searchTerm}\r\n              onChange={handleSearchChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={2}>\r\n            <Switch\r\n              {...label}\r\n              onChange={() => setRealiserFilter(!realiserFilter)}\r\n              checked={realiserFilter}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6} container justifyContent=\"flex-end\">\r\n            {/* Add the Download Button */}\r\n            <DownloadTableExcel\r\n              filename={\"Compte-rendu\"}\r\n              sheet={\"Compte-rendu\"}\r\n              currentTableRef={tableRef.current}\r\n            >\r\n              <Button variant=\"contained\" color=\"success\" >\r\n                Excel\r\n              </Button>\r\n            </DownloadTableExcel>\r\n\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <div variant=\"outlined\">\r\n          <TableContainer component={Paper}>\r\n            <Table ref={tableRef}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell style={{ width: '60px', fontSize: '10px' }}>Société</TableCell>\r\n                  <TableCell style={{ width: '80px', fontSize: '10px' }}>Commerciale</TableCell>\r\n                  <TableCell style={{ width: '120px', fontSize: '10px' }}>Date activité commerciale</TableCell>\r\n                  <TableCell style={{ width: '120px', fontSize: '10px' }}>INTERLOCUTEUR</TableCell>\r\n                  <TableCell style={{ width: '100px', fontSize: '10px' }}>Besoin</TableCell>\r\n                  <TableCell style={{ width: '100px', fontSize: '10px' }}>Description</TableCell>\r\n                  <TableCell style={{ width: '100px', fontSize: '10px' }}>Date d'ajout</TableCell>\r\n                  <TableCell style={{ width: '70px', fontSize: '10px' }}>Etat</TableCell>\r\n                  <TableCell style={{ width: '70px', fontSize: '10px' }}>Modifier</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {ACtionFilter.map(renderCardRow)}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n         \r\n        </div>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ActionDetails;\r\n","import axios from \"axios\";\r\n\r\n\r\nconst API_URL = `${process.env.REACT_APP_API_HOST}/api/auth/`;\r\n\r\n\r\n\r\nclass AuthInterlocuteur {\r\n\r\n//creation de l'interlocuteur\r\n  create(data){\r\n    return axios.post(API_URL + \"interlocuteur\", data);\r\n  }\r\n \r\n//afficher les interlocuteurs\r\n  findAll(){\r\n    return axios.get(API_URL + \"interlocuteur\");\r\n\r\n  };\r\n\r\n//modifier les interlocuteurs\r\n  update = (id, data) => {\r\n  return  axios.put(API_URL + `interlocuteur/update/${id}`, data);\r\n};\r\n \r\n}\r\n\r\nexport default new AuthInterlocuteur();\r\n","\r\n//sidebar data json\r\nimport sidebar_items from '../assets/JsonData/sidebar_routes.json'\r\nimport Grid from '@mui/material/Grid';\r\n//require React\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Button from '@mui/material/Button';\r\n//React validation\r\nimport Form from \"react-validation/build/form\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n//require page Action\r\nimport AuthAction from \"../services/Action\";\r\n//require page Interlocuteur\r\nimport AuthInter from \"../services/Interlocuteur\";\r\nimport { useHistory } from 'react-router-dom';\r\n//controlleur service\r\nimport AuthService from \"../services/auth.service\";\r\n//import mui\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n//import checkbox from multiselect-react-dropdown'\r\nimport Multiselect from 'multiselect-react-dropdown';\r\n// centre d'affaire json data\r\nimport liste from \"../assets/JsonData/centre-affaire.json\";\r\nimport besoinliste from \"../assets/JsonData/besoin.json\";\r\nimport RoleUser from \"../controllers/Role\";\r\nimport Societe from '../controllers/Societe';\r\nimport Evolis from '../assets/JsonData/Evolis.json';\r\nimport Modal from 'react-modal';\r\n\r\nconst Action = (props) => {\r\n  let history = useHistory();\r\n  const [myJSON, setactive] = useState([]);\r\n  const [myJSON2, setactive2] = useState([]);\r\n  const [myJSON3, setactive3] = useState([]);\r\n  const [EvolisJson, setEvolisjSon] = useState([]);\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n  const [ID_societe, setID_societe] = useState([]);\r\n  const [new_sidbar, setSidbar] = useState(sidebar_items)\r\n  const [interlocuteur, setInterlocuteur] = useState([])\r\n  const [Credit, setCredit] = useState(false);\r\n  const [Factor, setFactor] = useState(false);\r\n  const sofitech = RoleUser.SofitechRole();\r\n  const [showInvestissementProductif, setShowInvestissementProductif] = useState(false);\r\n  //GET role cemece\r\n  const cemeca = RoleUser.CemecaRole();\r\n  const user = AuthService.getCurrentUser();\r\n  myJSON2.join()\r\n  useEffect(() => {\r\n    if (user) {\r\n      // INTERLOCUTEUR\r\n      AuthInter.findAll()\r\n        .then((response) => {\r\n          setInterlocuteur(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n\r\n      // Check if \"Investissement productif\" is in the selected besoin\r\n      if (myJSON2.join().includes(\"Investissement productif\")) {\r\n        setShowInvestissementProductif(true);\r\n      }\r\n    }\r\n  }, [myJSON2.join()]);\r\n  useEffect(() => {\r\n    if (user) {\r\n      //afficher cemca\r\n      if (cemeca) Societe.CemecaListe().then(data => setID_societe(data))\r\n        ;\r\n      //afficher sofitech\r\n      if (sofitech) Societe.AllSociete().then(data => setID_societe(data))\r\n        ;\r\n    }\r\n  }, [sofitech, cemeca])\r\n  console.log(ID_societe)\r\n\r\n  // Get ID from URL\r\n  const params = useParams();\r\n\r\n  var nb = parseInt(params.id);\r\n\r\n  //aficher sidbar action\r\n  const action = '/Action/' + params\r\n  console.log(action);\r\n\r\n  if (props.location.pathname === action) {\r\n    const nouveaustate = [...new_sidbar]\r\n    nouveaustate[5].status = \"active\"\r\n  }\r\n\r\n\r\n\r\n  const land = (e) => {\r\n    setactive(Array.isArray(e) ? e.map(x => x.NOM) : [])\r\n  }\r\n\r\n  const land2 = (e) => {\r\n    setactive2(Array.isArray(e) ? e.map(x => x.NOM) : [])\r\n  }\r\n  const land3 = (e) => {\r\n    setactive3(Array.isArray(e) ? e.map(x => x.nom) : [])\r\n  }\r\n  const land4 = (e) => {\r\n    setEvolisjSon(Array.isArray(e) ? e.map(x => x.NOM) : [])\r\n  }\r\n\r\n  //filter action where siret\r\n  const actItem = ID_societe.filter(task => task.siret === nb)\r\n  //filter interlocuteur where siret\r\n  const filterInter = interlocuteur.filter(task => task.id_soc === nb)\r\n  console.log(filterInter)\r\n\r\n\r\n  //intitial Action\r\n  const initial1ctionState = {\r\n    id_utili: \"\",\r\n    nom_interlocuteur: \"\",\r\n    type_action: \"\",\r\n    nom_societe: \"\",\r\n    description: \"\",\r\n    date_action: \"\",\r\n    date_rdv: \"\",\r\n    date_factor: \"\",\r\n    date_assur: \"\",\r\n    nom_assur: \"\",\r\n    nom_factor: \"\",\r\n    besoin: \"\",\r\n    investissement: \"\",\r\n    montant: \"\",\r\n    credit_cop: \"\",\r\n    validation: \"non realiser\"\r\n\r\n  };\r\n\r\n\r\n  //ajouter l'action\r\n  const [Action, setAction] = useState({ initial1ctionState });\r\n \r\n  const saveAction = (e) => {\r\n    const credit_cop = myJSON.join();\r\n    const besoin = myJSON2.join();\r\n    const interl = myJSON3.join();\r\n    const investissement = EvolisJson.join();\r\n \r\n    var data = {\r\n      nom_interlocuteur: interl,\r\n      nom_societe: actItem[0].nom_soc,\r\n      date_rdv: Action.date_rdv,\r\n      date_action: new Date(),\r\n      date_factor: Action.date_factor,\r\n      date_assur: Action.date_assur,\r\n      montant: Action.montant,\r\n      nom_assur: Action.nom_assur,\r\n      nom_factor: Action.nom_factor,\r\n      id_utili: user.id,\r\n      type_action: Action.type_action,\r\n      description: Action.description,\r\n      besoin: besoin,\r\n      investissement: investissement,\r\n      credit_cop: credit_cop,\r\n      validation: \"non realiser\"\r\n    };\r\n    e.preventDefault();\r\n    form.current.validateAll();\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthAction.create(data)\r\n        .then(response => {\r\n          setAction({\r\n            nom_interlocuteur: response.data.nom_interlocuteur,\r\n            nom_societe: response.data.nom_societe,\r\n            date_rdv: response.data.date_rdv,\r\n            date_action: response.data.date_action,\r\n            investissement: response.data.investissement,\r\n            besoin: response.data.besoin,\r\n            montant: response.data.montant,\r\n            id_utili: response.data.id_utili,\r\n            type_action: response.data.type_action,\r\n            description: response.data.description,\r\n            validation: response.data.validation\r\n          }\r\n          );\r\n          setSuccessful(true);\r\n          setMessage(\"activité commerciale ajoutée avec succès :)\")\r\n          setTimeout(() => {\r\n            history.push(\"/AllAction\");\r\n          }, 1000)\r\n\r\n        },\r\n          error => {\r\n            const resMessage =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n            setMessage(resMessage);\r\n          }\r\n        )\r\n\r\n    }\r\n  };\r\n  \r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setAction({ ...Action, [name]: value });\r\n\r\n  };\r\n     \r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      {/* ajouter des actions */}\r\n      <h3><i class='bx bxs-bank danger'></i> Ajouter une action</h3>\r\n      <div className=\"card card-container\">\r\n        {actItem.map((e) => (\r\n          <h3><i class='bx bxs-bank danger'></i> {e.nom_soc}</h3>\r\n        ))}\r\n        <Form onSubmit={saveAction} ref={form}>\r\n          {!successful && (\r\n            <div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">utlisateur</label>\r\n                <FormControl fullWidth sx={{ m: 1 }} variant=\"standard\">\r\n                  <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"utlisateur\"\r\n                    multiline\r\n                    name=\"id_utili\"\r\n                    value={user.username}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </FormControl>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">interlocuteur</label>\r\n      \r\n                  <Multiselect\r\n                    displayValue=\"nom\"\r\n                    value=\"4\"\r\n                    isObject={true}\r\n                    onChange={console.log}\r\n                    id={console.log}\r\n                    onNOMPressFn={function noRefCheck() { }}\r\n                    onRemove={function noRefCheck() { }}\r\n                    onSearch={function noRefCheck() { }}\r\n                    onSelect={land3}\r\n                    options={filterInter}\r\n                    showCheckbox\r\n                  />\r\n               \r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">Date de l'action</label>\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  className=\"form-control\"\r\n                  name=\"date_rdv\"\r\n                  value={Action.date_rdv}\r\n                  onChange={handleInputChange}\r\n\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">Observation / Compte-rendu</label>\r\n                <FormControl fullWidth sx={{ m: 1 }} variant=\"standard\">\r\n                  <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"description\"\r\n                    multiline\r\n                    rows={7}\r\n                    name=\"description\"\r\n                    value={Action.description}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </FormControl>\r\n              </div>\r\n\r\n           \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">type d'action</label>\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"demo-simple-select-label\">type_action</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={Action.type_action}\r\n                    label=\"type_action\"\r\n                    name=\"type_action\"\r\n                    onChange={handleInputChange}\r\n                  >\r\n                    <MenuItem value={\"RDV\"}>RDV</MenuItem>\r\n                    <MenuItem value={\"contact téléphonique\"}>contact téléphonique</MenuItem>\r\n                    <MenuItem value={\"contact teams\"}>contact teams</MenuItem>\r\n                    <MenuItem value={\"contact par courrier\"}>contact par courrier</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n\r\n              </div>\r\n              {sofitech && (\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">besoin</label>\r\n                  <Multiselect\r\n                    displayValue=\"NOM\"\r\n                    groupBy=\"TYPE\"\r\n                    value=\"4\"\r\n                    isObject={true}\r\n                    selectedValues={console.log}\r\n                    onChange={console.log}\r\n                    id={console.log}\r\n                    onNOMPressFn={function noRefCheck() { }}\r\n                    onRemove={function noRefCheck() { }}\r\n                    onSearch={function noRefCheck() { }}\r\n                    onSelect={land2}\r\n                    options={besoinliste}\r\n                    showCheckbox\r\n                  />\r\n                </div>\r\n              )}\r\n              {sofitech && showInvestissementProductif && (\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Investissement productif</label>\r\n          <Multiselect\r\n            displayValue=\"NOM\"\r\n            groupBy=\"TYPE\"\r\n            value=\"4\"\r\n            isObject={true}\r\n            selectedValues={console.log}\r\n            onChange={console.log}\r\n            id={console.log}\r\n            onNOMPressFn={function noRefCheck() { }}\r\n            onRemove={function noRefCheck() { }}\r\n            onSearch={function noRefCheck() { }}\r\n            onSelect={land4}\r\n            options={Evolis}\r\n            showCheckbox\r\n          />\r\n        </div>\r\n      )}\r\n                 <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Montant</label>\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"demo-simple-select-label\">Montant</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={Action.montant}\r\n                    label=\"motant de l'action\"\r\n                    name=\"montant\"\r\n                    onChange={handleInputChange}\r\n                  >\r\n                    <MenuItem value={\"De 1 à 500 K€\"}>De 1 à 500 K€ </MenuItem>\r\n                    <MenuItem value={\"De 501 à 1 M€\"}>De 501 à 1 M€</MenuItem>\r\n                    <MenuItem value={\"Plus de 1M€ \"}>Plus de 1M€ </MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n\r\n              </div>\r\n              {cemeca && (\r\n                <div className=\"form-group\">\r\n                  <Grid container spacing={3}>\r\n                    <Grid item xs=\"auto\">\r\n                      <label htmlFor=\"password\">Assurance-crédit en place ?</label>\r\n                    </Grid>\r\n                    <Grid item xs='auto'>\r\n                      <Button variant=\"contained\" onClick={() => { setCredit(true) }} color=\"success\">OUI</Button>\r\n                    </Grid>\r\n                    <Grid item xs='auto'>\r\n                      <Button variant=\"contained\" onClick={() => { setCredit(false) }} color=\"error\">NON</Button>\r\n                    </Grid>\r\n                    <Grid item xs='auto'>\r\n                      <Button variant=\"contained\" onClick={() => { setCredit(false) }} color=\"warning\">NSP</Button>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                </div>\r\n\r\n              )}\r\n              {cemeca && Credit && (\r\n                <div className=\"form-group\">\r\n                  <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Nom l'assureur crédit\"\r\n                    multiline\r\n                    name=\"nom_assur\"\r\n                    value={Action.nom_assur}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                  <br />\r\n                  <label htmlFor=\"password\">préciser la date d’échéance du crédit </label>\r\n                  <input\r\n                    type=\"datetime-local\"\r\n                    className=\"form-control\"\r\n                    name=\"date_assur\"\r\n                    value={Action.date_assur}\r\n                    onChange={handleInputChange}\r\n\r\n                  />\r\n                </div>\r\n              )}\r\n              {cemeca && (\r\n                <div className=\"form-group\">\r\n                  <Grid container spacing={3}>\r\n                    <Grid item xs=\"auto\">\r\n                      <label htmlFor=\"password\">Factor en place ?</label>\r\n                    </Grid>\r\n                    <Grid item xs='auto'>\r\n                      <Button variant=\"contained\" onClick={() => { setFactor(true) }} color=\"success\">OUI</Button>\r\n                    </Grid>\r\n                    <Grid item xs='auto'>\r\n\r\n                      <Button variant=\"contained\" onClick={() => { setFactor(false) }} color=\"error\">NON</Button>\r\n                    </Grid>\r\n                    <Grid item xs='auto'>\r\n                      <Button variant=\"contained\" onClick={() => { setFactor(false) }} color='warning'>NSP</Button>\r\n\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              )}\r\n              {cemeca && Factor && (\r\n                <div>\r\n                  <div className=\"form-group\">\r\n                    <TextField\r\n                      id=\"outlined-multiline-static\"\r\n                      label=\"Nom Factor\"\r\n                      multiline\r\n                      value={Action.nom_factor}\r\n                      name=\"nom_factor\"\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Préciser la date d’échéance du Factor </label>\r\n                    <input\r\n                      type=\"datetime-local\"\r\n                      className=\"form-control\"\r\n                      name=\"date_factor\"\r\n                      value={Action.date_factor}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Centre d'affaires CREDIT COOPERATIF</label>\r\n                <Multiselect\r\n                  displayValue=\"NOM\"\r\n                  groupBy=\"TYPE\"\r\n                  value=\"4\"\r\n                  isObject={true}\r\n                  selectedValues={console.log}\r\n                  onChange={console.log}\r\n                  id={console.log}\r\n                  onNOMPressFn={function noRefCheck() { }}\r\n                  onRemove={function noRefCheck() { }}\r\n                  onSearch={function noRefCheck() { }}\r\n                  onSelect={land}\r\n                  options={liste}\r\n                  showCheckbox\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button className=\"btn btn-primary btn-block\">Valider l'action</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div\r\n                className={\r\n                  successful\r\n                    ? \"alert alert-success\"\r\n                    : \"alert alert-danger\"\r\n                }\r\n                role=\"alert\"\r\n              >\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Action;\r\n\r\n","import axios from \"axios\";\r\n\r\n\r\nconst API_URL = `${process.env.REACT_APP_API_HOST}/api/auth/`;\r\n\r\nconst create = data => {\r\n  return axios.post(API_URL + \"ajouter\", data);\r\n};\r\n\r\nconst update = (id, data) => {\r\n  return  axios.put(API_URL + `societe/update/${id}`, data);\r\n};\r\n/*\r\nconst getAll = () => {\r\n  return http.get(\"/tutorials\");\r\n};\r\n\r\nconst get = id => {\r\n  return http.get(`/tutorials/${id}`);\r\n};\r\n\r\n\r\nconst update = (id, data) => {\r\n  return  axios.put(API_URL + `/societe/update/${id}`, data);\r\n};\r\n\r\nconst remove = id => {\r\n  return http.delete(`/tutorials/${id}`);\r\n};\r\nconst removeAll = () => {\r\n  return axios.delete(`/tutorials`);\r\n};\r\n\r\n*/\r\n\r\nconst findByTitle = siret => {\r\n  return axios.get(`/Societes?siret=${siret}`);\r\n};\r\n\r\nconst AuthSociete = {\r\n\r\n  create,\r\n  findByTitle,\r\n  update\r\n};\r\n\r\nexport default AuthSociete;\r\n","\r\nclass checkedForm{\r\n\r\n   required = value => {\r\n    if (!value) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          ce champs ne doit pas etre vide \r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n\r\n\r\n \r\n   vsiret = value => {\r\n    if (isNaN(value) || (value.length !== 14)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          siret invalide :(.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vsiren = value => {\r\n   if (isNaN(value)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          This is not a valid siren.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vnom_soc = value => {\r\n    if ((value.length<4)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n         nom socitété invalide !.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vnom_responsable = value => {\r\n    if ((value.length<4)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          nom responsable invalide !.\r\n        </div>\r\n      ); \r\n    }\r\n  };\r\n  \r\n   vdate_creation_soc = value => {\r\n    if ((value.length<4)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          date invalide !\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vactivité = value => {\r\n    if ((value.length<4)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          activité invalide !\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n   vadresse = value => {\r\n    if ((value.length<4)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          adresse invalide !\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n   vpays = value =>{\r\n    if ((value.length<4)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          pays invalide !\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n   cville = value => {\r\n    if (value.length < 4 || value.length > 30) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          ville invalide !\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vcode_postal = value => {\r\n    if (value.length < 4 || value.length > 10) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          code postal invalide !\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vopportunité = value => {\r\n    if (value.length < 4) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n           opportunité invalide !\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vobservation = value => {\r\n    if (value.length < 4) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n           opportunité invalide !\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vtel = value => {\r\n    if (value.length < 4 || value.length > 10) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n           télephone doit pas etre vide :( !\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vid_role = value => {\r\n    if (isNaN(value)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          1 or 2.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n  \r\n}\r\nexport default new checkedForm();\r\n","\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthSociete from \"../services/societe\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport checkForm from '../common/Ajouter/checkedForm'\r\nimport { useHistory } from 'react-router-dom';\r\nimport './../assets/css/picklist.css'\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport axios from 'axios';\r\nimport liste from \"../assets/JsonData/liste_syndicat.json\"\r\nimport origine_prospect from \"../assets/JsonData/origine_prospect.json\"\r\nimport Button from '@mui/material/Button';\r\nimport UserService from \"../services/user.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport Soc from '../controllers/Societe';\r\nimport RoleUser from \"../controllers/Role\";\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\nconst AddTutorial = () => {\r\n  let history = useHistory();\r\n  //GET societer\r\n  const [societeListe, SetsocieteListe] = useState([])\r\n  //variable checked from\r\n  const required = checkForm.required;\r\n  const vsiret = checkForm.vsiret;\r\n  const vsiren = checkForm.vsiren;\r\n  const vcode_postal = checkForm.vcode_postal;\r\n  const cville = checkForm.cville;\r\n  const vsyndicat = checkForm.vobservation;\r\n  const vtel = checkForm.vtel;\r\n  const vpays = checkForm.vpays;\r\n  const vadresse = checkForm.vadresse;\r\n  const montant = checkForm.montant;\r\n  const user = AuthService.getCurrentUser();\r\n  const [open, setOpen] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  const loading = open && options.length === 0;\r\n\r\n\r\n  // intitial societe\r\n  const initialSocieteState = {\r\n    siret: \"\",\r\n    siren: \"\",\r\n    nom_soc: \"\",\r\n    date_creation_soc: \"\",\r\n    activite_soc: \"\",\r\n    libelle_naf: \"\",\r\n    adresse_local: \"\",\r\n    pays: \"\",\r\n    ville_soc: \"\",\r\n    code_postal: \"\",\r\n    syndicat: \"\",\r\n    observation: \"\",\r\n    tel: \"\",\r\n    app_sofitech: \"\",\r\n    app_cemeca: \"\",\r\n    soc_sofitech: \"\",\r\n    soc_cemeca: \"\",\r\n    id_role: \"\",\r\n    id_utili: \"\",\r\n    origineprospect: \"\",\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  const [Societe, setSociete] = useState({ initialSocieteState });\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messagesiret, setMessagesiret] = useState(\"\");\r\n  const [myJSON, setactive] = useState([]);\r\n  const [myJSON2, setactive2] = useState([]);\r\n  const [role, setrole] = useState(\"\")\r\n  const [rolesofitech, setrolesofitech] = useState(\"\")\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n  const mysofitech = RoleUser.SofitechRole();\r\n  //GET role cemece\r\n  const mycemeca = RoleUser.CemecaRole();\r\n\r\n  useEffect(() => {\r\n    //afficher cemca\r\n    if (mycemeca) Soc.CemecaListe().then(data => SetsocieteListe(data))\r\n    //afficher sofitech\r\n    if (mysofitech) Soc.AllSociete().then(data => SetsocieteListe(data))\r\n  }, [mycemeca, mysofitech])\r\n  const land = (e) => {\r\n    setactive(Array.isArray(e) ? e.map(x => x.NOM) : [])\r\n  }\r\n  const land2 = (e) => {\r\n    setactive2(Array.isArray(e) ? e.map(x => x.NOM) : [])\r\n  }\r\n\r\n  const Retriverole = () => {\r\n    //sofitech Role\r\n    UserService.getSofitechBoard().then(() => {\r\n      setrole(2)\r\n    })\r\n      .catch(() => {\r\n        setrole(1)\r\n      });\r\n\r\n  }\r\n\r\n\r\n  const saveSociete = (e) => {\r\n    const syndicat = myJSON.join();\r\n    const Origine_du_prospect = myJSON2.join();\r\n    var data = {\r\n\r\n      siret: Societe.siret,\r\n      siren: Societe.siren,\r\n      nom_soc: Societe.nom_soc,\r\n      nom_responsable_soc: Societe.nom_responsable_soc,\r\n      date_creation_soc: Societe.date_creation_soc,\r\n      activite_soc: Societe.activite_soc,\r\n      libelle_naf: Societe.libelle_naf,\r\n      adresse_local: Societe.adresse_local,\r\n      pays: Societe.pays,\r\n      ville_soc: Societe.ville_soc,\r\n      code_postal: Societe.code_postal,\r\n      origineprospect: Origine_du_prospect,\r\n      syndicat: syndicat,\r\n      observation: Societe.observation,\r\n      tel: Societe.tel,\r\n      id_role: role,\r\n      app_sofitech: rolesofitech,\r\n      Origine_du_prospect: Origine_du_prospect,\r\n      message: message.message,\r\n      successful: successful.successful,\r\n      id_utili: user.id\r\n    };\r\n\r\n    e.preventDefault();\r\n    form.current.validateAll();\r\n    if (checkBtn.current.context._errors.length === 0 && messagesiret === \"Siret PAPPERS validé.\") {\r\n      AuthSociete.create(data)\r\n        .then(response => {\r\n          setSociete({\r\n            siren: response.data.siren,\r\n            siret: response.data.siret,\r\n            nom_soc: response.data.nom_soc,\r\n            nom_responsable_soc: response.data.nom_responsable_soc,\r\n            activite_soc: response.data.activite_soc,\r\n            libelle_naf: response.data.libelle_naf,\r\n            adresse_local: response.data.adresse_local,\r\n            app_sofitech: response.data.app_sofitech,\r\n            pays: response.data.pays,\r\n            ville_soc: response.data.ville_soc,\r\n            code_postal: response.data.code_postal,\r\n            syndicat: response.data.syndicat,\r\n            origineprospect: response.data.origineprospect,\r\n            observation: response.data.observation,\r\n            tel: response.data.tel,\r\n            date: response.data.date,\r\n            id_role: response.data.id_role,\r\n            Origine_du_prospect: response.data.Origine_du_prospect,\r\n            id_utili: response.data.id_utili\r\n          }\r\n          );\r\n          setSuccessful(true);\r\n          setMessage(response.data.message)\r\n          setTimeout(() => {\r\n            history.push(\"/Societes\");\r\n          }, 1000)\r\n\r\n        },\r\n          error => {\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n            setMessage(\"Société déjà ajouté\");\r\n          }\r\n        )\r\n        .catch(e => {\r\n          console.log(e);\r\n\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n\r\n    (async () => {\r\n      await sleep(1e3); // For demo purposes.\r\n\r\n      if (active) {\r\n        setOptions([...societeListe]);\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [loading, societeListe]);\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setOptions([]);\r\n    }\r\n  }, [open]);\r\n\r\n\r\n\r\n  //API INSEE\r\n\r\n  const API_INSEE_SIRET = 'https://api.pappers.fr/v2/entreprise/?siret='\r\n  var b = String(Societe.siret)\r\n  const chaine = API_INSEE_SIRET + b\r\n  const getAPINSEE = () => {\r\n\r\n    return axios.get(chaine, {\r\n      headers: { \"Authorization\": ` Bearer 0d8966099937f4d67b63e5ae5266c5f2922aca4fb595b62f` }\r\n\r\n    });\r\n  }\r\n\r\n\r\n  const [SIRETAPI, setSIRETAPI] = useState([]);\r\n  const [Etablissement, SetETA] = useState([]);\r\n  console.log(Etablissement)\r\n  const [value, setValue] = useState(\"\");\r\n  const GetAPI = () => {\r\n    getAPINSEE().then(response => {\r\n      setSIRETAPI(response.data);\r\n      SetETA(response.data.etablissement);\r\n      setMessagesiret(\"Siret PAPPERS validé.\");\r\n      setMessage('')\r\n    },\r\n      error => {\r\n\r\n        setMessagesiret(\"Siret non reconnu PAPPERS.\");\r\n      }\r\n    )\r\n  }\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setSociete({ ...Societe, [name]: value });\r\n\r\n  };\r\n  const result = Object.entries(SIRETAPI)\r\n  const result2 = Object.entries(Etablissement)\r\n  const Siren = result.filter(([key]) => key === 'siren');\r\n  const Nom = result.filter(([key]) => key === \"nom_entreprise\");\r\n  const Code_naf = result.filter(([key]) => key === \"code_naf\");\r\n  const libelle_naf = result.filter(([key]) => key === \"libelle_code_naf\");\r\n  const adresse = result2.filter(([key]) => key === \"adresse_ligne_1\");\r\n  const paye = result2.filter(([key]) => key === \"pays\");\r\n  const ville = result2.filter(([key]) => key === \"ville\");\r\n  const code_postal = result2.filter(([key]) => key === \"code_postal\");\r\n\r\n\r\n  const SIREN = () => {\r\n\r\n    return (\r\n      <div className=\"col-6\">\r\n        {Siren.map((e, valeur) =>\r\n          <Input\r\n            key={valeur}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            value={Societe.siren = e[1]}\r\n            onChange={handleInputChange}\r\n            validations={[required, vsiren]}\r\n            name=\"siren\"\r\n          />\r\n        )}\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  const NOM = () => {\r\n\r\n    return (<div>\r\n      {Nom.map((e, valeur) =>\r\n        <Input\r\n          key={valeur}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"title\"\r\n          value={Societe.nom_soc = e[1]}\r\n          onChange={handleInputChange}\r\n          name=\"nom_soc\"\r\n        />\r\n      )}\r\n    </div>)\r\n\r\n  }\r\n  const CODENAF = () => {\r\n\r\n    return (<div>\r\n      {Code_naf.map((e, valeur) =>\r\n        <Input\r\n          key={valeur}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"title\"\r\n          value={Societe.activite_soc = e[1]}\r\n          onChange={handleInputChange}\r\n          validations={[required, vsyndicat]}\r\n          name=\"activite_soc\"\r\n        />\r\n      )}\r\n    </div>)\r\n\r\n  }\r\n  const LibelleCodeNaf = () => {\r\n\r\n    return (<div>\r\n      {libelle_naf.map((e, valeur) =>\r\n        <Input\r\n          key={valeur}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"title\"\r\n          value={Societe.libelle_naf = e[1]}\r\n          onChange={handleInputChange}\r\n          validations={[required, vsyndicat]}\r\n          name=\"activite_soc\"\r\n        />\r\n      )}\r\n    </div>)\r\n\r\n  }\r\n  const ADRESSE = () => {\r\n\r\n    return (<div>\r\n      {adresse.map((e, valeur) =>\r\n        <Input\r\n          key={valeur}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"title\"\r\n          value={Societe.adresse_local = e[1]}\r\n          onChange={handleInputChange}\r\n          validations={[required, vadresse]}\r\n          name=\"adresse_local\"\r\n        />\r\n      )}\r\n    </div>)\r\n\r\n  }\r\n  const PAYE = () => {\r\n\r\n    return (<div>\r\n      {paye.map((e, valeur) =>\r\n        <Input\r\n          key={valeur}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"title\"\r\n          value={Societe.pays = e[1]}\r\n          onChange={handleInputChange}\r\n          validations={[required, vpays]}\r\n          name=\"pays\"\r\n        />\r\n      )}\r\n    </div>)\r\n\r\n  }\r\n  const VILLE = () => {\r\n\r\n    return (<div>\r\n      {ville.map((e, valeur) =>\r\n        <Input\r\n          key={valeur}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"title\"\r\n          value={Societe.ville_soc = e[1]}\r\n          onChange={handleInputChange}\r\n          validations={[required, cville]}\r\n          name=\"ville_soc\"\r\n        />\r\n      )}\r\n    </div>)\r\n\r\n  }\r\n  const CODE = () => {\r\n\r\n    return (\r\n      <div>\r\n\r\n        {code_postal.map((e, valeur) =>\r\n          <Input\r\n            key={valeur}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            value={Societe.code_postal = e[1]}\r\n            onChange={handleInputChange}\r\n            validations={[required]}\r\n            name=\"code_postal\"\r\n          />\r\n        )}\r\n      </div>)\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    Retriverole()\r\n\r\n    if (role === 2) {\r\n      setrolesofitech(1)\r\n    }\r\n\r\n  }, [role])\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      console.log('tges')\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"submit-form\">\r\n      <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <Autocomplete\r\n            noOptionsText={'societé non trouvée dans le CRM'}\r\n            id=\"asynchronous-demo\"\r\n            sx={{ width: 300 }}\r\n            open={open}\r\n            onOpen={() => {\r\n              setOpen(true);\r\n            }}\r\n            onClose={() => {\r\n              setOpen(false);\r\n            }}\r\n            isOptionEqualToValue={(option, value) => option.nom_soc === value.nom_soc}\r\n            getOptionLabel={(option) => option.nom_soc}\r\n            options={options}\r\n            loading={loading}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Recheche societé CRM\"\r\n                InputProps={{\r\n                  ...params.InputProps,\r\n                  endAdornment: (\r\n                    <React.Fragment>\r\n                      {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                      {params.InputProps.endAdornment}\r\n                    </React.Fragment>\r\n                  ),\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <Form ref={form}>\r\n            <div>\r\n              <div className=\"form-group\">\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-5\">\r\n                  <TextField\r\n                    label=\"Recherche PAPPERS\"\r\n                    value={value}\r\n                    onChange={e => setValue(e.target.value)}\r\n                    onKeyPress={handleKeyDown}\r\n                  />\r\n                  </div>\r\n                  <div className=\"col\">\r\n                  <Button type=\"submit\" variant=\"contained\" onClick={() => window.open(`https://www.pappers.fr/recherche?q=${value}`, \"_blank\")}>\r\n                    recherche\r\n                  </Button>\r\n                  </div>  \r\n                </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n\r\n          </Form>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      <div className=\"card card-container\">\r\n\r\n        <h3><i class='bx bxs-bank danger'></i> Ajouter une Société</h3>\r\n        <Form onSubmit={saveSociete} ref={form}>\r\n          {!successful && (\r\n            <div>\r\n\r\n              <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                <label htmlFor=\"title\">siret</label>\r\n                  <div className=\"col-6\">\r\n                    \r\n                    <Input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"title\"\r\n                      onChange={handleInputChange}\r\n                      value={Societe.siret}\r\n                      validations={[required, vsiret]}\r\n                      name=\"siret\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <Button onClick={GetAPI} variant=\"contained\">valider</Button>\r\n                  </div>\r\n                  {messagesiret && (\r\n                    <div className=\"form-group\">\r\n                      <div\r\n                        className={\r\n                          messagesiret === \"Siret PAPPERS validé.\"\r\n                            ? \"alert alert-success\"\r\n                            : \"alert alert-warning\"\r\n                        }\r\n                        role=\"alert\"\r\n                      >\r\n                        {messagesiret}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n              </div>\r\n\r\n            </div>\r\n          )}\r\n\r\n\r\n          {result.length > 0 && (\r\n\r\n            <div>\r\n\r\n              <div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"title\">siren</label>\r\n\r\n                  <SIREN />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"title\">nom de la societe</label>\r\n                  <NOM />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"title\">code naf</label>\r\n                  <CODENAF />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"title\">libelle_code_naf</label>\r\n                  <LibelleCodeNaf />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"title\">Adresse local</label>\r\n                  <ADRESSE />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"title\">pays</label>\r\n                  <PAYE />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"title\">Ville</label>\r\n                  <VILLE />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"text\">Code postale</label>\r\n                  <CODE />\r\n                </div>\r\n\r\n\r\n              </div>\r\n\r\n\r\n\r\n            </div>\r\n          )}\r\n          <div className=\"form-group\">\r\n\r\n            <label htmlFor=\"title\">origine du prospect </label>\r\n            <Multiselect\r\n              displayValue=\"NOM\"\r\n              groupBy=\"TYPE\"\r\n              value=\"4\"\r\n              isObject={true}\r\n              selectedValues={console.log}\r\n              onChange={console.log}\r\n              id={console.log}\r\n              onNOMPressFn={function noRefCheck() { }}\r\n              onRemove={function noRefCheck() { }}\r\n              onSearch={function noRefCheck() { }}\r\n              onSelect={land2}\r\n              options={origine_prospect}\r\n              emptyRecordMsg='No options available'\r\n              showCheckbox\r\n            />\r\n\r\n\r\n          </div>\r\n          <div className=\"form-group\">\r\n\r\n            <label htmlFor=\"title\">Syndicat</label>\r\n            <Multiselect\r\n              displayValue=\"NOM\"\r\n              groupBy=\"TYPE\"\r\n              value=\"4\"\r\n              isObject={true}\r\n              selectedValues={console.log}\r\n              onChange={console.log}\r\n              id={console.log}\r\n              onNOMPressFn={function noRefCheck() { }}\r\n              onRemove={function noRefCheck() { }}\r\n              onSearch={function noRefCheck() { }}\r\n              onSelect={land}\r\n              options={liste}\r\n              showCheckbox\r\n            />\r\n\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"title\">Observation</label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              defaultValue=\"Thierry\"\r\n              value={Societe.observation}\r\n              onChange={handleInputChange}\r\n              name=\"observation\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"title\">telephone Societes</label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              value={Societe.tel}\r\n              onChange={handleInputChange}\r\n              validations={[required, vtel]}\r\n              name=\"tel\"\r\n            />\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div\r\n                className={\r\n                  successful\r\n                    ? \"alert alert-success\"\r\n                    : \"alert alert-danger\"\r\n                }\r\n                role=\"alert\"\r\n              >\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n          <button className=\"btn btn-success\">\r\n            AJOUTER\r\n          </button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTutorial;\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport { useSelector } from 'react-redux'\r\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport 'moment/locale/fr';\r\nimport Stack from '@mui/material/Stack';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\n//table class\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { faFile } from '@fortawesome/free-solid-svg-icons/faFile';\r\nimport SvgIcon from '@mui/material/SvgIcon';\r\nimport PropTypes from 'prop-types';\r\n//controlleurs\r\nimport UserService from \"../services/user.service\";\r\nimport RoleUser from \"../controllers/Role\";\r\nimport Societe from '../controllers/Societe';\r\n\r\n//require page Action\r\nimport AuthAction from \"../services/Action\";\r\n//require page Interlocuteur\r\nimport AuthInter from \"../services/Interlocuteur\";\r\n\r\nconst FontAwesomeSvgIcon = React.forwardRef((props, ref) => {\r\n    const { icon } = props;\r\n\r\n    const {\r\n        icon: [width, height, , , svgPathData],\r\n    } = icon;\r\n\r\n    return (\r\n        <SvgIcon ref={ref} viewBox={`0 0 ${width} ${height}`}>\r\n            {typeof svgPathData === 'string' ? (\r\n                <path d={svgPathData} />\r\n            ) : (\r\n                /**\r\n                 * A multi-path Font Awesome icon seems to imply a duotune icon. The 0th path seems to\r\n                 * be the faded element (referred to as the \"secondary\" path in the Font Awesome docs)\r\n                 * of a duotone icon. 40% is the default opacity.\r\n                 *\r\n                 * @see https://fontawesome.com/how-to-use/on-the-web/styling/duotone-icons#changing-opacity\r\n                 */\r\n                svgPathData.map((d, i) => (\r\n                    <path style={{ opacity: i === 0 ? 0.4 : 1 }} d={d} />\r\n                ))\r\n            )}\r\n        </SvgIcon>\r\n    );\r\n});\r\n\r\nFontAwesomeSvgIcon.propTypes = {\r\n    icon: PropTypes.any.isRequired,\r\n};\r\n\r\n\r\n\r\nconst DashboardAdmin = () => {\r\n    const [listuser, setListeUser] = useState([]);\r\n    const [societe, setsociete] = useState([])\r\n    const [interlocuteur, setInterlocuteur] = useState([])\r\n    const [ListeAction, SetAction] = useState([]);\r\n    const [currentUser, setCurrentUser] = useState([]);\r\n    const [valueDate1, setValueDate1] = React.useState(\"\");\r\n    const [valueDate2, setValueDate2] = React.useState(\"\");\r\n    const [search, setSearch] = useState('');\r\n    //GET role sofitech\r\n    const mysofitech = RoleUser.SofitechRole();\r\n    //GET role cemece\r\n    const mycemeca = RoleUser.CemecaRole();\r\n    //GET societer\r\n    //SELECT WHERE SEARCH INPUT\r\n\r\n    //Date change Action\r\n    const mysn = 1000 * 3600 * 24\r\n    const fltr_date = ListeAction.filter(task => (\r\n        ((new Date(task.date_rdv) - valueDate2) / mysn) < 0) && ((new Date(task.date_rdv) - valueDate1) / mysn) > 0)\r\n\r\n    const handleChangeDate1 = (newValue) => {\r\n        setValueDate1(newValue);\r\n    };\r\n    const handleChangeDate2 = (newValue) => {\r\n        setValueDate2(newValue);\r\n    };\r\n    //afficher la liste des users\r\n    const retrieveUsers = () => {\r\n        UserService.getListe_User()\r\n            .then((response) => {\r\n                setListeUser(response.data);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    //afficher la liste des Actions\r\n    const retrieveActions = () => {\r\n        AuthAction.findAll().then((response) => {\r\n            SetAction(response.data)\r\n        })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n\r\n    //afficher la liste des interlocuteur\r\n    const retrieveInter = () => {\r\n        AuthInter.findAll().then((response) => {\r\n            setInterlocuteur(response.data)\r\n        })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    };\r\n    //afficher la liste des societes\r\n    const retrieveSociete = () => {\r\n        //afficher cemca\r\n        if (mycemeca) Societe.CemecaListe().then(data => setsociete(data))\r\n            ;\r\n        //afficher sofitech\r\n        if (mysofitech) Societe.AllSociete().then(data => setsociete(data))\r\n            ;\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        retrieveUsers()\r\n        retrieveActions()\r\n        retrieveInter()\r\n        retrieveSociete()\r\n    }, [mysofitech, mycemeca])\r\n\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [page, setPage] = React.useState(0);\r\n    const handleChangePage = (newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n\r\n        <div>\r\n            {/* si le client est connecter*/}\r\n            {currentUser ? (\r\n                <div>\r\n                    <h2 className=\"page-header\">Tableau de bord Admin\r\n                    </h2>\r\n                    <div className=\"row\">\r\n                        {/* SEARCH INPUT */}\r\n                        {/* activiter commercial cree */}\r\n                        <div className=\"col-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card__body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-3\">\r\n                                            <p>Date début d'action</p>\r\n                                            <LocalizationProvider dateAdapter={AdapterMoment} >\r\n                                                <Stack spacing={5}>\r\n                                                    <DesktopDatePicker\r\n                                                        value={valueDate1}\r\n                                                        onChange={handleChangeDate1}\r\n                                                        renderInput={(params) => <TextField {...params} />}\r\n                                                    />\r\n                                                </Stack>\r\n                                            </LocalizationProvider>\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            <p>Date fin d'action</p>\r\n                                            <LocalizationProvider dateAdapter={AdapterMoment}>\r\n                                                <Stack spacing={5}>\r\n                                                    <DesktopDatePicker\r\n                                                        value={valueDate2}\r\n                                                        onChange={handleChangeDate2}\r\n                                                        renderInput={(params) => <TextField {...params} />}\r\n                                                    />\r\n                                                </Stack>\r\n                                            </LocalizationProvider>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <p>Trouvé un utilisateur</p>\r\n                                            <div className=\"topnav__search\">\r\n                                                <input type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"Recherche \"\r\n                                                    onChange={(e) => setSearch(e.target.value)}\r\n                                                />\r\n                                                <i className='bx bx-search'></i>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell align=\"center\">Nom</TableCell>\r\n                                                    <TableCell align=\"center\">Action </TableCell>\r\n                                                    <TableCell align=\"center\">Interlocuteur</TableCell>\r\n                                                    <TableCell align=\"center\">Societes</TableCell>\r\n                                                    <TableCell align=\"center\">info</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listuser\r\n                                                    .filter((e) => {\r\n                                                        return search.toLowerCase() === ''\r\n                                                            ? e\r\n                                                            : e.username.toLowerCase().includes(search.toLowerCase());\r\n                                                    }).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                                                        <TableRow\r\n                                                            key={index}\r\n                                                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                                        >\r\n                                                            <TableCell align=\"center\">{row.username}</TableCell>\r\n                                                            <TableCell align=\"center\">{(fltr_date.filter(task => task.id_utili === row.id)).length}</TableCell>\r\n                                                            <TableCell align=\"center\">{(interlocuteur.filter(task => task.id_utili === row.id)).length}</TableCell>\r\n                                                            <TableCell align=\"center\">{(societe.filter(task => task.id_utili === row.id)).length}</TableCell>\r\n                                                            <TableCell align='center' style={{ minWidth: 50 }}>\r\n                                                                <IconButton aria-label=\"Example\" href={`/user/${row.id}`} >\r\n                                                                    <FontAwesomeSvgIcon icon={faFile} />\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    ))}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                    <TablePagination\r\n                                        rowsPerPageOptions={[2, 5, 10]}\r\n                                        component=\"div\"\r\n                                        labelRowsPerPage='lignes par page'\r\n                                        count={listuser.length}\r\n                                        rowsPerPage={rowsPerPage}\r\n                                        page={page}\r\n                                        onPageChange={handleChangePage}\r\n                                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                                        labelDisplayedRows={({ from, to, count }) => `Affichage des pages ${from}-${to} sur un total de  ${count} pages`}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            ) :\r\n\r\n                (\r\n                    <div className=\"sidebar__item\">\r\n                        <div disabled className={`sidebar__item-inner `}>\r\n                            <i className='bx bxs-user-x' ></i>\r\n                            <span >\r\n                                pas connecter\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardAdmin\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthInterlocuteur from \"../services/Interlocuteur\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport UserService from \"../services/user.service\";\r\nimport axios from 'axios';\r\nimport fonction_inter from \"../assets/JsonData/fonction_interlocuteur.json\"\r\n//table class\r\nimport Typography from '@mui/material/Typography';\r\nimport Table from '@mui/material/Table';\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport listsociete from \"../controllers/Societe\"\r\nimport RoleUser from \"../controllers/Role\";\r\nimport Societe from '../controllers/Societe';\r\nconst Action = (props) => {\r\n\r\n  //filter societe nom\r\n  \r\n\r\n  const [myJSON, setactive] = useState([]);\r\n\r\n  const land = (e) => {\r\n    setactive(Array.isArray(e) ? e.map(x => x.NOM) : [])\r\n  }\r\n\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n  const [ID_societe, setID_societe] = useState([]);\r\n      //GET role sofitech\r\n      const mysofitech = RoleUser.SofitechRole();\r\n      //GET role cemece\r\n      const mycemeca = RoleUser.CemecaRole();\r\n  const user = AuthService.getCurrentUser();\r\n  const retrieveSociete = () => {\r\n    if (mycemeca) Societe.CemecaListe().then(data => setID_societe(data))        \r\nif (mysofitech) Societe.AllSociete().then(data => setID_societe(data))\r\n  \r\n  }; \r\n  useEffect(() => {\r\n    retrieveInterlocuteur();\r\n    retrieveSociete()\r\n    \r\n  }, [mysofitech,mycemeca])\r\n  // Get ID from URL\r\n  const params = useParams();\r\n  var nb = parseInt(params.id);\r\n  const actItem = ID_societe.filter(task => task.siret === nb)\r\n  //intitial Action \r\n  const initialState = {\r\n    nom: \"\",\r\n    prenom: \"\",\r\n    email: \"\",\r\n    adresse: \"\",\r\n    code_postale: \"\",\r\n    tel: \"\",\r\n    activite: \"\",\r\n    id_utili:\"\",\r\n    id_soc: \"\",\r\n  };\r\n\r\n  const [Interlocuteur, setInterlocuteur] = useState({ initialState });\r\n  const [listeinter, Setlisteinter] = useState([]);\r\n\r\n  const retrieveInterlocuteur = () => {\r\n    AuthInterlocuteur.findAll()\r\n      .then((response) => {\r\n        Setlisteinter(response.data);\r\n\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }; \r\n  const filterInter = listeinter.filter(task => task.id_soc === nb)\r\n  console.log(nb,\"nb\")\r\n  console.log(listeinter,\"liste\")\r\n  console.log(filterInter,\"flter\")\r\n\r\n\r\n  const saveAction = (e) => {\r\n    const fonction = myJSON.join();\r\n    var data = {\r\n      nom: Interlocuteur.nom,\r\n      prenom: Interlocuteur.prenom,\r\n      email: Interlocuteur.email,\r\n      adresse: Interlocuteur.adresse,\r\n      code_postale: Interlocuteur.code_postale,\r\n      tel: Interlocuteur.tel,\r\n      fonction_inter: fonction,\r\n      id_utili: user.id,\r\n      id_soc: nb,\r\n\r\n    };\r\n\r\n    e.preventDefault();\r\n    form.current.validateAll();\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthInterlocuteur.create(data)\r\n        .then(response => {\r\n          setInterlocuteur({\r\n            nom: response.data.nom,\r\n            prenom: response.data.prenom,\r\n            email: response.data.email,\r\n            adresse: response.data.adresse,\r\n            code_postale: response.data.code_postale,\r\n            tel: response.data.tel,\r\n            fonction_inter: response.data.fonction_inter,\r\n            id_utili: response.data.id_utili,\r\n            id_soc: response.data.id_soc,\r\n           \r\n          }\r\n          );\r\n          setSuccessful(true);\r\n          setMessage(response.data.message)\r\n          window.location.reload()\r\n        },\r\n          error => {\r\n            const resMessage =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n            setMessage(resMessage);\r\n          }\r\n        )\r\n        .catch(e => {\r\n          console.log(e);\r\n\r\n        });\r\n    }\r\n  };\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setInterlocuteur({ ...Interlocuteur, [name]: value });\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          {/* ajouter un user */}\r\n          <div className=\"card card-container\">\r\n            <h1> Ajouter un interlocuteur </h1>\r\n            <Form onSubmit={saveAction} ref={form}>\r\n              {!successful && (\r\n                <div>\r\n                   {\r\n              actItem.map((item, index) => (\r\n                <Typography variant=\"body2\" key={index}>\r\n                  <i class='bx bx-message-alt-dots'></i>{item.nom_soc}\r\n                </Typography>\r\n              ))\r\n            }\r\n                  \r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">nom</label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"nom\"\r\n                      value={Interlocuteur.nom}\r\n                      onChange={handleInputChange}\r\n\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">prenom</label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"prenom\"\r\n                      value={Interlocuteur.prenom}\r\n                      onChange={handleInputChange}\r\n\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">email</label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"email\"\r\n                      value={Interlocuteur.email}\r\n                      onChange={handleInputChange}\r\n\r\n                    />\r\n                  </div>\r\n\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">tel</label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"tel\"\r\n                      value={Interlocuteur.tel}\r\n                      onChange={handleInputChange}\r\n\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n\r\n                    <label htmlFor=\"title\">fonction</label>\r\n                    <Multiselect\r\n                      displayValue=\"NOM\"\r\n                      groupBy=\"TYPE\"\r\n                      value=\"4\"\r\n                      isObject={true}\r\n                      selectedValues={console.log}\r\n                      onChange={console.log}\r\n                      id={console.log}\r\n                      onNOMPressFn={function noRefCheck() { }}\r\n                      onRemove={function noRefCheck() { }}\r\n                      onSearch={function noRefCheck() { }}\r\n                      onSelect={land}\r\n                      options={fonction_inter}\r\n                      showCheckbox\r\n                    />\r\n\r\n                  </div>\r\n\r\n\r\n\r\n\r\n\r\n                  <div className=\"form-group\">\r\n                    <button className=\"btn btn-primary btn-block\">Ajouter</button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {message && (\r\n                <div className=\"form-group\">\r\n                  <div\r\n                    className={\r\n                      successful\r\n                        ? \"alert alert-success\"\r\n                        : \"alert alert-danger\"\r\n                    }\r\n                    role=\"alert\"\r\n                  >\r\n                    {message}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n            </Form>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <div className=\"card card-container\">\r\n            <h1>liste des interlocuteurs</h1>\r\n            <TableContainer component={Paper}>\r\n              <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>nom</TableCell>\r\n                    <TableCell align=\"left\">prenom</TableCell>\r\n                    <TableCell align=\"left\">fonction</TableCell>\r\n                    <TableCell align=\"left\">email</TableCell>\r\n                    <TableCell align=\"left\">telephone</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {filterInter.map((row) => (\r\n                    <TableRow key={row.nom}>\r\n                      <TableCell><a href={`/Action/${nb}`}>{row.nom}</a></TableCell>\r\n                      <TableCell>{row.prenom}</TableCell>\r\n                      <TableCell>{row.fonction_inter}</TableCell>\r\n                      <TableCell>{row.email}</TableCell>\r\n                      <TableCell>{row.tel}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n          <div className=\"card__footer\">\r\n            <a href=\"/Interl\">Plus info</a>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Action;\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport UserService from \"../services/user.service\";\r\nimport AuthInterlocuteur from \"../services/Interlocuteur\";\r\nimport 'moment/locale/fr';\r\nimport Societe from '../controllers/Societe';\r\n\r\n\r\nfunction InterlocuteurDetails() {\r\n\r\n\r\n  //GET interlocuteur\r\n  const [Inter, SetInter] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [listuser, setListeUser] = useState([]);\r\n  const [listSoc ,setSoc] = useState([]);\r\n  //Select all interlocuteur\r\n  const retrieveInterlocuteur = () => {\r\n    AuthInterlocuteur.findAll()\r\n      .then((response) => {\r\n        SetInter(response.data);\r\n\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  const retriveSociete =() =>{\r\n    Societe.AllSociete().then(data => setSoc(data))\r\n  }\r\n\r\n  const retrieveUsers = () => {\r\n    UserService.getListe_User()\r\n        .then((response) => {\r\n            setListeUser(response.data);\r\n            console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n            console.log(e);\r\n        });\r\n};\r\n\r\n\r\n  useEffect(() => {\r\n    retrieveInterlocuteur()\r\n    retrieveUsers()\r\n    retriveSociete()\r\n  }, []);\r\n\r\nconsole.log(listuser,\"liste user\")\r\nconsole.log(listSoc,\"les societes\")\r\n  //CARD TABLE\r\n  const card = (\r\n    <React.Fragment>\r\n      {Inter.filter((e) => {\r\n        return search.toLowerCase() === ''\r\n          ? e\r\n          : e.nom.toLowerCase().includes(search.toLowerCase());\r\n\r\n\r\n      }).map((e) =>\r\n        <Card variant=\"outlined\" >\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"div\">\r\n              <i class='bx bxs-id-card'></i>: {e.nom}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Fonction : {e.fonction_inter}\r\n            </Typography>\r\n\r\n            {(listuser.filter(task => task.id === e.id_utili)).map((c)=>\r\n             <Typography variant=\"body2\">\r\n             nom commercial : {c.username}\r\n              </Typography>\r\n\r\n            )}\r\n             {(listSoc.filter(task => task.siret === e.id_soc)).map((c)=>\r\n             <Typography variant=\"body2\">\r\n             nom commercial : {c.nom_soc}\r\n              </Typography>\r\n\r\n            )}\r\n            <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n              Telephone :  {e.tel}\r\n            </Typography>\r\n\r\n\r\n\r\n\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button href={`/Inter/modifier/${e.id_interlocuteur}`} size=\"small\">Modifier</Button>\r\n          </CardActions>\r\n        </Card>\r\n      )}\r\n      <CardActions>\r\n\r\n        <Button href={`/`} size=\"small\">Retour</Button>\r\n      </CardActions>\r\n    </React.Fragment>\r\n  );\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12 list\">\r\n        <div className=\"topnav\">\r\n          <div className=\"topnav__search\">\r\n            <input type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Recherche \"\r\n              onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n            <i className='bx bx-search'></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div >\r\n        <Box sx={{ minWidth: 260 }}>\r\n          <div>{card}</div>\r\n        </Box>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default InterlocuteurDetails\r\n","import React, { useEffect, useState } from 'react'\r\nimport Stack from '@mui/material/Stack';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport AuthInterlocuteur from \"../services/Interlocuteur\"\r\nimport AuthAction from \"../services/Action\"\r\nimport AuthService from \"../services/auth.service\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/fr';\r\nimport RoleUser from \"../controllers/Role\";\r\nimport Societe from '../controllers/Societe';\r\nimport UserService from \"../services/user.service\";\r\n\r\nfunction Customersinfo() {\r\n  //GET role admin\r\n  const myadmin = RoleUser.AdminRole();\r\n  //timer \r\n  const Completionist = () => <span>Modification expirée !</span>;\r\n  const Modification = () =>\r\n    <CardActions>\r\n      <Button href={`/modifier/${nb}`} size=\"small\">modification</Button>\r\n    </CardActions>;\r\n  const renderer = ({ hours, minutes, seconds, completed }) => {\r\n    if (completed) {\r\n      // Render a complete state\r\n      return <Completionist />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <span>\r\n            {hours}:{minutes}:{seconds}\r\n\r\n          </span>\r\n          <Modification />\r\n        </div>\r\n\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n  //lister la societe selon l'id \r\n  const [ListSociete, SetSociete] = useState([]);\r\n  //les interlocuteur de la societes selon l'id \r\n  const [listInter, SetInter] = useState([]);\r\n   //GET USER INFO\r\n const user = AuthService.getCurrentUser()\r\n  const [Liste_User, SetListe_User] = useState([]);\r\n  const retrieveUsers = () => {\r\n    UserService.getListe_User()\r\n      .then((response) => {\r\n        SetListe_User(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  // Get ID from URL\r\n  const params = useParams();\r\n  var nb = parseInt(params.id);\r\n\r\n  //FILTER  INTERLOCUTEUR WHERE ID SOCIETES \r\n  const id_soc = listInter.filter(task => task.id_soc === nb)\r\n \r\n  //GET role sofitech\r\n  const mysofitech = RoleUser.SofitechRole();\r\n  //GET role cemece\r\n  const mycemeca = RoleUser.CemecaRole();\r\n  const [Action, SetAction] = useState([]);\r\n  //SELECT ALL SOCIETES WHERE AUTH\r\n  const retrieveTutorials = () => {\r\n    if (user) {\r\n      //ACTION \r\n      AuthAction.findAll().then((response) => {\r\n        SetAction(response.data)\r\n        console.log(response.data)\r\n      })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n      //INTERLOCUTEUR   \r\n      AuthInterlocuteur.findAll()\r\n        .then((response) => {\r\n          SetInter(response.data);\r\n\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    Societe.AllSociete().then(data => SetSociete(data))\r\n      ;\r\n  }, [])\r\n  //FILTER SOCIETES SELON L'ID \r\n  const actItem = ListSociete.filter(task => task.siret === nb)\r\n\r\n  const test = actItem.map((e) => e.nom_soc)\r\n  const x = test.toString()\r\n\r\n  const activSoc = Action.filter(task => task.nom_societe === test.toString())\r\n  activSoc.sort((a, b) => new Date(a.date_rdv).getTime() - new Date(b.date_rdv).getTime());\r\n\r\n  useEffect(() => {\r\n    retrieveTutorials()\r\n    retrieveUsers()\r\n    //ACTION \r\n  }, []);\r\n  console.log(Liste_User)\r\n// Function to get the responsible user name\r\nconst getResponsibleName = (responsibleId) => {\r\n  const responsibleUser = Liste_User.find((user) => user.id === responsibleId);\r\n  return responsibleUser ? responsibleUser.username : 'Unknown';\r\n};\r\nconsole.log(getResponsibleName(1))\r\n\r\n  //CARD TABLE \r\n  const card = (\r\n    <React.Fragment>\r\n      {actItem.map((e) =>\r\n\r\n        <CardContent>\r\n\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <i class='bx bxs-bank danger'></i>: {e.nom_soc}\r\n          </Typography>\r\n\r\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n            siret : {e.siret}\r\n          </Typography>\r\n\r\n          <Typography variant=\"body2\">\r\n            siren : {e.siren}\r\n          </Typography>\r\n          <Typography variant=\"body2\">\r\n            Résponsable : {getResponsibleName(e.id_utili)}\r\n          </Typography>\r\n\r\n          <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n            date de creation : {moment(e.createdAt).format(\"DD  MMMM YYYY  HH:mm\")}\r\n          </Typography>\r\n          {typeof e.description !== 'undefined' && e.observation !== '' && (\r\n  <Typography variant=\"body2\">\r\n    observation : {e.description}\r\n  </Typography>\r\n)}\r\n\r\n          <Typography variant=\"body2\">\r\n            Code naf : {e.activite_soc}\r\n          </Typography>\r\n          <Typography variant=\"body2\">\r\n            Libelle naf : {e.libelle_naf}\r\n          </Typography>\r\n\r\n          <Typography variant=\"body2\">\r\n            adresse postal  : {e.adresse_local} {e.ville_soc} {e.code_postal}\r\n          </Typography>\r\n\r\n          <Typography variant=\"body2\">\r\n            Origine du prospect : {e.origineprospect}\r\n          </Typography>\r\n\r\n          <Typography variant=\"body2\">\r\n            syndicat : {e.syndicat}\r\n          </Typography>\r\n     \r\n          <Typography variant=\"body2\">\r\n            telephone : {e.tel}\r\n          </Typography>\r\n\r\n          <Typography variant=\"body1\">\r\n            les interlocuteurs ratacher a cette societe\r\n            {\r\n              id_soc.map((item, index) => (\r\n                <Typography variant=\"body2\" key={index}>\r\n                  <i class='bx bxs-user'></i> {item.nom}\r\n                </Typography>\r\n              ))\r\n            }\r\n          </Typography>\r\n          <Typography variant=\"body1\" >\r\n            les Activités Commerciales\r\n            {\r\n              activSoc.map((item, index) => (\r\n                <div key={index}>\r\n                  <Typography variant=\"body2\">\r\n                    <i class='bx bx-message-alt-dots'></i>{moment(item.date_rdv).format(\"DD  MMMM YYYY  HH:mm\")}\r\n                  </Typography>\r\n                  {typeof item.besoin !== 'undefined' && item.besoin !== '' && (\r\n                    <Typography variant=\"body2\">\r\n                      besoin : {item.besoin}\r\n                    </Typography>\r\n                  )}\r\n                  {typeof item.description !== 'undefined' && item.description !== '' && (\r\n                    <Typography variant=\"body2\">\r\n                      description : {item.description}\r\n                    </Typography>\r\n                  )}\r\n                </div>\r\n\r\n              ))\r\n            }\r\n          </Typography>\r\n\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <Stack spacing={1} alignItems=\"center\">\r\n              <CardActions>\r\n                <Button href={`/modifier/${nb}`} size=\"small\">modification</Button>\r\n              </CardActions>\r\n            </Stack>\r\n          </Typography>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <Stack spacing={1} alignItems=\"center\">\r\n              <CardActions>\r\n                <Button href={`/Societes`} size=\"small\">retour</Button>\r\n              </CardActions>\r\n            </Stack>\r\n          </Typography>\r\n\r\n        </CardContent>\r\n      )}\r\n\r\n    </React.Fragment>\r\n  )\r\n  return (\r\n    <Box sx={{ minWidth: 275 }}>\r\n      <Card variant=\"outlined\">{card}</Card>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Customersinfo\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport UserService from \"../services/user.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport AuthAction from \"../services/Action\"\r\nimport { useParams } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/fr';\r\nimport Societe from '../controllers/Societe';\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\n//table class\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Chip from '@mui/material/Chip';\r\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport Stack from '@mui/material/Stack';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\n\r\nfunction Usersinfo() {\r\n  // tableau\r\n  const [rowsPerPage2, setRowsPerPage2] = React.useState(10);\r\n  const [page2, setPage2] = React.useState(0);\r\n  const handleChangePage2 = (newPage) => {\r\n    setPage2(newPage);\r\n  };\r\n  const handleChangeRowsPerPage2 = (event) => {\r\n    setRowsPerPage2(+event.target.value);\r\n    setPage2(0);\r\n  };\r\n\r\n  // Get ID from URL\r\n  const params = useParams();\r\n  var nb = parseInt(params.id);\r\n  const tableRef = useRef(null);\r\n  //GET USER INFO\r\n  const user = AuthService.getCurrentUser()\r\n  //lister user selon l'id\r\n  const [Listuser, Setuser] = useState([]);\r\n  //lister societe selon le siret\r\n  const [Listsociete, Setsociete] = useState([]);\r\n  //les interlocuteur de la societes selon l'id\r\n  //lister action selon l'id\r\n  const [Action, SetAction] = useState([]);\r\n  const id_action = Action.filter(task => task.id_utili === nb)\r\n  id_action.sort((b, a) => new Date(a.date_rdv).getTime() - new Date(b.date_rdv).getTime());\r\n  //afficher la liste des users\r\n  const retrieveUsers = () => {\r\n    UserService.getListe_User()\r\n      .then((response) => {\r\n        Setuser(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  //SELECT ALL SOCIETES (CEMECA/SOFITECH)\r\n\r\n  const retrieveTutorials = () => {\r\n    if (user) {\r\n      Societe.AllSociete().then(data => Setsociete(data))\r\n      AuthAction.findAll().then((response) => {\r\n        SetAction(response.data)\r\n      })\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveUsers()\r\n    retrieveTutorials()\r\n    //ACTION\r\n  }, []);\r\n  console.log(Listsociete)\r\n  // date time input field Action\r\n  const event = new Date();\r\n\r\n  event.setMonth(event.getMonth() + 1);\r\n\r\n\r\n  const [valueDate1, setValueDate1] = useState(\"\");\r\n  const [valueDate2, setValueDate2] = useState(\"\");\r\n  const [valueDate, setDate] = useState(false);\r\n\r\n  const handleChangeDate1 = (newValue) => {\r\n    setValueDate1(newValue);\r\n\r\n  };\r\n  const handleChangeDate2 = (newValue) => {\r\n    setValueDate2(newValue);\r\n    setDate(true)\r\n  };\r\n\r\n  const mysn = 1000 * 3600 * 24\r\n  const fltr_date = Action.filter(task => (((new Date(task.date_rdv) - valueDate2) / mysn) < 0) && ((new Date(task.date_rdv) - valueDate1) / mysn) > 0)\r\n  const filtre_date_Action_util1 = fltr_date.filter(task => task.id_utili === user.id)\r\n  console.log(filtre_date_Action_util1)\r\n  //FILTER SOCIETES SELON L'ID\r\n  const actItem = Listuser.filter(task => task.id === nb)\r\n  actItem.sort((b, a) => new Date(a.date_rdv).getTime() - new Date(b.date_rdv).getTime());\r\n\r\n\r\n\r\n  console.log(Date.now())\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n\r\n    <div className='row'>\r\n\r\n      <div className=\"col-6\">\r\n        <Box\r\n          component=\"form\"\r\n          sx={{\r\n            '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n          }}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n        >\r\n          <div className=\"row\">\r\n\r\n\r\n\r\n            <div className=\"col-6\">\r\n              <p>Date début d'action</p>\r\n              <LocalizationProvider dateAdapter={AdapterMoment} >\r\n\r\n                <Stack spacing={5}>\r\n                  <DesktopDatePicker\r\n                    value={valueDate1}\r\n                    onChange={handleChangeDate1}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                  />\r\n                </Stack>\r\n              </LocalizationProvider>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <p>Date fin d'action</p>\r\n              <LocalizationProvider dateAdapter={AdapterMoment}>\r\n                <Stack spacing={5}>\r\n                  <DesktopDatePicker\r\n                    value={valueDate2}\r\n                    onChange={handleChangeDate2}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                  />\r\n                </Stack>\r\n              </LocalizationProvider>\r\n            </div>\r\n          </div>\r\n\r\n        </Box>\r\n      </div>\r\n      <div className=\"col-6\">\r\n        <DownloadTableExcel\r\n          filename={\"Compte-rendu\"}\r\n          sheet={\"Compte-rendu\"}\r\n          currentTableRef={tableRef.current}\r\n        >\r\n\r\n\r\n          <Button variant=\"contained\" color=\"success\" endIcon={<SendIcon />}>\r\n            Excel\r\n          </Button>\r\n\r\n        </DownloadTableExcel>\r\n      </div>\r\n\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\" ref={tableRef}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\">Nom société</TableCell>\r\n              <TableCell align=\"center\">Date du RDV</TableCell>\r\n              <TableCell align=\"center\">Nom interlocuteur</TableCell>\r\n              <TableCell align=\"center\">Crédit_cop</TableCell>\r\n              <TableCell align=\"center\">compte rendu </TableCell>\r\n              <TableCell align=\"center\">besoin</TableCell>\r\n              <TableCell align=\"center\">Etat</TableCell>\r\n\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n\r\n          </TableBody>\r\n          <TableBody>\r\n            {valueDate ? (\r\n\r\n\r\n              filtre_date_Action_util1.map((row, index) => (\r\n                <TableRow\r\n                  key={index}\r\n                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                >\r\n                  <TableCell align=\"center\">\r\n                    {row.nom_societe}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{moment(row.date_rdv).format(\"DD  MMMM YYYY HH:mm\")}</TableCell>\r\n                  <TableCell align=\"center\">{row.nom_interlocuteur}</TableCell>\r\n                  <TableCell align=\"center\"> {row.credit_cop}</TableCell>\r\n                  <TableCell align=\"center\"> {row.description}</TableCell>\r\n                  <TableCell align=\"center\"> {row.besoin}</TableCell>\r\n                  {row.validation === 'realiser' && (\r\n                    <TableCell align=\"center\">\r\n\r\n                      <Chip label=\"réalisé\" color=\"success\" />\r\n\r\n\r\n                    </TableCell>\r\n\r\n                  )}\r\n                  {row.validation === 'non realiser' && (\r\n                    <TableCell align=\"center\">\r\n                      <Chip label=\"Non réalisé\" color=\"error\" />\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n\r\n              ))\r\n            ) : (\r\n\r\n              id_action.map((row, index) => (\r\n                <TableRow\r\n                  key={index}\r\n                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                >\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {\r\n                      (Listsociete.filter(task => task.nom_soc === row.nom_societe)).map((e, index2) => (\r\n                        <a key={index2} href={`/Societe/${e.siret}`}>{row.nom_societe}</a>\r\n                      ))}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{moment(row.date_rdv).format(\"DD  MMMM YYYY HH:mm\")}</TableCell>\r\n                  <TableCell align=\"center\">{row.nom_interlocuteur}</TableCell>\r\n                  <TableCell align=\"center\"> {row.credit_cop}</TableCell>\r\n                  <TableCell align=\"center\"> {row.description}</TableCell>\r\n                  <TableCell align=\"center\"> {row.besoin}</TableCell>\r\n                  {row.validation === 'realiser' && (\r\n                    <TableCell align=\"center\">\r\n                      <Chip label=\"réalisé\" color=\"success\" />\r\n                    </TableCell>\r\n                  )}\r\n                  {row.validation === 'non realiser' && (\r\n                    <TableCell align=\"center\">\r\n                      <Chip label=\"Non réalisé\" color=\"error\" />\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n\r\n              )))\r\n\r\n            }\r\n\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Usersinfo\r\n","import React, { useState,useRef,useEffect } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthSociete from \"../services/societe\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport checkForm from '../common/Ajouter/checkedForm'\r\nimport './../assets/css/picklist.css'\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport AuthService from \"../services/auth.service\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport liste from \"../assets/JsonData/liste_syndicat.json\"\r\nimport origine_prospect from \"../assets/JsonData/origine_prospect.json\"\r\nimport RoleUser from \"../controllers/Role\";\r\nimport SocieteAPI from '../controllers/Societe';\r\nconst AddTutorial = () => {\r\n\r\n\r\n\r\n  //variable checked from\r\n  const required = checkForm.required;\r\n  const vsiret = checkForm.vsiret;\r\n  const vsiren = checkForm.vsiren;\r\n  const vnom_soc = checkForm.vnom_soc;\r\n  const vnom_responsable = checkForm.vnom_responsable;\r\n  const vid_role = checkForm.vid_role;\r\n  const vcode_postal = checkForm.vcode_postal;\r\n  const vobservation = checkForm.vopportunité;\r\n  const cville = checkForm.cville;\r\n  const vsyndicat = checkForm.vobservation;\r\n  const vtel = checkForm.vtel;\r\n  const vpays = checkForm.vpays;\r\n  const vadresse = checkForm.vadresse;\r\n\r\n  const initialSocieteState = {\r\n    siret: \"\",\r\n    siren: \"\",\r\n    nom_soc: \"\",\r\n    nom_responsable_soc: \"\",\r\n    date_creation_soc: \"\",\r\n    activite_soc: \"\",\r\n    adresse_local: \"\",\r\n    pays: \"\",\r\n    ville_soc: \"\",\r\n    code_postal: \"\",\r\n    syndicat: \"\",\r\n    Origine_du_prospect: \"\",\r\n    observation: \"\",\r\n    tel: \"\",\r\n    app_sofitech: \"\",\r\n    app_cemeca: \"\",\r\n    soc_sofitech: \"\",\r\n    soc_cemeca: \"\",\r\n    id_role: \"\",\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  const [Societe, setSociete] = useState({initialSocieteState});\r\n  const [ListeSociete, setListeSociete] = useState([]);\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [myJSON, setactive] = useState([]);\r\n  const [myJSON2, setactive2] = useState([]);\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n\r\n  const land =(e) => {\r\n    setactive(Array.isArray(e)?e.map(x=>x.NOM):[])\r\n  }\r\n  const land2 = (e) => {\r\n    setactive2(Array.isArray(e) ? e.map(x => x.NOM) : [])\r\n  }\r\n  const saveSociete = (e) => {\r\n        const syndicat = myJSON.join();\r\n        const Origine_du_prospect = myJSON2.join();\r\n        var data = {\r\n          siret: Societe.siret,\r\n          siren: Societe.siren,\r\n          nom_soc: Societe.nom_soc,\r\n          nom_responsable_soc: Societe.nom_responsable_soc,\r\n          date_creation_soc: Societe.date_creation_soc,\r\n          activite_soc: Societe.activite_soc,\r\n          adresse_local: Societe.adresse_local,\r\n          pays: Societe.pays,\r\n          ville_soc: Societe.ville_soc,\r\n          code_postal:Societe.code_postal,\r\n          syndicat:syndicat,\r\n          Origine_du_prospect:Origine_du_prospect,\r\n          observation: Societe.observation,\r\n          tel: Societe.tel,\r\n          id_role: Societe.id_role,\r\n          message: message.message,\r\n          successful:successful.successful,\r\n        };\r\n\r\n        e.preventDefault();\r\n        form.current.validateAll();\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n          AuthSociete.update(Societe.siret,data)\r\n            .then(response => {\r\n              setSociete({\r\n                siren:response.data.siren,\r\n                siret: response.data.siret,\r\n                nom_soc: response.data.nom_soc,\r\n                nom_responsable_soc: response.data.nom_responsable_soc,\r\n                activite_soc: response.data.activite_soc,\r\n                adresse_local: response.data.adresse_local,\r\n                pays: response.data.pays,\r\n                ville_soc: response.data.ville_soc,\r\n                code_postal: response.data.code_postal,\r\n                syndicat: response.data.syndicat,\r\n                Origine_du_prospect:response.data.Origine_du_prospect,\r\n                observation: response.data.observation,\r\n                tel: response.data.tel,\r\n                date: response.data.date,\r\n                id_role: response.data.id_role\r\n              }\r\n              );\r\n              setSuccessful(true);\r\n              setMessage(response.data.message)\r\n              console.log(Societe.syndicat,'syndicat');\r\n            },\r\n            error => {\r\n              const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n          setMessage(resMessage);\r\n            }\r\n            )\r\n            .catch(e => {\r\n              console.log(e);\r\n\r\n            });\r\n        }\r\n  };\r\n\r\n\r\n// API modifier\r\nconst params = useParams();\r\nvar nb=parseInt(params.id);\r\nconst user = AuthService.getCurrentUser()\r\n  //GET role sofitech\r\n  const mysofitech = RoleUser.SofitechRole();\r\n  //GET role cemece\r\n  const mycemeca = RoleUser.CemecaRole();\r\n   //SELECT ALL SOCIETES WHERE AUTH\r\n   const retrieveTutorials = () => {\r\n    if(user){\r\n        if (mycemeca) SocieteAPI.CemecaListe().then(data => setListeSociete(data))\r\n    if (mysofitech) SocieteAPI.AllSociete().then(data => setListeSociete(data))\r\n  }\r\n  };\r\n  //FILTER SOCIETES SELON L'ID\r\n  const actItem =ListeSociete.filter(task=>task.siret===nb)\r\n  useEffect(() =>{\r\n    retrieveTutorials()\r\n  },[mysofitech,mycemeca]);\r\n\r\n  console.log(ListeSociete)\r\n\r\n\r\n\r\n\r\nconst handleInputChange = event => {\r\n  const { name, value } = event.target;\r\n  setSociete({ ...Societe, [name]: value });\r\n\r\n};\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"card card-container\">\r\n    <h2 className=\" col-md-6 page-`header\">Modification</h2>\r\n    <div className=\"submit-form\">\r\n\r\n\r\n\r\n         <Form onSubmit={saveSociete} ref={form}>\r\n         {!successful && (\r\n           <div>\r\n\r\n              <div className=\"form-group\">\r\n\r\n                <label htmlFor=\"title\">siret</label>\r\n                {actItem.map((e)=>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  defaultValue={e.siret}\r\n                  value={Societe.siret=e.siret}\r\n                  onChange={handleInputChange}\r\n                  validations={[required,vsiret]}\r\n                  name=\"siret\"\r\n                />\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">siren</label>\r\n                {actItem.map((e)=>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  defaultValue={e.siren}\r\n                  value={Societe.siren}\r\n                  onChange={handleInputChange}\r\n                  validations={[required,vsiren]}\r\n                  name=\"siren\"\r\n                />\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">nom de la societe</label>\r\n\r\n                {actItem.map((e)=>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  defaultValue={e.nom_soc}\r\n                  value={Societe.nom_soc}\r\n                  onChange={handleInputChange}\r\n                  validations={[required,vnom_soc]}\r\n                  name=\"nom_soc\"\r\n                />\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">nom du delegué</label>\r\n                {actItem.map((e)=>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  defaultValue={e.nom_responsable_soc}\r\n                  value={Societe.nom_responsable_soc}\r\n                  onChange={handleInputChange}\r\n                  validations={[required, vnom_responsable]}\r\n                  name=\"nom_responsable_soc\"\r\n                />\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">code naf</label>\r\n\r\n                {actItem.map((e)=>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  defaultValue={e.activite_soc}\r\n                  value={Societe.activite_soc }\r\n                  onChange={handleInputChange}\r\n                  validations={[required,vsyndicat]}\r\n                  name=\"activite_soc\"\r\n                />\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">adresse_local</label>\r\n                {actItem.map((e)=>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  defaultValue={e.adresse_local}\r\n                  value={Societe.adresse_local}\r\n                  onChange={handleInputChange}\r\n                  validations={[required,vadresse]}\r\n                  name=\"adresse_local\"\r\n                />\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">pays</label>\r\n                {actItem.map((e)=>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  defaultValue={e.ville_soc}\r\n                  value={Societe.pays}\r\n                  onChange={handleInputChange}\r\n                  validations={[required,vpays]}\r\n                  name=\"pays\"\r\n                />\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">ville_soc</label>\r\n                {actItem.map((e)=>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  value={Societe.ville_soc}\r\n                  defaultValue={e.ville_soc}\r\n                  onChange={handleInputChange}\r\n                  validations={[required,cville]}\r\n                  name=\"ville_soc\"\r\n                />\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"text\">code_postale</label>\r\n                {actItem.map((e)=>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  defaultValue={e.code_postal}\r\n                  value={Societe.code_postal=e.code_postal}\r\n                  onChange={handleInputChange}\r\n                  validations={[required,vcode_postal]}\r\n                  name=\"code_postal\"\r\n                />\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">origine du prospect </label>\r\n                <Multiselect\r\n                  displayValue=\"NOM\"\r\n                  groupBy=\"TYPE\"\r\n                  value=\"4\"\r\n                  isObject={true}\r\n                  selectedValues={console.log}\r\n                  onChange={console.log}\r\n                  id={console.log}\r\n                  onNOMPressFn={function noRefCheck() { }}\r\n                  onRemove={function noRefCheck() { }}\r\n                  onSearch={function noRefCheck() { }}\r\n                  onSelect={land2}\r\n                  options={origine_prospect}\r\n                  emptyRecordMsg='No options available'\r\n                  showCheckbox\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n\r\n                <label htmlFor=\"title\">syndicat</label>\r\n                <Multiselect\r\n                    displayValue=\"NOM\"\r\n                    groupBy=\"TYPE\"\r\n                    value=\"4\"\r\n                    isObject={true}\r\n                    selectedValues={console.log}\r\n                    onChange={console.log}\r\n                    id={console.log}\r\n                    onNOMPressFn={function noRefCheck(){}}\r\n                    onRemove={function noRefCheck(){}}\r\n                    onSearch={function noRefCheck(){}}\r\n                    onSelect={land}\r\n                    options={liste}\r\n                    showCheckbox\r\n                  />\r\n\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">observation</label>\r\n                {actItem.map((e)=>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  value={Societe.observation}\r\n                  defaultValue={e.observation}\r\n                  onChange={handleInputChange}\r\n                  validations={[required,vobservation]}\r\n                  name=\"observation\"\r\n                />\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">telephone Societes</label>\r\n                {actItem.map((e)=>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  defaultValue={e.tel}\r\n                  value={Societe.tel}\r\n                  onChange={handleInputChange}\r\n                  validations={[required,vtel]}\r\n                  name=\"tel\"\r\n                />\r\n                )}\r\n              </div>\r\n\r\n\r\n              <select  validations={[required,vid_role]}  value={Societe.id_role} onChange={handleInputChange} name=\"id_role\" >\r\n                <option>select une valeur</option>\r\n                <option value=\"1\">cemeca</option>\r\n                <option value=\"2\">sofitech</option>\r\n              </select>\r\n\r\n              <button  className=\"btn btn-success\">\r\n                Submit\r\n              </button>\r\n\r\n\r\n            </div>\r\n          )}\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div\r\n                className={\r\n                  successful\r\n                    ? \"alert alert-success\"\r\n                    : \"alert alert-danger\"\r\n                }\r\n                role=\"alert\"\r\n              >\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n          </Form>\r\n\r\n        </div>\r\n        </div>\r\n\r\n  );\r\n};\r\n\r\nexport default AddTutorial;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthInter from \"../services/Interlocuteur\"\r\nimport AuthAction from \"../services/Action\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport checkForm from '../common/Ajouter/checkedForm'\r\nimport './../assets/css/picklist.css'\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport AuthService from \"../services/auth.service\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport besoinliste from \"../assets/JsonData/besoin.json\";\r\nimport RoleUser from \"../controllers/Role\";\r\nimport Societe from '../controllers/Societe';\r\nconst ActionMod = () => {\r\n    //variable checked from\r\n    const required = checkForm.required;\r\n    const vsiret = checkForm.vsiret;\r\n    const vsiren = checkForm.vsiren;\r\n    const vnom_soc = checkForm.vnom_soc;\r\n    const initialSocieteState = {\r\n        id: \"\",\r\n        date_action: \"\",\r\n        description: \"\",\r\n        nom_interlocuteur: \"\",\r\n        type_action: \"\",\r\n        nom_societe: \"\",\r\n        date_rdv: \"\",\r\n        createdAt: \"\",\r\n        besoin: \"\",\r\n    };\r\n    //liste type action\r\n    const [Action, setAction] = useState({ initialSocieteState });\r\n    const [ListeAction, setListeAction] = useState([]);\r\n    const [ListeSociete, setListeSociete] = useState([]);\r\n    const [ListeInter, setListeInter] = useState([]);\r\n    //GET role sofitech\r\n    const mysofitech = RoleUser.SofitechRole();\r\n    //GET role cemece\r\n    const mycemeca = RoleUser.CemecaRole();\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [myJSON, setactive] = useState([]);\r\n    const [myJSON_Interlocuteur, setInterlocuteur] = useState([]);\r\n    const [myJSON_besoin, setactivebesoin] = useState([]);\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n    //liste type Action\r\n    const option = [\r\n        { value: 'RDV', label: 'RDV' },\r\n        { value: 'contact téléphonique', label: 'contact téléphonique' },\r\n        { value: 'contact teams', label: 'contact teams' },\r\n        { value: 'contact par courrier', label: 'contact par courrier' }\r\n    ]\r\n\r\n    //set pickliste type action\r\n    const land = (e) => {\r\n        setactive(Array.isArray(e) ? e.map(x => x.label) : [])\r\n    }\r\n    //set pickliste nom societe\r\n    const land2 = (e) => {\r\n        setInterlocuteur(Array.isArray(e) ? e.map(x => x.nom) : [])\r\n    }\r\n    //set pickliste besoin\r\n    const land3 = (e) => {\r\n        setactivebesoin(Array.isArray(e) ? e.map(x => x.NOM) : [])\r\n    }\r\n    // API modifier\r\n    const params = useParams();\r\n    var nb = parseInt(params.id);\r\n    const user = AuthService.getCurrentUser()\r\n    const saveSociete = (e) => {\r\n        const type_action = myJSON.join();\r\n        const besoin = myJSON_besoin.join();\r\n        const interlocuteur = myJSON_Interlocuteur.join();\r\n        const IDACTOIN = parseInt(params.id)\r\n\r\n        var data = {\r\n            id: IDACTOIN,\r\n            date_action: Action.date_action,\r\n            description: Action.description,\r\n            nom_interlocuteur: interlocuteur,\r\n            type_action: type_action,\r\n            besoin: besoin,\r\n            date_rdv: Action.date_rdv,\r\n            message: message.message,\r\n            successful: successful.successful,\r\n        };\r\n        e.preventDefault();\r\n        form.current.validateAll();\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n            console.log('bouton clicker')\r\n            AuthAction.update(nb, data)\r\n                .then(response => {\r\n                    setAction({\r\n\r\n                        id: response.data.id,\r\n                        date_action: response.data.date_action,\r\n                        description: response.data.description,\r\n                        nom_interlocuteur: response.data.nom_interlocuteur,\r\n                        type_action: response.data.type_action,\r\n                        date_rdv: response.data.date_rdv,\r\n                        nom_societe: response.data.nom_societe,\r\n                        besoin: response.data.besoin,\r\n                    }\r\n                    );\r\n                    setSuccessful(true);\r\n                    setMessage('Action modifiée avec succès')\r\n                },\r\n                    error => {\r\n                        const resMessage =\r\n                            (error.response &&\r\n                                error.response.data &&\r\n                                error.response.data.message) ||\r\n                            error.message ||\r\n                            error.toString();\r\n                        setMessage(resMessage);\r\n                    }\r\n                )\r\n                .catch(e => {\r\n                    console.log(e);\r\n\r\n                });\r\n        }\r\n    };\r\n    //SELECT ALL SOCIETES WHERE AUTH\r\n    const retrieveTutorials = () => {\r\n        if (user) {\r\n            // liste interlocuteur\r\n            AuthInter.findAll()\r\n                .then((response) => {\r\n                    setListeInter(response.data);\r\n\r\n                })\r\n                .catch((e) => {\r\n                    console.log(e);\r\n                });\r\n            //liste action\r\n            AuthAction.findAll()\r\n                .then((response) => {\r\n                    setListeAction(response.data);\r\n\r\n                })\r\n                .catch((e) => {\r\n                    console.log(e);\r\n                });\r\n            //liste societe\r\n            //afficher cemca\r\n            if (mycemeca) Societe.CemecaListe().then(data => setListeSociete(data))\r\n                ;\r\n            //afficher sofitech\r\n            if (mysofitech) Societe.AllSociete().then(data => setListeSociete(data))\r\n                ;\r\n        }\r\n    };\r\n    //FILTER SOCIETES SELON L'ID\r\n    const [societefiltred, setsocietefiltred] = useState(\"\");\r\n    const [societefiltredid, setsocietefiltredid] = useState([]);\r\n    const actItem = ListeAction.filter(task => task.id === nb)\r\n    const retriveSocietefiltred = () => {\r\n        actItem.map((e) => {\r\n            setsocietefiltred(e.nom_societe)\r\n        })\r\n    }\r\n    const idSociete = ListeSociete.filter(task => task.nom_soc === societefiltred)\r\n    const retriveSocietefiltredid = () => {\r\n\r\n        idSociete.map((e) => {\r\n            setsocietefiltredid(e.siret)\r\n        })\r\n    }\r\n    const idSocieteInterl = ListeInter.filter(task => task.id_soc === societefiltredid)\r\n    useEffect(() => {\r\n        retrieveTutorials()\r\n    }, [mycemeca, mysofitech]);\r\n    useEffect(() => {\r\n        retriveSocietefiltred()\r\n    }, [actItem]);\r\n    useEffect(() => {\r\n        retriveSocietefiltredid()\r\n    }, [idSociete]);\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        setAction({ ...Action, [name]: value });\r\n\r\n    };\r\n    return (\r\n        <div className=\"submit-form\">\r\n            <Form onSubmit={saveSociete} ref={form}>\r\n                {!successful && (\r\n                    <div>\r\n\r\n                        <div className=\"form-group\">\r\n\r\n                            <label htmlFor=\"title\">Société</label>\r\n                            {actItem.map((e) =>\r\n\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"title\"\r\n                                    defaultValue={e.nom_societe}\r\n                                    value={Action.nom_societe = e.nom_societe}\r\n                                    onChange={handleInputChange}\r\n                                    validations={[required, vsiret]}\r\n                                    name=\"nom_societe\"\r\n                                />\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">date RDV</label>\r\n                            {actItem.map((e) =>\r\n\r\n                                <input\r\n                                    type=\"datetime-local\"\r\n                                    className=\"form-control\"\r\n                                    id=\"title\"\r\n                                    defaultValue={(e.date_rdv).toString().substring(0, 16)}\r\n                                    value={Action.date_rdv}\r\n                                    onChange={handleInputChange}\r\n                                    validations={[required, vsiren]}\r\n                                    name=\"date_rdv\"\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">description</label>\r\n\r\n                            {actItem.map((e) =>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"title\"\r\n                                    defaultValue={e.description}\r\n                                    value={Action.description}\r\n                                    onChange={handleInputChange}\r\n                                    validations={[required, vnom_soc]}\r\n                                    name=\"description\"\r\n                                />\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n\r\n                            <label htmlFor=\"title\">interlocuteur</label>\r\n                            {actItem.map((e) =>\r\n                                <Multiselect\r\n                                    displayValue=\"nom\"\r\n                                    value=\"4\"\r\n                                    isObject={true}\r\n                                    selectedValues={[{ nom: e.nom_interlocuteur }]}\r\n                                    onChange={console.log}\r\n                                    id={console.log}\r\n                                    onNOMPressFn={function noRefCheck() { }}\r\n                                    onRemove={function noRefCheck() { }}\r\n                                    onSearch={function noRefCheck() { }}\r\n                                    onSelect={land2}\r\n                                    options={idSocieteInterl}\r\n                                    showCheckbox\r\n                                />\r\n                            )}\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n\r\n                            <label htmlFor=\"title\">Type d activite commerciale</label>\r\n                            {actItem.map((e) =>\r\n                                <Multiselect\r\n                                    displayValue=\"label\"\r\n                                    value=\"4\"\r\n                                    isObject={true}\r\n                                    selectedValues={[{ label: e.type_action }]}\r\n                                    onChange={console.log}\r\n                                    id={console.log}\r\n                                    onNOMPressFn={function noRefCheck() { }}\r\n                                    onRemove={function noRefCheck() { }}\r\n                                    onSearch={function noRefCheck() { }}\r\n                                    onSelect={land}\r\n                                    options={option}\r\n                                    showCheckbox\r\n                                />\r\n                            )}\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">besoin</label>\r\n                            {actItem.map((e) =>\r\n                                <Multiselect\r\n                                    displayValue=\"NOM\"\r\n                                    value=\"4\"\r\n                                    isObject={true}\r\n                                    selectedValues={[{ NOM: e.besoin }]}\r\n                                    onChange={console.log}\r\n                                    id={console.log}\r\n                                    onNOMPressFn={function noRefCheck() { }}\r\n                                    onRemove={function noRefCheck() { }}\r\n                                    onSearch={function noRefCheck() { }}\r\n                                    onSelect={land3}\r\n                                    options={besoinliste}\r\n                                    showCheckbox\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        <button className=\"btn btn-success\">\r\n                            Valider\r\n                        </button>\r\n                    </div>\r\n                )}\r\n                {message && (\r\n                    <div className=\"form-group\">\r\n                        <div\r\n                            className={\r\n                                successful\r\n                                    ? \"alert alert-success\"\r\n                                    : \"alert alert-danger\"\r\n                            }\r\n                            role=\"alert\"\r\n                        >\r\n                            {message}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n            </Form>\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ActionMod;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthInterlocuteur from \"../services/Interlocuteur\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport checkForm from '../common/Ajouter/checkedForm'\r\nimport './../assets/css/picklist.css'\r\nimport AuthService from \"../services/auth.service\";\r\nimport { useParams } from \"react-router-dom\";\r\nconst AddTutorial = () => {\r\n\r\n\r\n\r\n    //variable checked from\r\n    const required = checkForm.required;\r\n    const vsiret = checkForm.vsiret;\r\n    const vsiren = checkForm.vsiren;\r\n    const vnom_soc = checkForm.vnom_soc;\r\n    const vnom_responsable = checkForm.vnom_responsable;\r\n    const vsyndicat = checkForm.vobservation;\r\n    const vadresse = checkForm.vadresse;\r\n\r\n    const initialSocieteState = {\r\n        id: \"\",\r\n        nom: \"\",\r\n        prenom: \"\",\r\n        email: \"\",\r\n        adresse: \"\",\r\n        code_postal: \"\",\r\n        tel: \"\",\r\n        fonction_inter: \"\",\r\n\r\n\r\n    };\r\n    const [Interlocuteur, setInterlocuteur] = useState({ initialSocieteState });\r\n    const [ListeInterlocuteur, setListeInterlocuteur] = useState([]);\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [myJSON, setactive] = useState([]);\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n    const saveSociete = (e) => {\r\n        var data = {\r\n            id_interlocuteur : Interlocuteur.id_interlocuteur ,\r\n            id_soc : Interlocuteur.id_soc ,\r\n            nom: Interlocuteur.nom,\r\n            prenom: Interlocuteur.prenom,\r\n            email: Interlocuteur.email,\r\n            adresse: Interlocuteur.adresse,\r\n            code_postal: Interlocuteur.code_postal,\r\n            tel: Interlocuteur.tel,\r\n            fonction_inter: Interlocuteur.fonction_inter,\r\n            message: message.message,\r\n            successful: successful.successful,\r\n        };\r\n\r\n        e.preventDefault();\r\n        form.current.validateAll();\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n            AuthInterlocuteur.update(Interlocuteur.id_interlocuteur, data)\r\n                .then(response => {\r\n                    setInterlocuteur({\r\n                        id_interlocuteur : response.data.id_interlocuteur ,\r\n                        id_soc : response.data.id_soc ,\r\n                        nom: response.data.nom,\r\n                        prenom: response.data.prenom,\r\n                        email: response.data.email,\r\n                        adresse: response.data.adresse,\r\n                        code_postal: response.data.code_postal,\r\n                        tel: response.data.tel,\r\n                        fonction_inter: response.data.fonction_inter,\r\n                    }\r\n                    );\r\n                    setSuccessful(true);\r\n                    setMessage(response.data.message)\r\n                },\r\n                    error => {\r\n                        const resMessage =\r\n                            (error.response &&\r\n                                error.response.data &&\r\n                                error.response.data.message) ||\r\n                            error.message ||\r\n                            error.toString();\r\n                        setMessage(resMessage);\r\n                    }\r\n                )\r\n                .catch(e => {\r\n                    console.log(e);\r\n\r\n                });\r\n        }\r\n    };\r\n\r\n    console.log(\"test\", myJSON)\r\n\r\n    // API modifier\r\n    const params = useParams();\r\n    var nb = parseInt(params.id);\r\n    const user = AuthService.getCurrentUser()\r\n    //SELECT ALL Interlocuteur WHERE AUTH\r\n    const retrieveInterlocuteur = () => {\r\n        if (user) {\r\n            AuthInterlocuteur.findAll()\r\n            .then((response) => {\r\n                setListeInterlocuteur(response.data);\r\n\r\n            })\r\n            .catch((e) => {\r\n              console.log(e);\r\n            });\r\n        }\r\n    };\r\n    //FILTER SOCIETES SELON L'ID\r\n    const actItem = ListeInterlocuteur.filter(task => task.id_interlocuteur === nb)\r\n    useEffect(() => {\r\n        retrieveInterlocuteur()\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        setInterlocuteur({ ...Interlocuteur, [name]: value });\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"submit-form\">\r\n\r\n\r\n\r\n            <Form onSubmit={saveSociete} ref={form}>\r\n                {!successful && (\r\n                    <div>\r\n\r\n                        <div className=\"form-group\">\r\n\r\n                            <label htmlFor=\"title\">id</label>\r\n                            {actItem.map((e) =>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"title\"\r\n                                    defaultValue={e.id_interlocuteur}\r\n                                    value={Interlocuteur.id_interlocuteur = e.id_interlocuteur}\r\n                                    onChange={handleInputChange}\r\n                                    validations={[required, vsiret]}\r\n                                    name=\"id_interlocuteur\"\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">Société</label>\r\n                            {actItem.map((e) =>\r\n\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"title\"\r\n                                    defaultValue={e.id_soc}\r\n                                    value={Interlocuteur.id_soc}\r\n                                    onChange={handleInputChange}\r\n                                    validations={[required, vsiren]}\r\n                                    name=\"id_soc\"\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">nom</label>\r\n                            {actItem.map((e) =>\r\n\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"title\"\r\n                                    defaultValue={e.nom}\r\n                                    value={Interlocuteur.nom}\r\n                                    onChange={handleInputChange}\r\n                                    validations={[required, vsiren]}\r\n                                    name=\"nom\"\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">prenom</label>\r\n\r\n                            {actItem.map((e) =>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"title\"\r\n                                    defaultValue={e.prenom}\r\n                                    value={Interlocuteur.prenom}\r\n                                    onChange={handleInputChange}\r\n                                    validations={[required, vnom_soc]}\r\n                                    name=\"prenom\"\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">email</label>\r\n                            {actItem.map((e) =>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"title\"\r\n                                    defaultValue={e.email}\r\n                                    value={Interlocuteur.email}\r\n                                    onChange={handleInputChange}\r\n                                    validations={[required, vnom_responsable]}\r\n                                    name=\"email\"\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">code naf</label>\r\n\r\n                            {actItem.map((e) =>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"title\"\r\n                                    defaultValue={e.adresse}\r\n                                    value={Interlocuteur.adresse}\r\n                                    onChange={handleInputChange}\r\n                                    validations={[required, vsyndicat]}\r\n                                    name=\"adresse\"\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">tel</label>\r\n                            {actItem.map((e) =>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"title\"\r\n                                    defaultValue={e.tel}\r\n                                    value={Interlocuteur.tel}\r\n                                    onChange={handleInputChange}\r\n                                    validations={[required, vadresse]}\r\n                                    name=\"tel\"\r\n                                />\r\n                            )}\r\n                        </div>\r\n\r\n\r\n                        <button className=\"btn btn-success\">\r\n                            Valider\r\n                        </button>\r\n\r\n\r\n                    </div>\r\n                )}\r\n\r\n                {message && (\r\n                    <div className=\"form-group\">\r\n                        <div\r\n                            className={\r\n                                successful\r\n                                    ? \"alert alert-success\"\r\n                                    : \"alert alert-danger\"\r\n                            }\r\n                            role=\"alert\"\r\n                        >\r\n                            {message}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n            </Form>\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default AddTutorial;\r\n","\r\nconst PageError = () =>{\r\n\r\n    return (\r\n        <div>\r\n            vous n’êtes pas connecté !\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default PageError","import React, { useEffect, useState, useRef } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\nimport Button from '@mui/material/Button';\r\nimport RoleUser from \"../controllers/Role\";\r\nimport moment from \"moment\";\r\nimport Societe from '../controllers/Societe';\r\nimport 'moment/locale/fr';\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    Grid,\r\n\r\n} from '@material-ui/core';\r\n\r\nconst Evolis = ({ location, props }) => {\r\n    const { fltr_date } = location.state || {};\r\n\r\n    const [ACtionFilter, SetActionFilter] = useState(fltr_date || []);\r\n    console.log(fltr_date);\r\n    const myadmin = RoleUser.AdminRole();\r\n    const ReadMore = ({ children }) => {\r\n        const text = children;\r\n        const [isReadMore, setIsReadMore] = useState(true);\r\n        const toggleReadMore = () => {\r\n            setIsReadMore(!isReadMore);\r\n        };\r\n\r\n        if (!text) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <p className=\"text\">\r\n                {isReadMore ? text.slice(0, 30) : text}\r\n                <span onClick={toggleReadMore} className=\"read-or-hide\">\r\n                    {isReadMore ? \"...read more\" : \" show less\"}\r\n                </span>\r\n            </p>\r\n        );\r\n    };\r\n    const [societeListe, SetsocieteListe] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const mysofitech = RoleUser.SofitechRole();\r\n    //GET role cemece\r\n    const tableRef = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        ACtionFilter.sort((b, a) => new Date(a.date_rdv).getTime() - new Date(b.date_rdv).getTime());\r\n        if (mysofitech) Societe.AllSociete().then(data => SetsocieteListe(data))\r\n            ;\r\n        if (searchTerm !== '') {\r\n            SetActionFilter((prevFilter) =>\r\n                prevFilter.filter((task) => task.nom_societe.toLowerCase().includes(searchTerm.toLowerCase()))\r\n            );\r\n        }\r\n\r\n        // Update the page when filters change\r\n    }, [myadmin, searchTerm, mysofitech]);\r\n\r\n    const handleSearchChange = (event) => {\r\n        const searchTerm = event.target.value || '';\r\n        setSearchTerm(searchTerm);\r\n    };\r\n\r\n    const renderCardRow = (e) => {\r\n        console.log(\"Action data:\", e);\r\n        console.log(\"societeListe:\", societeListe);\r\n        console.log(\"Filtered:\", societeListe.filter((task) => task.nom_soc.toLowerCase() === e.nom_societe.toLowerCase()));\r\n\r\n        return (\r\n            <TableRow key={e.id} style={{ fontSize: '10px' }}>\r\n\r\n                <TableCell style={{ fontSize: '8px' }}>\r\n                    {societeListe\r\n                        .filter((task) => task.nom_soc.toLowerCase() === e.nom_societe.toLowerCase())\r\n                        .map((index) => (\r\n                            <a href={`/Societe/${index.siret}`} key={index.id}>\r\n                                {index.activite_soc}\r\n                            </a>\r\n                        ))\r\n                    }\r\n                </TableCell>\r\n                <TableCell style={{ fontSize: '8px' }}>\r\n                    {societeListe\r\n                        .filter((task) => task.nom_soc.toLowerCase() === e.nom_societe.toLowerCase())\r\n                        .map((index) => (\r\n                            <a href={`/Societe/${index.siret}`} key={index.id}>\r\n                                {index.libelle_naf}\r\n                            </a>\r\n                        ))\r\n                    }\r\n                </TableCell>\r\n\r\n                <TableCell style={{ fontSize: '10px' }}>\r\n                    {moment(e.date_rdv).format('DD MMMM YYYY HH:mm')}\r\n                </TableCell>\r\n                <TableCell style={{ fontSize: '8px' }}>{e.besoin}</TableCell>\r\n                <TableCell style={{ fontSize: '8px' }}>{e.investissement}</TableCell>\r\n                <TableCell style={{ fontSize: '8px' }}>{e.montant}</TableCell>\r\n            </TableRow>\r\n        );\r\n    };\r\n\r\n    return (\r\n\r\n        <Box sx={{ minWidth: 275 }}>\r\n            <div className=\"row\">\r\n                <h2 className=\"page-header\">Evolis\r\n                </h2>\r\n                <Grid container alignItems=\"center\">\r\n                    <Grid item xs={12} md={4}>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"recherche par Société\"\r\n                            value={searchTerm}\r\n                            onChange={handleSearchChange}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={6} container justifyContent=\"flex-end\">\r\n                        {/* Add the Download Button */}\r\n                        <DownloadTableExcel\r\n                            filename={\"Compte-rendu\"}\r\n                            sheet={\"Compte-rendu\"}\r\n                            currentTableRef={tableRef.current}\r\n                        >\r\n                            <Button variant=\"contained\" color=\"success\" >\r\n                                Excel\r\n                            </Button>\r\n                        </DownloadTableExcel>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n                <div variant=\"outlined\">\r\n                    <TableContainer component={Paper}>\r\n                        <Table ref={tableRef}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell style={{ width: '60px', fontSize: '10px' }}>\r\n                                        🏢 Code NAF\r\n                                    </TableCell>\r\n                                    <TableCell style={{ width: '60px', fontSize: '10px' }}>\r\n                                        🏢 Libelle\r\n                                    </TableCell>\r\n                                    <TableCell style={{ width: '120px', fontSize: '10px' }}>\r\n                                        ⏱️ Date activité commerciale\r\n                                    </TableCell>\r\n                                    <TableCell style={{ width: '100px', fontSize: '10px' }}>\r\n                                        💼 Nature d'investissement\r\n                                    </TableCell>\r\n                                    <TableCell style={{ width: '100px', fontSize: '10px' }}>\r\n                                        📋 Quelle Equipement\r\n                                    </TableCell>\r\n                                    <TableCell style={{ width: '100px', fontSize: '10px' }}>\r\n                                        💰 Montant\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {ACtionFilter.map(renderCardRow)}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n\r\n                </div>\r\n            </div>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Evolis;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport axios from \"axios\";\r\n\r\nconst PasswordChangeCountdown = ({ userId }) => {\r\n  const [daysSinceLastChange, setDaysSinceLastChange] = useState(null);\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [showPasswordChangeForm, setShowPasswordChangeForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch the number of days since the last password change from the backend API\r\n    const fetchDaysSinceLastChange = async () => {\r\n      try {\r\n        const user = AuthService.getCurrentUser();\r\n        const response = await axios.get(\r\n          `http://localhost:8080/api/auth/days-since-password-change/${user.id}`\r\n        );\r\n        const data = response.data;\r\n        setDaysSinceLastChange(data.days);\r\n      } catch (error) {\r\n        console.error(\"Error fetching days since password change:\", error);\r\n      }\r\n    };\r\n\r\n    fetchDaysSinceLastChange();\r\n  }, []);\r\n\r\n  const daysRemaining = 30 - daysSinceLastChange;\r\n\r\n  const validatePassword = (password) => {\r\n    // Validation criteria: 10 characters minimum, at least one uppercase letter, and at least one special character\r\n    const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(.{10,})$/;\r\n    return passwordRegex.test(password);\r\n  };\r\n\r\n  const handleChangePassword = () => {\r\n    if (!validatePassword(newPassword)) {\r\n      setMessage(\r\n        \"New password must be at least 10 characters long and contain at least one uppercase letter and one special character.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (newPassword !== confirmNewPassword) {\r\n      setMessage(\"New passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    // Call the backend API to change the password\r\n    AuthService.changePassword(userId, oldPassword, newPassword)\r\n      .then((response) => {\r\n        setMessage(response.message);\r\n        setShowPasswordChangeForm(false);\r\n      })\r\n      .catch((error) => {\r\n        setMessage(error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {daysRemaining <= 0 ? (\r\n        <div>\r\n          <p>Your password is expired.</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <p>You have {daysRemaining} days until your password expires.</p>\r\n          <div>\r\n            {showPasswordChangeForm ? (\r\n              <div>\r\n                <label>Old Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  value={oldPassword}\r\n                  onChange={(e) => setOldPassword(e.target.value)}\r\n                />\r\n                <label>New Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  value={newPassword}\r\n                  onChange={(e) => setNewPassword(e.target.value)}\r\n                />\r\n                <label>Confirm New Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  value={confirmNewPassword}\r\n                  onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n                />\r\n                <button onClick={handleChangePassword}>Change Password</button>\r\n                {message && <div>{message}</div>}\r\n              </div>\r\n            ) : (\r\n              <button onClick={() => setShowPasswordChangeForm(true)}>Change Password</button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordChangeCountdown;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Form from \"react-validation/build/form\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport ReactLoading from 'react-loading';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Loader from \"../components/LoadingPage\";\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://crm.sofitech.pro/\">\r\n        sofitech & cemeca\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nconst PasswordForget = () => {\r\n  let history = useHistory();\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n  const [email, setmail] = useState(\"\");\r\n  const [loading, setLoading] = useState(undefined);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onChangeMail = (e) => {\r\n    const email = e.target.value;\r\n    setmail(email);\r\n  };\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    setMessage(\"\");\r\n\r\n    form.current.validateAll();\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthService.forgotPassword(email).then(\r\n        () => {\r\n          const message = 'mail envoyer !';\r\n          setLoading(true)\r\n         \r\n          setTimeout(() => {\r\n                setLoading(false)\r\n              }, 1000)\r\n              setMessage(message);\r\n        },\r\n      );\r\n    } else {\r\n\r\n    }\r\n  };\r\n  return (\r\n\r\n    <div className=\"col-md-12\">\r\n      {loading ?\r\n        (\r\n        <div className=\"card card-container\">\r\n        <ThemeProvider theme={theme}>\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <Box\r\n              sx={{\r\n                marginTop: 8,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n                <br></br>\r\n                <Loader />\r\n              </Typography>\r\n\r\n            </Box>\r\n            <Copyright sx={{ mt: 8, mb: 4 }} />\r\n          </Container>\r\n        </ThemeProvider>\r\n\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>)\r\n        : (\r\n          <div className=\"card card-container\">\r\n          <ThemeProvider theme={theme}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n              <CssBaseline />\r\n              <Box\r\n                sx={{\r\n                  marginTop: 8,\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                  <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                  recupration de mot de passe\r\n                </Typography>\r\n                <Box component=\"form\" onSubmit={handleLogin} noValidate sx={{ mt: 1 }}>\r\n                  <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    onChange={onChangeMail}\r\n                    id=\"email\"\r\n                    label=\"votre mail\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    autoComplete=\"username\"\r\n                    autoFocus\r\n                  />\r\n              \r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                  >\r\n                    envoyer mail\r\n                  </Button >\r\n                  {message && (\r\n                    <div className=\"form-group\">\r\n                      <div className=\"alert alert-success\" role=\"alert\">\r\n                        {message}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <Grid container>\r\n                    <Grid item xs>\r\n\r\n                    </Grid>\r\n                    <Grid item>\r\n\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </Box>\r\n              <Copyright sx={{ mt: 8, mb: 4 }} />\r\n            </Container>\r\n          </ThemeProvider>\r\n\r\n          <Form onSubmit={handleLogin} ref={form}>\r\n\r\n            <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n          </Form>\r\n        </div>\r\n        )}\r\n\r\n    </div>\r\n  );\r\n};\r\nexport default PasswordForget;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";  // Import de useParams\r\nimport Form from \"react-validation/build/form\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport ReactLoading from \"react-loading\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Link from '@mui/material/Link';\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport Loader from \"../components/LoadingPage\";\r\nfunction Copyright(props) {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"https://crm.sofitech.pro/\">\r\n          sofitech & cemeca\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\nconst theme = createTheme();\r\nfunction Resetpassword() {\r\n  const history = useHistory();\r\n  const  params  = useParams(); \r\n  var resetToken =params.id;\r\n  console.log(resetToken) // Récupérer le token depuis les paramètres d'URL\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n  const [newPassword, setNewPassword] = useState(\"\");  // Nouvelle variable d'état pour le nouveau mot de passe\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");  // Nouvelle variable d'état pour la confirmation du mot de passe\r\n  const [loading, setLoading] = useState(undefined);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onChangePassword = (e) => {\r\n    const newPasswordValue = e.target.value;\r\n    setNewPassword(newPasswordValue);\r\n  };\r\n\r\n  const onChangeConfirmPassword = (e) => {\r\n    const newConfirmPassword = e.target.value;\r\n    setConfirmPassword(newConfirmPassword);\r\n  };\r\n\r\n  const handleResetPassword = (e) => {\r\n    e.preventDefault();\r\n    setMessage(\"\");\r\n\r\n    form.current.validateAll();\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      // Vérification des mots de passe\r\n      if (newPassword !== confirmPassword) {\r\n        setMessage(\"Les mots de passe ne correspondent pas.\");\r\n        return;\r\n      }\r\n      const passwordPattern = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.{10,})/;\r\n      if (!passwordPattern.test(newPassword)) {\r\n        setMessage(\r\n          \"Le mot de passe doit avoir au moins 10 caractères, une majuscule et un caractère spécial (!@#$%^&*).\"\r\n        );\r\n        return;\r\n      }\r\n      console.log(resetToken, newPassword)\r\n      // Appel de la méthode resetPassword du service AuthService avec le token et le nouveau mot de passe\r\n      AuthService.resetPassword(resetToken, newPassword).then(() => {\r\n        const successMessage = \"Mot de passe réinitialisé avec succès !\";\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n          setLoading(false);\r\n          history.push(\"/login\");\r\n        }, 1000);\r\n        setMessage(successMessage);\r\n      });\r\n    }\r\n  };\r\n  return (\r\n\r\n    <div className=\"col-md-12\">\r\n      {loading ?\r\n        (\r\n        <div className=\"card card-container\">\r\n        <ThemeProvider theme={theme}>\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <Box\r\n              sx={{\r\n                marginTop: 8,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n                <br></br>\r\n                <Loader />\r\n              </Typography>\r\n\r\n            </Box>\r\n            <Copyright sx={{ mt: 8, mb: 4 }} />\r\n          </Container>\r\n        </ThemeProvider>\r\n\r\n        <Form onSubmit={handleResetPassword} ref={form}>\r\n\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>)\r\n        : (\r\n          <div className=\"card card-container\">\r\n          <ThemeProvider theme={theme}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n              <CssBaseline />\r\n              <Box\r\n                sx={{\r\n                  marginTop: 8,\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                  <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                  recupration de mot de passe\r\n                </Typography>\r\n                <Box component=\"form\" onSubmit={handleResetPassword} noValidate sx={{ mt: 1 }}>\r\n                  <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    onChange={onChangePassword}\r\n                    id=\"newPassword\"\r\n                    label=\"votre password\"\r\n                    name=\"newPassword\"\r\n                    value={newPassword}\r\n                    autoComplete=\"newPassword\"\r\n                    autoFocus\r\n                  />\r\n                   <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    onChange={onChangeConfirmPassword}\r\n                    id=\"confirmPassword\"\r\n                    label=\"confiramtion de votre password\"\r\n                    name=\"confirmPassword\"\r\n                    value={confirmPassword}\r\n                    autoComplete=\"confirmPassword\"\r\n                    autoFocus\r\n                  />\r\n              \r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                  >\r\n                    envoyer mail\r\n                  </Button >\r\n                  {message && (\r\n                    <div className=\"form-group\">\r\n                      <div className=\"alert alert-success\" role=\"alert\">\r\n                        {message}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <Grid container>\r\n                    <Grid item xs>\r\n\r\n                    </Grid>\r\n                    <Grid item>\r\n\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </Box>\r\n              <Copyright sx={{ mt: 8, mb: 4 }} />\r\n            </Container>\r\n          </ThemeProvider>\r\n\r\n          <Form onSubmit={handleResetPassword} ref={form}>\r\n\r\n            <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n          </Form>\r\n        </div>\r\n        )}\r\n\r\n    </div>\r\n  );\r\n};\r\nexport default Resetpassword;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Dashboard from '../pages/Dashboard';\r\nimport axios from \"axios\";\r\nimport Customers from '../pages/Customers';\r\nimport Register from '../pages/Register';\r\nimport Login from '../pages/Login';\r\nimport ActionDetails from '../pages/ActionUser';\r\nimport Action from '../pages/Action';\r\nimport Ajouter from '../pages/Ajouter';\r\nimport DashboardAdmin from '../pages/DashboardAdmin';\r\nimport AuthService from \"../services/auth.service\";\r\nimport Interlocuteur from '../pages/Interlocuteur';\r\nimport InterlocuteurDetails from '../pages/InterlocuteurDetails';\r\nimport CustomerInfo from '../pages/CustomerInfo';\r\nimport UsersInfo from '../pages/User';\r\nimport CustomerModify from '../pages/societeMod';\r\nimport ActionMod from '../pages/ActionMod';\r\nimport InterlocuteurMod from '../pages/InterlocuteurMod';\r\nimport PageError from '../pages/Error-page';\r\nimport RoleUser from \"../controllers/Role\";\r\nimport Evolis from '../pages/Evolis';\r\nimport PasswordChangeCountdown from '../pages/PasswordChange';\r\nimport PasswordForget from '../pages/sendMail';\r\nimport Resetpassword from '../pages/resetPassword';\r\n\r\n\r\nconst CRMRoutes = () => {\r\n  const user = AuthService.getCurrentUser();\r\n  const mysofitech = RoleUser.SofitechRole();\r\n  const [daysSinceLastChange, setDaysSinceLastChange] = useState(null);\r\n  useEffect(() => {\r\n    // Fetch the number of days since the last password change from the backend API\r\n    const fetchDaysSinceLastChange = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:8080/api/auth/days-since-password-change/${user.id}`\r\n        );\r\n        const data = response.data;\r\n        setDaysSinceLastChange(data.days);\r\n      } catch (error) {\r\n        console.error(\"Error fetching days since password change:\", error);\r\n      }\r\n    };\r\n\r\n    fetchDaysSinceLastChange();\r\n  }, []);\r\nconsole.log(daysSinceLastChange);\r\n  return (\r\n    <Switch>\r\n      {user && mysofitech ? (\r\n        <>\r\n          <Route path='/' exact component={Dashboard} />\r\n          <Route path='/admin'  component={DashboardAdmin} />\r\n          <Route path='/register' component={Register} />\r\n          <Route path='/Action/:id' component={Action} />\r\n          <Route path='/Evolis' component={Evolis} />\r\n          <Route path='/AllAction' component={ActionDetails}  />\r\n          <Route path='/Societes' component={Customers} />\r\n          <Route path='/Societe/:id' component={CustomerInfo} />\r\n          <Route path='/modifier/:id' component={CustomerModify} />\r\n          <Route path='/Interlocuteur/:id' component={Interlocuteur} />\r\n          <Route path='/ajouter' component={Ajouter} />\r\n          <Route path='/user/:id' component={UsersInfo} />\r\n          <Route path='/Login' component={Login} />\r\n          <Route path='/Inter/modifier/:id' component={InterlocuteurMod} />\r\n          <Route path='/Actions/modifier/:id' component={ActionMod} />\r\n          <Route path='/Interl' component={InterlocuteurDetails} />\r\n\r\n          {/* Route for change password page */}\r\n          <Route\r\n            path=\"/change-password\"\r\n            render={(props) => <PasswordChangeCountdown {...props} userId={user.id} />}\r\n          />\r\n        </>\r\n      ) : (\r\n        <div>\r\n          <Route path='*' exact component={PageError} />\r\n          <Route path='/Login' component={Login} />\r\n          <Route path='/forget-password' component={PasswordForget} />\r\n          <Route path='/reset-password/:id' component={Resetpassword} /> {/* Nouvelle route pour l'oubli de mot de passe */}\r\n        </div>\r\n      )}\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default CRMRoutes;\r\n","import React, {useEffect} from 'react'\r\n\r\nimport './layout.css'\r\n\r\nimport Sidebar from '../sidebar/Sidebar'\r\nimport TopNav from '../topnav/TopNav'\r\nimport CRMRoutes from '../Routes'\r\n\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport ThemeAction from '../../redux/actions/ThemeAction'\r\n\r\nconst Layout = () => {\r\n\r\n    const themeReducer = useSelector(state => state.ThemeReducer)\r\n\r\n    const dispatch = useDispatch()\r\n    require('dotenv').config()\r\n    useEffect(() => {\r\n        const themeClass = localStorage.getItem('themeMode', 'theme-mode-light')\r\n\r\n        const colorClass = localStorage.getItem('colorMode', 'theme-mode-light')\r\n\r\n        dispatch(ThemeAction.setMode(themeClass))\r\n\r\n        dispatch(ThemeAction.setColor(colorClass))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Route render={(props) => (\r\n                <div className={`layout ${themeReducer.mode} ${themeReducer.color}`}>\r\n                    <Sidebar {...props}/>\r\n                    <div className=\"layout__content\">\r\n                        <TopNav/>\r\n                        <div className=\"layout__content-main\">\r\n                            <CRMRoutes/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}/>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nimport { createStore } from 'redux'\r\n\r\nimport { Provider } from 'react-redux'\r\n\r\nimport rootReducer from './redux/reducers'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './assets/boxicons-2.0.7/css/boxicons.min.css'\r\nimport './assets/css/grid.css'\r\nimport './assets/css/theme.css'\r\nimport './assets/css/index.css'\r\n\r\nimport Layout from './components/layout/Layout'\r\n\r\nconst store = createStore(\r\n  rootReducer\r\n)\r\n\r\ndocument.title = 'CRM SOFITECH/CEMECA'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n\r\n      <Layout />\r\n\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}