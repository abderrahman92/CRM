{"version":3,"sources":["reportWebVitals.js","redux/reducers/ThemeReducer.js","redux/reducers/index.js","services/auth.service.js","services/auth-header.js","services/user.service.js","common/EventBus.js","assets/images/sofitech.png","components/sidebar/Sidebar.jsx","components/dropdown/Dropdown.jsx","redux/actions/ThemeAction.js","components/thememenu/ThemeMenu.jsx","components/topnav/TopNav.jsx","components/status-card/StatusCard.jsx","services/Action.js","pages/Dashboard.jsx","services/societe.js","pages/Customers.jsx","common/Register/checkedForm.js","pages/Register.jsx","pages/Login.jsx","pages/Action.jsx","common/Ajouter/checkedForm.js","pages/Ajouter.jsx","services/Interlocuteur.js","pages/Interlocuteur.jsx","pages/CustomerInfo.jsx","components/Routes.jsx","components/layout/Layout.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ThemeReducer","state","action","type","mode","payload","color","rootReducer","combineReducers","API_URL","username","password","axios","post","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","message","get","delete","id","email","roles","parse","getItem","authHeader","user","headers","eventBus","on","event","callback","document","addEventListener","e","detail","dispatch","dispatchEvent","CustomEvent","remove","removeEventListener","SidebarItedes","props","desactive","className","disabled","icon","title","status","SidebarIteact","active","logOut","AuthService","logout","Sidebar","useState","sidebar_items","new_sidbar","setSidbar","undefined","currentUser","setCurrentUser","setadminstate","useEffect","getCurrentUser","nouveaustate","UserService","getAdminBoard","content","error","toString","EventBus","activeItem","findIndex","item","route","location","pathname","desaItem","filter","task","actItem","console","log","src","logo","alt","map","index","to","display_name","href","onClick","Dropdown","content_ref","toggle_ref","dropdown_toggle_el","useRef","dropdown_content_el","current","contains","target","classList","toggle","ref","badge","customToggle","contentData","renderItems","renderFooter","exportDefault","setColor","setMode","getTheme","mode_settings","name","background","class","color_settings","ThemeMenu","menu_ref","menu_toggle_ref","currMode","setcurrMode","currColor","setcurrColor","useDispatch","themeClass","find","colorClass","add","ThemeAction","curr_user","Topnav","placeholder","image","user_menu","renderUserMenu","notifications","renderNotificationItem","StatusCard","count","chartOptions","series","options","chart","dataLabels","enabled","stroke","curve","xaxis","categories","legend","position","grid","show","AuthAction","findAll","Dashboard","ListTest","SetTest","SetIscemeca","Action","SetAction","catch","getCemecaBoard","getSofitechBoard","Action_util","id_utili","statusCards","length","themeReducer","useSelector","theme","height","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","row","border","scope","siret","nom_soc","observation","adresse_local","createdAt","AuthSociete","create","findByTitle","useStyles","makeStyles","table","secondary","light","main","dark","contrastText","tableContainer","borderRadius","margin","maxWidth","tableHeaderCell","fontWeight","backgroundColor","palette","primary","getContrastText","avatar","fontSize","display","Customers","classes","React","page","rowsPerPage","searchAll","setSearchAll","retrieveTutorials","value","onChange","nb","parseInt","nom","code_postal","siren","slice","Grid","container","lg","Typography","variant","ville","ville_soc","nom_responsable_soc","activite_soc","syndicat","Fab","TableFooter","required","role","vemail","isEmail","vrole","isNaN","vusername","vpassword","Register","padding","listuser","setListeUser","listauth","setListeAuth","listauthRef","form","checkBtn","checkForm","setUsername","setEmail","setRoles","setPassword","successful","setSuccessful","setMessage","retrieveUsers","getListe_User","get_historique_auth","setPage","setRowsPerPage","handleChangePage","newPage","handleChangeRowsPerPage","onChangeRoles","Avatar","company","style","TablePagination","rowsPerPageOptions","onChangePage","onChangeRowsPerPage","date_connection","onSubmit","preventDefault","validateAll","context","_errors","register","resMessage","htmlFor","validations","Login","history","useHistory","loading","setLoading","login","push","window","reload","create_historique_auth","ID_societe","setID_societe","ListeAction","listeActUser","params","useParams","initial1ctionState","nom_interlocuteur","type_action","nom_societe","description","date_action","date_rdv","setAction","handleInputChange","Date","FormControl","fullWidth","m","TextField","label","multiline","rows","InputLabel","Select","labelId","MenuItem","vsiret","vsiren","vnom_soc","vnom_responsable","vdate_creation_soc","vactivité","vadresse","vpays","cville","vcode_postal","vopportunité","vobservation","vtel","vid_role","AddTutorial","vsyndicat","initialSocieteState","date_creation_soc","pays","tel","app_sofitech","app_cemeca","soc_sofitech","soc_cemeca","id_role","Societe","setSociete","myJSON","setactive","API_INSEE_SIRET","b","String","chaine","SIRETAPI","setSIRETAPI","etablissements","join","date","activite_principale","defaultValue","displayValue","groupBy","isObject","selectedValues","onNOMPressFn","onRemove","onSearch","onSelect","Array","isArray","x","NOM","TYPE","showCheckbox","initialState","prenom","adresse","code_postale","activite","id_soc","Interlocuteur","setInterlocuteur","listeinter","Setlisteinter","fonction_inter","Customersinfo","ListSociete","SetSociete","Box","card","Fragment","CardContent","gutterBottom","mb","CardActions","Button","size","Card","Routes","path","exact","CustomerInfo","Ajouter","Layout","render","TopNav","store","createStore","ReactDOM","getElementById"],"mappings":"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,IAAK,UAEP,CACEC,KAAM,MACND,IAAK,aAEP,CACEC,KAAM,MACND,IAAK,6BAEP,CACEC,KAAM,MACND,IAAK,QAEP,CACEC,KAAM,MACND,IAAK,UAEP,CACEC,KAAM,MACND,IAAK,0BAEP,CACEC,KAAM,MACND,IAAK,gBAEP,CACEC,KAAM,MACND,IAAK,aAEP,CACEC,KAAM,MACND,IAAK,SAEP,CACEC,KAAM,MACND,IAAK,MAEP,CACEC,KAAM,MACND,IAAK,QAEP,CACEC,KAAM,MACND,IAAK,SAEP,CACEC,KAAM,MACND,IAAK,UAEP,CACEC,KAAM,MACND,IAAK,SAEP,CACEC,KAAM,MACND,IAAK,SAEP,CACEC,KAAM,MACND,IAAK,QAEP,CACEC,KAAM,MACND,IAAK,YAGP,CACEC,KAAM,MACND,IAAK,QAGP,CACEC,KAAM,MACND,IAAK,UAIP,CACEC,KAAM,QACND,IAAK,OAEP,CACEC,KAAM,QACND,IAAK,OAEP,CACEC,KAAM,QACND,IAAK,UAEP,CACEC,KAAM,QACND,IAAK,SAEP,CACEC,KAAM,QACND,IAAK,aAEP,CACEC,KAAM,QACND,IAAK,QAEP,CACEC,KAAM,QACND,IAAK,SAEP,CACEC,KAAM,QACND,IAAK,OAEP,CACEC,KAAM,QACND,IAAK,SAEP,CACEC,KAAM,QACND,IAAK,SAEP,CACEC,KAAM,QACND,IAAK,OAEP,CACEC,KAAM,QACND,IAAK,YAEP,CACEC,KAAM,QACND,IAAK,SAEP,CACEC,KAAM,QACND,IAAK,QAEP,CACEC,KAAM,QACND,IAAK,SAEP,CACEC,KAAM,QACND,IAAK,WAEP,CACEC,KAAM,QACND,IAAK,+BA6QSE,cAAY,OAKlB,sBAAKvV,UAAU,aAAf,UACE,uBAAO2P,QAAQ,QAAf,yBACA,cAAC,KAAD,CACEzS,KAAK,OACL8C,UAAU,eACVxB,GAAG,QACHiW,aAAa,UACbnJ,MAAOqI,EAAQxK,YACfoC,SAAU8F,EACVzB,YAAa,CAAClD,EAASmG,GACvBtO,KAAK,mBAGT,sBAAKvE,UAAU,aAAf,UACE,uBAAO2P,QAAQ,QAAf,g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","file":"static/js/main.3a282811.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const ThemeReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case 'SET_MODE':\r\n            return {\r\n                ...state,\r\n                mode: action.payload\r\n            }\r\n        case 'SET_COLOR':\r\n            return {\r\n                ...state,\r\n                color: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ThemeReducer","import ThemeReducer from \"./ThemeReducer\"\r\nimport { combineReducers } from \"redux\"\r\n\r\nconst rootReducer = combineReducers({ThemeReducer})\r\n\r\nexport default rootReducer","import axios from \"axios\";\r\n\r\nconst API_URL = \"https://sofcem.mtech.dev/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  create_historique_auth(username,password,message){\r\n    return axios.post(API_URL + \"historique\", {\r\n      username,\r\n      password,\r\n      message\r\n      \r\n    });\r\n\r\n  }\r\n    get_historique_auth(){\r\n    return axios.get(API_URL + \"list_historique\");\r\n\r\n  };\r\n  removeAll_historique_auth () {\r\n    return axios.delete(API_URL +`list_historique`);\r\n  };\r\n  remove_historiqueremove(id) {\r\n    return axios.delete(API_URL +`list_historique/${id}`);\r\n  };\r\n\r\n  register(username, email,roles, password,) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      roles,\r\n      password,\r\n      \r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  if (user && user.accessToken) {\r\n    // return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\r\n    return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'https://sofcem.mtech.dev/api/test/';\r\n\r\nclass UserService {\r\n  getListe_User() {\r\n    return axios.get(API_URL + 'liste_user');\r\n  }\r\n  getPublicContent() {\r\n    return axios.get(API_URL + 'all');\r\n  }\r\n\r\n  getCemecaBoard() {\r\n    return axios.get(API_URL + 'cemeca', { headers: authHeader() });\r\n  }\r\n  getSofitechBoard() {\r\n    return axios.get(API_URL + 'sofitech', { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","const eventBus = {\r\n  on(event, callback) {\r\n    document.addEventListener(event, (e) => callback(e.detail));\r\n  },\r\n  dispatch(event, data) {\r\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\r\n  },\r\n  remove(event, callback) {\r\n    document.removeEventListener(event, callback);\r\n  },\r\n};\r\n\r\nexport default eventBus;\r\n","export default __webpack_public_path__ + \"static/media/sofitech.28261e02.png\";","import React, { useEffect, useState } from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './sidebar.css'\r\n\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nimport UserService from \"../../services/user.service\";\r\n\r\nimport EventBus from \"../../common/EventBus\"\r\n\r\nimport logo from '../../assets/images/sofitech.png'\r\n\r\nimport sidebar_items from '../../assets/JsonData/sidebar_routes.json'\r\n \r\n//sidabr desactivation parametres\r\nconst SidebarItedes = props => {\r\n\r\n    const desactive = props.desactive ? '' : 'desactive';\r\n\r\n    return (\r\n        <div  className=\"sidebar__item\">\r\n            <div disabled  className={`sidebar__item-inner ${desactive}`}>\r\n                <i className={props.icon}></i>\r\n                <span >\r\n                    {props.title}\r\n                    {props.status}\r\n                </span>           \r\n            </div>  \r\n        </div>  \r\n    )\r\n}\r\n//sidabr activation parametres\r\nconst SidebarIteact = props => {\r\n\r\n    const active = props.active ? 'active' : '';\r\n\r\n    return (\r\n        <div disabled className=\"sidebar__item\">\r\n            <div  disabled  className={`sidebar__item-inner ${active}`}>\r\n                <i className={props.icon}></i>\r\n                <span >\r\n                    {props.title}\r\n                    {props.status}\r\n                </span>                \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\nconst logOut = () => {\r\n    AuthService.logout();\r\n  };\r\nconst Sidebar = props => {\r\n\r\n    const active = props.active ? 'active' : '';\r\n    const [new_sidbar,setSidbar]=useState(sidebar_items);\r\n    const [currentUser, setCurrentUser] = useState(undefined);\r\n    const [adminstate, setadminstate] = useState(undefined);\r\n     useEffect(()=>{ \r\n        const user = AuthService.getCurrentUser()\r\n            if (user){\r\n                const nouveaustate = [...new_sidbar]\r\n                UserService.getAdminBoard().then(\r\n                    response => {\r\n                        nouveaustate[7].status = \"desactive\"\r\n                        nouveaustate[2].status = \"active\"\r\n                        nouveaustate[8].status = \"active\"\r\n                        setadminstate({\r\n                        content: response.data\r\n                        \r\n                      });\r\n                    },\r\n                    error => {\r\n                        setadminstate({\r\n                        content:\r\n                          (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                          error.message ||\r\n                          error.toString()\r\n                      });\r\n              \r\n                      if (error.response && error.response.status === 401) {\r\n                        EventBus.dispatch(\"logout\");\r\n                      }\r\n                    }\r\n                  );\r\n                nouveaustate[7].status = \"desactive\"\r\n                nouveaustate[0].status = \"active\"\r\n                nouveaustate[2].status = \"active\"\r\n                nouveaustate[1].status = \"active\"\r\n                setSidbar(nouveaustate) \r\n                setCurrentUser(user) \r\n            }\r\n     },[]) \r\n\r\n \r\n    const activeItem = new_sidbar.findIndex(item => item.route === props.location.pathname)\r\n      //login desactiver\r\n      const desaItem =new_sidbar.filter(task=>task.status===\"desactive\")\r\n      const actItem =new_sidbar.filter(task=>task.status===\"active\")\r\n\r\n      console.log(new_sidbar)\r\n      console.log(actItem)\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebar__logo\">\r\n                <img  src={logo} alt=\"company logo\" />\r\n            </div>\r\n            {\r\n                actItem.map((item, index) => (\r\n                    <Link  to={item.route} key={index}>\r\n                       \r\n                        <SidebarIteact\r\n                            title={item.display_name}\r\n                            icon={item.icon}\r\n                            active={index === activeItem}\r\n                           \r\n                        />\r\n                    </Link>\r\n                ))\r\n            },\r\n         ,{currentUser ?(\r\n                <div>\r\n                    {\r\n                        desaItem.map((item, index) => (\r\n                                <SidebarItedes\r\n                                    title={item.display_name}\r\n                                    icon={item.icon}\r\n                                    active={index === activeItem}\r\n                                \r\n                                />\r\n                        )) \r\n                    }\r\n                    <div  className=\"sidebar__item\">\r\n                        <div  className={`sidebar__item-inner${active}`}>\r\n                        <i className='bx bxs-log-out'></i>\r\n                            <a href=\"/login\" className=\"nav-link\" onClick={logOut}>Déconnexion</a>\r\n                        </div>\r\n                    \r\n                    </div>\r\n                \r\n                </div> \r\n                \r\n                \r\n              ): (\r\n                <div  className=\"sidebar__item\">\r\n                  \r\n                    \r\n                </div>\r\n              )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, {useRef} from 'react'\r\n\r\nimport './dropdown.css'\r\n\r\nconst clickOutsideRef = (content_ref, toggle_ref) => {\r\n    document.addEventListener('mousedown', (e) => {\r\n        // user click toggle\r\n        if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\r\n            content_ref.current.classList.toggle('active')\r\n        } else {\r\n            // user click outside toggle and content\r\n            if (content_ref.current && !content_ref.current.contains(e.target)) {\r\n                content_ref.current.classList.remove('active')\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nconst Dropdown = props => {\r\n\r\n    const dropdown_toggle_el = useRef(null)\r\n    const dropdown_content_el = useRef(null)\r\n\r\n    clickOutsideRef(dropdown_content_el, dropdown_toggle_el)\r\n    \r\n    return (\r\n        <div className='dropdown'>\r\n            <button ref={dropdown_toggle_el} className=\"dropdown__toggle\">\r\n                {\r\n                    props.icon ? <i className={props.icon}></i> : ''\r\n                }\r\n                {\r\n                    props.badge ? <span className='dropdown__toggle-badge'>{props.badge}</span> : ''\r\n                }\r\n                {\r\n                    props.customToggle ? props.customToggle() : ''\r\n                }\r\n            </button>\r\n            <div ref={dropdown_content_el} className=\"dropdown__content\">\r\n                {\r\n                    props.contentData && props.renderItems ? props.contentData.map((item, index) => props.renderItems(item, index)) : ''\r\n                }\r\n                {\r\n                    props.renderFooter ? (\r\n                        <div className=\"dropdown__footer\">\r\n                            {props.renderFooter()}\r\n                        </div>\r\n                    ) : ''\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropdown\r\n","const setMode = mode => {\r\n    return {\r\n        type: 'SET_MODE',\r\n        payload: mode\r\n    }\r\n}\r\n\r\nconst setColor = color => {\r\n    return {\r\n        type: 'SET_COLOR',\r\n        payload: color\r\n    }\r\n}\r\n\r\nconst getTheme = () => {\r\n    return {\r\n        type: 'GET_THEME'\r\n    }\r\n}\r\n\r\nconst exportDefault = {\r\n    setColor,\r\n    setMode,\r\n    getTheme\r\n}\r\n\r\nexport default exportDefault","import React, {useRef, useState, useEffect} from 'react'\r\n\r\nimport './thememenu.css'\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport ThemeAction from '../../redux/actions/ThemeAction'\r\n\r\nconst mode_settings = [\r\n    {\r\n        id: 'light',\r\n        name: 'Light',\r\n        background: 'light-background',\r\n        class: 'theme-mode-light'\r\n    },\r\n    {\r\n        id: 'dark',\r\n        name: 'Dark',\r\n        background: 'dark-background',\r\n        class: 'theme-mode-dark'\r\n    }\r\n]\r\n\r\nconst color_settings = [\r\n    {\r\n        id: 'blue',\r\n        name: 'Blue',\r\n        background: 'blue-color',\r\n        class: 'theme-color-blue'\r\n    },\r\n    {\r\n        id: 'red',\r\n        name: 'Red',\r\n        background: 'red-color',\r\n        class: 'theme-color-red'\r\n    },\r\n    {\r\n        id: 'cyan',\r\n        name: 'Cyan',\r\n        background: 'cyan-color',\r\n        class: 'theme-color-cyan'\r\n    },\r\n    {\r\n        id: 'green',\r\n        name: 'Green',\r\n        background: 'green-color',\r\n        class: 'theme-color-green'\r\n    },\r\n    {\r\n        id: 'orange',\r\n        name: 'Orange',\r\n        background: 'orange-color',\r\n        class: 'theme-color-orange'\r\n    },\r\n]\r\n\r\nconst clickOutsideRef = (content_ref, toggle_ref) => {\r\n    document.addEventListener('mousedown', (e) => {\r\n        // user click toggle\r\n        if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\r\n            content_ref.current.classList.toggle('active')\r\n        } else {\r\n            // user click outside toggle and content\r\n            if (content_ref.current && !content_ref.current.contains(e.target)) {\r\n                content_ref.current.classList.remove('active')\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nconst ThemeMenu = () => {\r\n\r\n    const user = AuthService.getCurrentUser()\r\n    const menu_ref = useRef(null)\r\n    const menu_toggle_ref = useRef(null)\r\n\r\n    clickOutsideRef(menu_ref, menu_toggle_ref)\r\n\r\n    const setActiveMenu = () => menu_ref.current.classList.add('active')\r\n\r\n    const closeMenu = () => menu_ref.current.classList.remove('active')\r\n\r\n    const [currMode, setcurrMode] = useState('light')\r\n\r\n    const [currColor, setcurrColor] = useState('blue')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setMode = mode => {\r\n        setcurrMode(mode.id)\r\n        localStorage.setItem('themeMode', mode.class)\r\n        dispatch(ThemeAction.setMode(mode.class))\r\n    }\r\n\r\n    const setColor = color => {\r\n        setcurrColor(color.id)\r\n        localStorage.setItem('colorMode', color.class)\r\n        dispatch(ThemeAction.setColor(color.class))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const themeClass = mode_settings.find(e => e.class === localStorage.getItem('themeMode', 'theme-mode-light'))\r\n\r\n        const colorClass = color_settings.find(e => e.class === localStorage.getItem('colorMode', 'theme-mode-light'))\r\n\r\n        if (themeClass !== undefined) setcurrMode(themeClass.id)\r\n\r\n        if (colorClass !== undefined) setcurrColor(colorClass.id)\r\n\r\n    }, []);\r\n\r\n    if(user){\r\n        \r\n    }\r\n\r\n    return (\r\n       \r\n        <div>\r\n            {user?(\r\n                <div>\r\n                     <button ref={menu_toggle_ref} className=\"dropdown__toggle\" onClick={() => setActiveMenu()}>\r\n                    <i className='bx bx-palette'></i>\r\n                    </button>\r\n                    <div ref={menu_ref} className=\"theme-menu\">\r\n                        <h4>Theme settings</h4>\r\n                        <button className=\"theme-menu__close\" onClick={() => closeMenu()}>\r\n                            <i className='bx bx-x'></i>\r\n                        </button>\r\n                        <div className=\"theme-menu__select\">\r\n                            <span>Choose mode</span>\r\n                            <ul className=\"mode-list\">\r\n                                {\r\n                                    mode_settings.map((item, index) => (\r\n                                        <li key={index} onClick={() => setMode(item)}>\r\n                                            <div className={`mode-list__color ${item.background} ${item.id === currMode ? 'active' : ''}`}>\r\n                                                <i className='bx bx-check'></i>\r\n                                            </div>\r\n                                            <span>{item.name}</span>\r\n                                        </li>\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"theme-menu__select\">\r\n                            <span>Choose color</span>\r\n                            <ul className=\"mode-list\">\r\n                                {\r\n                                    color_settings.map((item, index) => (\r\n                                        <li key={index} onClick={() => setColor(item)}>\r\n                                            <div className={`mode-list__color ${item.background} ${item.id === currColor ? 'active' : ''}`}>\r\n                                                <i className='bx bx-check'></i>\r\n                                            </div>\r\n                                            <span>{item.name}</span>\r\n                                        </li>\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n     \r\n            ):(\r\n                <div>               \r\n                </div>\r\n            )}\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeMenu\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nimport './topnav.css'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Dropdown from '../dropdown/Dropdown'\r\n\r\nimport ThemeMenu from '../thememenu/ThemeMenu'\r\n\r\nimport notifications from '../../assets/JsonData/notification.json'\r\n\r\nimport user_menu from '../../assets/JsonData/user_menus.json'\r\n\r\n\r\nconst curr_user = {\r\n    username: 'Tuat Tran',\r\n\r\n}\r\nconst user = AuthService.getCurrentUser();\r\n\r\nconst renderNotificationItem = (item, index) => (\r\n    <div className=\"notification-item\" key={index}>\r\n        <i className={item.icon}></i>\r\n        <span>{item.content}</span>\r\n    </div>\r\n)\r\n\r\nconst renderUserToggle = (user) => (\r\n    <div className=\"topnav__right-user\">\r\n        <div className=\"topnav__right-user__image\">\r\n            <img src={user.image} alt=\"\" />\r\n        </div>\r\n        <div className=\"topnav__right-user__name\">\r\n            {user.display_name}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst renderUserMenu =(item, index) => (\r\n    <Link to='/' key={index}>\r\n        <div className=\"notification-item\">\r\n            <i className={item.icon}></i>\r\n            <span>{item.content}</span>\r\n        </div>\r\n    </Link>\r\n)\r\n\r\nconst Topnav = props => {\r\n    const [currentUser, setCurrentUser] = useState(undefined);\r\n   \r\n     useEffect(()=>{\r\n        const user = AuthService.getCurrentUser();\r\n            if (user){\r\n                setCurrentUser(user)\r\n                \r\n            }\r\n    \r\n       \r\n     },[])\r\n     return (\r\n        <div>\r\n            {user?(\r\n        \r\n                <div className='topnav'>\r\n                    <div className=\"topnav__search\">\r\n                        <input type=\"text\" placeholder='Search here...' />\r\n                        <i className='bx bx-search'></i>\r\n                    </div>\r\n                    <div className=\"topnav__right\">\r\n                        <div className=\"topnav__right-item\">\r\n                            {/* dropdown here */}\r\n                            {currentUser ?(\r\n                        \r\n                        <Link>\r\n                        <div  className=\"sidebar__item\">\r\n                            <div  className={`sidebar__item-inner`}>\r\n                            <i className='bx bxs-user-check' ></i>\r\n                                <span >\r\n                                {currentUser.username}\r\n                                </span>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        </Link>\r\n                            ):(\r\n                                <Dropdown\r\n                                customToggle={() => renderUserToggle(curr_user)}\r\n                                contentData={user_menu}\r\n                                renderItems={(item, index) => renderUserMenu(item, index)}\r\n                            />\r\n                            )}\r\n                        </div>\r\n                        <div className=\"topnav__right-item\">\r\n                            <Dropdown\r\n                                icon='bx bx-bell'\r\n                                badge='0'\r\n                                contentData={notifications}\r\n                                renderItems={(item, index) => renderNotificationItem(item, index)}\r\n                                renderFooter={() => <Link to='/'>View All</Link>}\r\n                            />\r\n                            {/* dropdown here */}\r\n                        </div>\r\n                        <div className=\"topnav__right-item\">\r\n                            <ThemeMenu/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                ):(\r\n                    <div>               \r\n                    </div>\r\n                )}\r\n        </div>    \r\n       \r\n    )\r\n}\r\n\r\nexport default Topnav\r\n","import React from 'react'\r\n\r\nimport './statuscard.css'\r\n\r\nconst StatusCard = props => {\r\n    return (\r\n        <div className='status-card'>\r\n            <div className=\"status-card__icon\">\r\n                <i className={props.icon}></i>\r\n            </div>\r\n            <div className=\"status-card__info\">\r\n                <h4>{props.count}</h4>\r\n                <span>{props.title}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusCard\r\n","import axios from \"axios\";\r\n\r\n\r\nconst API_URL = \"https://sofcem.mtech.dev/api/auth/\";\r\n\r\n\r\n\r\n\r\nclass AuthAction {\r\n\r\n\r\n  create(data){\r\n    return axios.post(API_URL + \"action\", data);\r\n  }\r\n \r\n\r\n  findAll(){\r\n    return axios.get(API_URL + \"action\");\r\n\r\n  };\r\n \r\n\r\n \r\n}\r\n\r\nexport default new AuthAction();\r\n","import React,{useEffect,useState} from 'react'\r\n\r\nimport axios from 'axios';\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Chart from 'react-apexcharts'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport StatusCard from '../components/status-card/StatusCard'\r\n\r\n\r\n\r\nimport Badge from '../components/badge/Badge'\r\n\r\n\r\n//table class\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nimport AuthAction from  \"../services/Action\";\r\n\r\n\r\nconst chartOptions = {\r\n    series: [{\r\n        name: 'nombre action ',\r\n        data: [40,70,20,90,36,80,30,91,60]\r\n    },\r\n    {\r\n        name: 'nombre adherent ajouté ',\r\n        data: [20,40,50,10,46,20,80,71,30]\r\n    }, {\r\n        name: 'nombre contrat signé',\r\n        data: [40, 30, 20, 60, 40, 16, 40, 20, 51]\r\n    }],\r\n    options: {\r\n        color: ['#6ab04c', '#2980b9'],\r\n        chart: {\r\n            background: 'transparent'\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        stroke: {\r\n            curve: 'smooth'\r\n        },\r\n        xaxis: {\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\r\n        },\r\n        legend: {\r\n            position: 'top'\r\n        },\r\n        grid: {\r\n            show: false\r\n        }\r\n    }\r\n}\r\n\r\nconsole.log(AuthAction.findAll)\r\n\r\n\r\nconst renderCusomerHead = (item, index) => (\r\n    <th key={index}>{item}</th>\r\n)\r\n\r\nconst renderCusomerBody = (item, index) => (\r\n    <tr key={index}>\r\n        <td>{item.username}</td>\r\n        <td>{item.order}</td>\r\n        <td>{item.price}</td>\r\n    </tr>\r\n)\r\n\r\n\r\nconst orderStatus = {\r\n    \"shipping\": \"primary\",\r\n    \"pending\": \"warning\",\r\n    \"paid\": \"success\",\r\n    \"refund\": \"danger\"\r\n}\r\n\r\nconst renderOrderHead = (item, index) => (\r\n    <th key={index}>{item}</th>\r\n)\r\n\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n\r\n  //afficher nombre d'action\r\n\r\n\r\n\r\n\r\n \r\n    const[ListTest,SetTest]=useState([]);\r\n    const[Cemeca,SetIscemeca]=useState(false);\r\n    const [currentUser, setCurrentUser] = useState(undefined);\r\n    const[Action,SetAction]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        const user = AuthService.getCurrentUser();\r\n            if (user){\r\n                //ACTION \r\n                AuthAction.findAll().then((response) => {\r\n                        SetAction(response.data)\r\n                    })\r\n                .catch((e) => {\r\n                    console.log(e);\r\n                });\r\n\r\n                 \r\n                setCurrentUser(user) \r\n                   //afficher cemca\r\n            UserService.getCemecaBoard().then(\r\n                response => {\r\n                    axios.get(\"http://localhost:8080/cemeca\").then((response)=>{\r\n                        SetTest(response.data);\r\n                        SetIscemeca(true)\r\n                    })\r\n                },\r\n          \r\n\r\n                \r\n              );\r\n               //afficher cemca\r\n            UserService.getSofitechBoard().then(\r\n                response => {\r\n                    axios.get(\"http://localhost:8080/sofitech\").then((response)=>{\r\n                        SetTest(response.data);\r\n                    })\r\n                },\r\n          \r\n\r\n                \r\n              );\r\n              \r\n            }\r\n     },[]) \r\n     const Action_util =Action.filter(task=>task.id_utili===currentUser.id)\r\n    \r\n//action\r\nconst statusCards =[\r\n    {\r\n        \"icon\": \"bx bx-bar-chart-alt\",\r\n        \"count\": Action.length,\r\n        \"title\": \"nombres d'action \"\r\n    },\r\n    {\r\n        \"icon\": \"bx bx-bar-chart-alt\",\r\n        \"count\": Action_util.length,\r\n        \"title\": \"action utilisateur\"\r\n    }\r\n]\r\n\r\n    const latestOrders = {\r\n        header: [\r\n            \"siret\",\r\n            \"code naf\",\r\n            \"nom responnsable\",\r\n            \"tel\",\r\n            \"société\"\r\n        ],\r\n        \r\n    }\r\n    const renderOrderBody = (item, index) => (\r\n        <tr key={index}>\r\n            <td>{item.siret}</td>\r\n            <td>{item.activite_soc}</td>\r\n            <td>{item.nom_responsable_soc}</td>\r\n    \r\n            <td>{item.tel}</td>\r\n            {Cemeca? (\r\n                <td>Cemeca</td>\r\n            ) : (\r\n                <td>Sofitech</td>\r\n            )}\r\n           \r\n        </tr>\r\n    ) \r\n    console.log()\r\n       \r\n    const themeReducer = useSelector(state => state.ThemeReducer.mode)\r\n\r\n        return (\r\n            \r\n            <div>\r\n                {currentUser ?(\r\n                    <div>\r\n                        <h2 className=\"page-header\">tableau de bord</h2>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                <div className=\"row\">\r\n                                   \r\n                                    {\r\n                                        statusCards.map((item, index) => (\r\n                                            <div className=\"col-6\" key={index}>\r\n                                                 <a href=\"Action/32143789900057\">\r\n                                                <StatusCard\r\n                                                    icon={item.icon}\r\n                                                    count={item.count}\r\n                                                    title={item.title}\r\n                                                />\r\n                                                 </a>\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                   \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <div className=\"card full-height\">\r\n                                    {/* chart */}\r\n                                    <Chart\r\n                                        options={themeReducer === 'theme-mode-dark' ? {\r\n                                            ...chartOptions.options,\r\n                                            theme: { mode: 'dark'}\r\n                                        } : {\r\n                                            ...chartOptions.options,\r\n                                            theme: { mode: 'light'}\r\n                                        }}\r\n                                        series={chartOptions.series}\r\n                                        type='line'\r\n                                        height='100%'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                         \r\n                            <div className=\"col-8\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card__header\">\r\n                                        <h3>Dernières Sociétés crées</h3>\r\n                                    </div>\r\n                                    <div className=\"card__body\">\r\n                                        \r\n                                      \r\n                                    <TableContainer component={Paper}>\r\n                                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                                        <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>siret</TableCell>\r\n                                            <TableCell align=\"right\">nom_soc</TableCell>\r\n                                            <TableCell align=\"right\">observation</TableCell>\r\n                                            <TableCell align=\"right\">adresse postal</TableCell>\r\n                                            <TableCell align=\"right\">date ajouté</TableCell>\r\n                                        </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                        {ListTest.map((row) => (\r\n                                            <TableRow\r\n                                            key={row.siret}\r\n                                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                            >\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {row.siret}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{row.nom_soc}</TableCell>\r\n                                            <TableCell align=\"right\">{row.observation}</TableCell>\r\n                                            <TableCell align=\"right\">{row.adresse_local}</TableCell>\r\n                                            <TableCell align=\"right\">{row.createdAt}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                    </TableContainer>\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"card__footer\">\r\n                                        <Link to='Societes'>view all</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ): (\r\n                    <div  className=\"sidebar__item\">\r\n                        <div  disabled  className={`sidebar__item-inner `}>\r\n                        <i class='bx bxs-user-x' ></i>\r\n                            <span >\r\n                            pas connecter\r\n                            </span>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n        }\r\n\r\nexport default Dashboard\r\n","import axios from \"axios\";\r\n\r\n\r\nconst API_URL = \"https://sofcem.mtech.dev/api/auth/\";\r\n\r\nconst create = data => {\r\n  return axios.post(API_URL + \"ajouter\", data);\r\n};\r\n/*\r\nconst getAll = () => {\r\n  return http.get(\"/tutorials\");\r\n};\r\n\r\nconst get = id => {\r\n  return http.get(`/tutorials/${id}`);\r\n};\r\n\r\n\r\nconst update = (id, data) => {\r\n  return  axios.post(API_URL + `ajouter/${id}`, data);\r\n};\r\n\r\nconst remove = id => {\r\n  return http.delete(`/tutorials/${id}`);\r\n};\r\n\r\n*/\r\nconst removeAll = () => {\r\n  return axios.delete(`/tutorials`);\r\n};\r\nconst findByTitle = siret => {\r\n  return axios.get(`/Societes?siret=${siret}`);\r\n};\r\n\r\nconst AuthSociete = {\r\n\r\n  create,\r\n  findByTitle\r\n};\r\n\r\nexport default AuthSociete;\r\n","import React,{useEffect,useState} from 'react'\r\nimport axios from 'axios';\r\nimport Badge from '../components/badge/Badge'\r\nimport StatusCard from '../components/status-card/statusCard_add.jsx'\r\nimport statusCards from '../assets/JsonData/status-card-add-data.json'\r\nimport customerList from '../assets/JsonData/customers-list.json'\r\nimport UserService from \"../services/user.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport Societe from \"../services/societe\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AssignmentOutlinedIcon from '@mui/icons-material/AssignmentOutlined';\r\n\r\n//material ui table \r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { \r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    Grid,\r\n    Typography,\r\n    TablePagination,\r\n    TableFooter,\r\n    Divider,\r\n    Fab,\r\n  } from '@material-ui/core';\r\n  \r\n //css\r\n const useStyles = makeStyles((theme) => ({\r\n    table: {\r\n      secondary: {\r\n        light: '#ff7961',\r\n        main: '#f44336',\r\n        dark: '#ba000d',\r\n        contrastText: '#000',\r\n      },\r\n    },\r\n    tableContainer: {\r\n        borderRadius: 15,\r\n        margin: '10px 10px',\r\n        maxWidth: 1350\r\n    },\r\n    tableHeaderCell: {\r\n        sx: '4',\r\n        fontWeight: 'bold',\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: theme.palette.getContrastText(theme.palette.secondary.dark)\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        color: theme.palette.getContrastText(theme.palette.primary.light)\r\n    },\r\n    name: {\r\n        fontWeight: 'bold',\r\n        color: theme.palette.secondary.dark\r\n    },\r\n    status: {\r\n        fontWeight: 'bold',\r\n        fontSize: '0.75rem',\r\n        color: 'white',\r\n        backgroundColor: 'grey',\r\n        borderRadius: 8,\r\n        display: 'inline-block'\r\n    }\r\n  }));\r\nfunction Customers () {\r\n\r\n\r\n\r\n   //liste des users \r\n   const classes = useStyles();\r\n   const [page, setPage] = React.useState(0);\r\n   const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n   const handleChangePage = (event, newPage) => {\r\n     setPage(newPage);\r\n   };\r\n \r\n   const handleChangeRowsPerPage = (event) => {\r\n     setRowsPerPage(+event.target.value);\r\n     setPage(0);\r\n   };\r\n    const[ListTest,SetTest]=useState([]);\r\n    const [searchAll, setSearchAll] = useState(\"\");\r\n    const cemeca = UserService.getCemecaBoard()\r\n    const sofitech = UserService.getSofitechBoard()\r\n    const admin = UserService.getAdminBoard()\r\n    const user = AuthService.getCurrentUser()\r\n    useEffect(() =>{\r\n      retrieveTutorials()\r\n      \r\n  },[]);\r\n  \r\n \r\n  const onChangeSearchAll = (e) => {\r\n    const searchAll = e.target.value;\r\n    setSearchAll(searchAll);\r\n  };\r\n\r\n\r\n\r\n\r\n  const retrieveTutorials = () => {\r\n    if(user){\r\n      //afficher cemca\r\n      UserService.getCemecaBoard().then(\r\n          response => {\r\n              axios.get(\"http://localhost:8080/cemeca\").then((response)=>{\r\n                SetTest(response.data);\r\n              })\r\n          },\r\n  \r\n        );\r\n         //afficher sofitech\r\n      UserService.getSofitechBoard().then(\r\n          response => {\r\n              axios.get(\"http://localhost:8080/sofitech\").then((response)=>{\r\n                SetTest(response.data);\r\n              })\r\n          },\r\n    \r\n  \r\n          \r\n        );\r\n  \r\n  }\r\n  \r\n  };\r\n  const refreshList = () => {\r\n    retrieveTutorials();\r\n  };\r\n\r\n   //recherche , \r\n   const findByall = () => {\r\n    var nb=parseInt(searchAll);\r\n    console.log(typeof(searchAll))\r\n\r\n    const nom =ListTest.filter(task=>task.nom_soc===searchAll)\r\n    const code_postal =ListTest.filter(task=>task.code_postal===nb)\r\n    const siret =ListTest.filter(task=>task.siret===nb)\r\n    const siren =ListTest.filter(task=>task.siren===nb)\r\n    if(nom.length !== 0){\r\n      console.log(nom)\r\n      SetTest(nom);\r\n    }\r\n    if(code_postal.length !== 0){\r\n      console.log(true)\r\n      SetTest(code_postal);\r\n    }\r\n    if(siret.length !== 0){\r\n      console.log(true)\r\n      SetTest(siret);\r\n    }\r\n    if(siren.length !== 0){\r\n      console.log(true)\r\n      SetTest(siren);\r\n    }\r\n    \r\n  \r\n   \r\n    \r\n  };\r\n    \r\n    const orderStatus = {\r\n        \"adherent\": \"warning\",\r\n        \"client\": \"success\",\r\n    }\r\n    \r\n    const customerTableHead = [\r\n        'siren ',\r\n        'nom societes',\r\n        'nom responsable',\r\n        'telephone',\r\n        'code postal',\r\n        'opportunite',\r\n        'Action', \r\n        'plus'\r\n    ]\r\n    \r\n    const renderHead = (item, index) => <th key={index}>{item}</th>\r\n    \r\n    const renderBody = (item, index) => (\r\n        <tr key={index}>\r\n            <td>{item.siren}</td>\r\n            <td>{item.nom_soc}</td>    \r\n            <td>{item.nom_responsable_soc}</td>\r\n            <td>{item.tel}</td>\r\n            <td>{item.code_postal}</td>\r\n            <td>{item.opportunite}</td>     \r\n                \r\n            <td><a href={item.siren}><button type=\"button\" class=\"btn btn-success\"><i class='bx bx-pencil'></i></button></a></td>\r\n            <td><a href={item.siren}><button type=\"button\" class=\"btn btn-light\"><i class='bx bx-show'></i></button></a></td>\r\n \r\n        </tr>\r\n    )\r\n    \r\n\r\n\r\n    \r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <h2 className=\"page-header\">\r\n                sociétés\r\n            </h2>\r\n            <div className=\"row\">\r\n            <div className=\"col-md-4 list\">\r\n              \r\n            \r\n\r\n                  <div className=\"input-group mb-3\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Recherche \"\r\n                        value={searchAll}\r\n                        onChange={onChangeSearchAll}\r\n                      />\r\n                      <div className=\"input-group-append\">\r\n                        <button\r\n                          className=\"btn btn-outline-secondary\"\r\n                          type=\"button\"\r\n                          onClick={findByall}\r\n                        >\r\n                          Search\r\n                        </button>\r\n                      </div>\r\n                  </div>\r\n            </div>\r\n            </div>\r\n            \r\n               {/* liste des connections */}\r\n        <div className=\"card card-container\">\r\n          <div className=\"list row\">\r\n            <div className=\"col-md-12 list\">\r\n              <h3>Liste des Sociétées</h3> \r\n              \r\n          \r\n                <TableContainer component={Paper} className={classes.tableContainer}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell className={classes.tableHeaderCell}>Société</TableCell>\r\n                          <TableCell  className={classes.tableHeaderCell}>Adresse postal</TableCell>\r\n                          <TableCell className={classes.tableHeaderCell}>nom responnsable</TableCell>\r\n                          <TableCell className={classes.tableHeaderCell}>Code naf</TableCell>\r\n                          <TableCell className={classes.tableHeaderCell}>Syndicat</TableCell>\r\n                          <TableCell className={classes.tableHeaderCell}>Interlocuteur</TableCell>\r\n                          <TableCell className={classes.tableHeaderCell}>Action</TableCell>\r\n                          <TableCell className={classes.tableHeaderCell}>info</TableCell>\r\n                         \r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {ListTest.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                          <TableRow key={row.name}>\r\n                            <TableCell>\r\n                                <Grid container >\r\n                                   \r\n                                    <Grid item lg={10}>\r\n                                        <Typography className={classes.name}>siret: {row.siret}</Typography>\r\n                                        <Typography color=\"textSecondary\" variant=\"body2\">siren: {row.siren}</Typography>\r\n                                        <Typography color=\"textSecondary\" variant=\"body2\">nom de la societe: {row.nom_soc}</Typography>\r\n          \r\n                                    </Grid>\r\n                                </Grid>\r\n                            </TableCell>\r\n                            \r\n                              <TableCell>\r\n                              <Grid item lg={10}>\r\n                                        <Typography> {row.adresse_local}</Typography>\r\n                                        <Typography color=\"textSecondary\" variant=\"body1\">{row.code_postal} {row.ville}</Typography>\r\n                                        <Typography >{row.ville_soc}</Typography>\r\n          \r\n                              </Grid>\r\n                              </TableCell>   \r\n\r\n                              <TableCell>{row.nom_responsable_soc}</TableCell>   \r\n                              <TableCell>{row.activite_soc}</TableCell>   \r\n  \r\n                            <TableCell>{row.syndicat}</TableCell>      \r\n                            <TableCell>\r\n                              \r\n                                <Fab href={`/Interlocuteur/${row.siret}`} color=\"primary\" aria-label=\"edit\">\r\n                                  <EditIcon />\r\n                                </Fab>\r\n                            \r\n                            </TableCell>            \r\n                            <TableCell>\r\n                                <Fab href={`/Action/${row.siret}`} color=\"primary\" aria-label=\"edit\">\r\n                                <EditIcon />\r\n                                </Fab>\r\n                            \r\n                            </TableCell>\r\n                            <TableCell>\r\n                            \r\n                                <Fab href={`/Societe/${row.siret}`} color=\"primary\" aria-label=\"assignmentOutlinedIcon\">\r\n                                <AssignmentOutlinedIcon />\r\n                                </Fab>\r\n                            \r\n                            </TableCell>\r\n                             \r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                      <TableFooter>\r\n                      </TableFooter>\r\n                    </Table>\r\n                  </TableContainer>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Customers\r\n","\r\nimport {isEmail} from \"validator\";\r\n\r\n\r\nclass checkedForm{\r\n\r\n   required = value => {\r\n    if (!value) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          This field is required!\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vemail = value => {\r\n    if (!isEmail(value)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          This is not a valid email.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n   vrole = value => {\r\n    if (isNaN(value)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          This is not a valid role.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vusername = value => {\r\n    if (value.length < 3 || value.length > 20) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          The username must be between 3 and 20 characters.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vpassword = value => {\r\n    if (value.length < 6 || value.length > 40) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          The password must be between 6 and 40 characters.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n}\r\nexport default new checkedForm();\r\n","import React, { useState, useRef ,useEffect,useMemo} from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport checkForm from \"../common/Register/checkedForm\"\r\nimport AuthService from \"../services/auth.service\";\r\nimport UserService from \"../services/user.service\";\r\n//react table\r\nimport { useTable } from \"react-table\";\r\n//material ui table \r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Avatar,\r\n  Grid,\r\n  Typography,\r\n  TablePagination,\r\n  TableFooter,\r\n  Divider\r\n} from '@material-ui/core';\r\n\r\n\r\nconst Register = (props) => {\r\n  //css style \r\n  //css\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 200,\r\n  },\r\n  tableContainer: {\r\n      borderRadius: 15,\r\n      margin: '10px 10px',\r\n      maxWidth: 950\r\n  },\r\n  tableHeaderCell: {\r\n      fontWeight: 'bold',\r\n      backgroundColor: theme.palette.primary.dark,\r\n      color: theme.palette.getContrastText(theme.palette.primary.dark)\r\n  },\r\n  avatar: {\r\n      backgroundColor: theme.palette.primary.light,\r\n      color: theme.palette.getContrastText(theme.palette.primary.light)\r\n  },\r\n  name: {\r\n      fontWeight: 'bold',\r\n      color: theme.palette.secondary.dark\r\n  },\r\n  status: {\r\n      fontWeight: 'bold',\r\n      fontSize: '0.75rem',\r\n      color: 'white',\r\n      backgroundColor: 'grey',\r\n      borderRadius: 8,\r\n      padding: '3px 10px',\r\n      display: 'inline-block'\r\n  }\r\n}));\r\n    //variable liste des UserService\r\n  const [searchTitle, setSearchTitle] = useState(\"\");\r\n  const [listuser,setListeUser] = useState([]);\r\n   //variable liste authetification \r\n   const [listauth, setListeAuth] = useState([]);\r\n   const listauthRef = useRef();\r\n   listauthRef.current = listauth;\r\n  //register user variable\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n  const vrole = checkForm.vrole;\r\n  const vusername =checkForm.vusername;\r\n  const vpassword = checkForm.vpassword;\r\n  const vemail = checkForm.vemail;\r\n  const required = checkForm.required;\r\n//les status des variable \r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [roles, setRoles] = useState([]);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n //useEffect de toute la table Register\r\n  useEffect(() => {\r\n    retrieveTutorials();\r\n    retrieveUsers();\r\n  }, []);\r\n  \r\n\r\n\r\n //afficher la liste des users\r\n  const retrieveUsers = () => {\r\n    UserService.getListe_User()\r\n      .then((response) => {\r\n        setListeUser(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  console.log(UserService.getListe_User())\r\n\r\n  \r\n   //afficher la liste des hauthentification\r\n  const retrieveTutorials = () => {\r\n    AuthService.get_historique_auth()\r\n      .then((response) => {\r\n        setListeAuth(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  const refreshList = () => {\r\n    retrieveTutorials();\r\n  };\r\n  const removeAllTutorials = () => {\r\n    AuthService.removeAll_historique_auth()\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        refreshList();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n \r\n  const deleteTutorial = (rowIndex) => {\r\n    const id = listauthRef.current[rowIndex].id;\r\n    console.log(id)\r\n\r\n    AuthService.remove_historiqueremove(id)\r\n      .then((response) => {\r\n        props.history.push(\"Register\");\r\n\r\n        let newTutorials = [...listauthRef.current];\r\n        newTutorials.splice(rowIndex, 1);\r\n\r\n        setListeAuth(newTutorials);\r\n      })\r\n      .catch((e) => {\r\n        console.log('tets');\r\n      });\r\n  };\r\n  const openTutorial = (rowIndex) => {\r\n    const id = listauthRef.current[rowIndex].id;\r\n\r\n    props.history.push(\"/tutorials/\" + id);\r\n  };\r\n  \r\n  \r\n  \r\n// liste des auths  \r\n\r\n\r\n\r\n  //liste des users \r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n    /*const colu = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Userame\",\r\n        accessor: \"username\",\r\n      },\r\n      {\r\n        Header: \"Role\",\r\n        accessor: \"role\",\r\n      },\r\n\r\n      {\r\n        Header: \"Actions\",\r\n        accessor: \"actions\",\r\n        Cell: (props) => {\r\n          const rowIdx = props.row.id;\r\n          return (\r\n            <div>\r\n              <span onClick={() => openTutorial(rowIdx)}>\r\n                <i className=\"far fa-edit action mr-2\"></i>\r\n              </span>\r\n\r\n              <span onClick={() => deleteTutorial(rowIdx)}>\r\n                <i className=\"bx bxs-trash-alt action\"></i>\r\n              </span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data: listauth,\r\n  }); \r\n  */\r\n    //crud ajouter un user\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n  const onChangeRoles = (e) => {\r\n    const role = e.target.value;\r\n    setRoles([...roles,role]);\r\n  \r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    setMessage(\"\");\r\n    setSuccessful(false);\r\n    form.current.validateAll();\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthService.register(username, email,roles, password).then(\r\n        (response) => {\r\n          setMessage(response.data.message);\r\n          setSuccessful(true);\r\n        },\r\n\r\n        (error) => {\r\n            console.log(roles)\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n          setMessage(resMessage);\r\n          setSuccessful(false);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  \r\n    return (\r\n      <div className=\"col-md-12\">\r\n\r\n        <h1>\r\n          gestion utilisateur\r\n        </h1>\r\n    {/* liste des users */}\r\n        <div className=\"card card-container\">\r\n          <div className=\"list row\">\r\n            <div className=\"col-md-12 list\">\r\n              <h3>Listes des Utilisateurs</h3>\r\n                  <TableContainer component={Paper} className={classes.tableContainer}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell className={classes.tableHeaderCell}>nom</TableCell>\r\n                          <TableCell className={classes.tableHeaderCell}>email</TableCell>\r\n                          <TableCell className={classes.tableHeaderCell}>password</TableCell>\r\n                          <TableCell className={classes.tableHeaderCell}>Status</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {listuser.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                          <TableRow key={row.name}>\r\n                            <TableCell>\r\n                                <Grid container>\r\n                                    <Grid item lg={2}>\r\n                                        <Avatar alt={row.name} src='.' className={classes.avatar}/>\r\n                                    </Grid>\r\n                                    <Grid item lg={10}>\r\n                                        <Typography className={classes.name}>{row.name}</Typography>\r\n                                        <Typography color=\"textSecondary\" variant=\"body2\">{row.username}</Typography>\r\n          \r\n                                    </Grid>\r\n                                </Grid>\r\n                              </TableCell>\r\n                            <TableCell>\r\n                                <Typography color=\"primary\" variant=\"subtitle2\">{row.email}</Typography>\r\n                                <Typography color=\"textSecondary\" variant=\"body2\">{row.company}</Typography>\r\n                              </TableCell>\r\n                            <TableCell>*********</TableCell>\r\n                            <TableCell>\r\n                                <Typography \r\n                                  className={classes.status}\r\n                                  style={{\r\n                                      backgroundColor: \r\n                                      ((row.status === 'Active' && 'green') ||\r\n                                      (row.status === 'Pending' && 'blue') ||\r\n                                      (row.status === 'Blocked' && 'orange'))\r\n                                  }}\r\n                                >{row.status}</Typography>\r\n                              </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                      <TableFooter>\r\n                      <TablePagination\r\n                          rowsPerPageOptions={[5, 10, 15]}\r\n                          component=\"div\"\r\n                          count={listuser.length}\r\n                          rowsPerPage={rowsPerPage}\r\n                          page={page}\r\n                          onChangePage={handleChangePage}\r\n                          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                      />\r\n                      </TableFooter>\r\n                    </Table>\r\n                  </TableContainer>\r\n            </div> \r\n          </div>\r\n        </div>\r\n    {/* liste des connections */}\r\n        <div className=\"card card-container\">\r\n          <div className=\"list row\">\r\n            <div className=\"col-md-12 list\">\r\n              <h3>Historique des Authentifications</h3> \r\n          \r\n                <TableContainer component={Paper} className={classes.tableContainer}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell className={classes.tableHeaderCell}>Username</TableCell>\r\n                          <TableCell className={classes.tableHeaderCell}>Password</TableCell>\r\n                          <TableCell className={classes.tableHeaderCell}>Message</TableCell>\r\n                          <TableCell className={classes.tableHeaderCell}>Date De Connection</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {listauth.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                          <TableRow key={row.name}>\r\n                            <TableCell>\r\n                                <Grid container>\r\n                                    <Grid item lg={2}>\r\n                                        <Avatar alt={row.name} src='.' className={classes.avatar}/>\r\n                                    </Grid>\r\n                                    <Grid item lg={10}>\r\n                                        <Typography className={classes.name}>{row.name}</Typography>\r\n                                        <Typography color=\"textSecondary\" variant=\"body2\">{row.username}</Typography>\r\n          \r\n                                    </Grid>\r\n                                </Grid>\r\n                              </TableCell>\r\n                            \r\n                            <TableCell>{row.password}</TableCell>                 \r\n                            <TableCell>\r\n                                <Typography \r\n                                  className={classes.status}\r\n                                  style={{\r\n                                      backgroundColor: \r\n                                      ((row.message === 'connection etablie !' && 'green') ||\r\n                                      (row.message === 'connection echouer !' && 'red'))\r\n                                  }}\r\n                                >{row.message}</Typography>\r\n                              </TableCell>\r\n                              <TableCell>\r\n                                <Typography color=\"primary\" variant=\"subtitle2\">{row.date_connection}</Typography>\r\n              \r\n                              </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                      <TableFooter>\r\n                      <TablePagination\r\n                          rowsPerPageOptions={[5, 10, 15]}\r\n                          component=\"div\"\r\n                          count={listauth.length}\r\n                          rowsPerPage={rowsPerPage}\r\n                          page={page}\r\n                          onChangePage={handleChangePage}\r\n                          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                      />\r\n                      </TableFooter>\r\n                    </Table>\r\n                  </TableContainer>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    {/* ajouter un user */}\r\n          <div className=\"card card-container\">\r\n            <h3>Ajouter un utilisateur</h3>\r\n              <Form onSubmit={handleRegister} ref={form}>\r\n                {!successful && (\r\n                    <div>\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"username\"\r\n                          value={username}\r\n                          onChange={onChangeUsername}\r\n                          validations={[required, vusername]}\r\n                        />\r\n                      </div>\r\n      \r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"email\"\r\n                          value={email}\r\n                          onChange={onChangeEmail}\r\n                          validations={[required, vemail]}\r\n                        />\r\n                      </div>          \r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <Input\r\n                          type=\"password\"\r\n                          className=\"form-control\"\r\n                          name=\"password\"\r\n                          value={password}\r\n                          onChange={onChangePassword}\r\n                          validations={[required, vpassword]}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"form-check container\">\r\n                        <div className=\"row\">\r\n                        <label className=\"form-check-label\" htmlFor=\"role\">cemeca</label>\r\n                        <Input \r\n                          type=\"checkbox\"\r\n                          className=\"form-check\"\r\n                          name=\"cemeca\"\r\n                          value=\"1\"\r\n                          onChange={onChangeRoles}\r\n                          validations={[required, vrole]}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"role\">sofitech</label>\r\n                          <Input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check\"\r\n                          name=\"sofitech\"\r\n                          value=\"2\"\r\n                          onChange={onChangeRoles}\r\n                          validations={[required, vrole]}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"role\">admin cemeca</label>\r\n                          <Input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check\"\r\n                          name=\"admin_cemeca\"\r\n                          value=\"3\"\r\n                          onChange={onChangeRoles}\r\n                          validations={[required, vrole]}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"role\">admin sofitech</label>\r\n                          <Input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check\"\r\n                          name=\"admin_sofitech\"\r\n                          value=\"4\"\r\n                          onChange={onChangeRoles}\r\n                          validations={[required, vrole]}\r\n                        />\r\n                        </div>\r\n                          <label className=\"form-check-label\" htmlFor=\"role\">super_cemeca</label>\r\n                          <Input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check\"\r\n                          name=\"super_cemeca\"\r\n                          value=\"5\"\r\n                          onChange={onChangeRoles}\r\n                          validations={[required, vrole]}\r\n                        />\r\n                          <label className=\"form-check-label\" htmlFor=\"role\">super_sofitech</label>\r\n                          <Input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check\"\r\n                          name=\"super_sofitech\"\r\n                          value=\"6\"\r\n                          onChange={onChangeRoles}\r\n                          validations={[required, vrole]}\r\n                        />\r\n                          <label className=\"form-check-label\" htmlFor=\"role\">super_admin</label>\r\n                          <Input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check\"\r\n                          name=\"super_admin1\"\r\n                          value=\"7\"\r\n                          onChange={onChangeRoles}\r\n                          validations={[required, vrole]}\r\n                        /> \r\n                        <label className=\"form-check-label\" htmlFor=\"role\">super_admin2</label>\r\n                        <Input\r\n                        type=\"checkbox\"\r\n                        className=\"form-check\"\r\n                        name=\"super_admin2\"\r\n                        value=\"8\"\r\n                        onChange={onChangeRoles}\r\n                        validations={[required, vrole]}\r\n                      />\r\n                      </div>\r\n          \r\n                      <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary btn-block\">Ajouter</button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {message && (\r\n                    <div className=\"form-group\">\r\n                      <div\r\n                        className={\r\n                          successful\r\n                            ? \"alert alert-success\"\r\n                            : \"alert alert-danger\"\r\n                        }\r\n                        role=\"alert\"\r\n                      >\r\n                        {message}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n              </Form>\r\n          </div> \r\n        </div>\r\n    );\r\n  }\r\n  export default Register;\r\n\r\n","import React, { useState, useRef } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"../services/auth.service\";\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\nconst Login = () => {\r\n  let history = useHistory();\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [historique_auth, sethistorique_auth] = useState(\"\");\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    setMessage(\"\");\r\n    setLoading(true);\r\n    form.current.validateAll();\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthService.login(username, password).then(\r\n        () => {\r\n          const message = 'connection etablie !';\r\n          const password ='********'\r\n          history.push(\"/\");\r\n          window.location.reload();\r\n          AuthService.create_historique_auth(username, password,message).then(\r\n            () => {   \r\n            },\r\n            (error) => {\r\n              const resMessage =\r\n                (error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n              setMessage(resMessage);\r\n            }\r\n          );\r\n        },\r\n        (error) => {\r\n          const message = 'connection echouer !'\r\n          AuthService.create_historique_auth(username, password,message).then(\r\n            () => {   \r\n            },\r\n            (error) => {\r\n              const resMessage =\r\n                (error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n              setMessage(resMessage);\r\n            }\r\n          );\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n          setLoading(false);\r\n          setMessage(resMessage);\r\n        }\r\n      );\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={onChangeUsername}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <Input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={onChangePassword}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n              {loading && (\r\n                <span className=\"spinner-border spinner-border-sm\"></span>\r\n              )}\r\n              <span>Login</span>\r\n            </button>\r\n          </div>\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","import React, { useState, useRef ,useEffect} from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthAction from \"../services/Action\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport UserService from \"../services/user.service\";\r\nimport axios from 'axios';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\n\r\n\r\n//table class\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n\r\n\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\n\r\n\r\nconst Action = (props) => {\r\n\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n    const [ID_societe,setID_societe] = useState([]);\r\n    const [ListeAction,SetAction] = useState([]);\r\n    useEffect(()=>{\r\n      const user = AuthService.getCurrentUser();\r\n          if (user){\r\n              //ACTION \r\n              AuthAction.findAll().then((response) => {\r\n                SetAction(response.data)\r\n                console.log(response.data)\r\n              })\r\n              .catch((e) => {\r\n                  console.log(e);\r\n              });\r\n                 //afficher cemca\r\n          UserService.getCemecaBoard().then(\r\n              response => {\r\n                  axios.get(\"https://sofcem.mtech.dev/cemeca\").then((response)=>{\r\n                    setID_societe(response.data);\r\n                  })\r\n              },\r\n        \r\n\r\n              \r\n            );\r\n             //afficher cemca\r\n          UserService.getSofitechBoard().then(\r\n              response => {\r\n                  axios.get(\"https://sofcem.mtech.dev/sofitech\").then((response)=>{\r\n                    setID_societe(response.data);\r\n                  })\r\n              },\r\n\r\n            );\r\n            \r\n          }\r\n   },[]) \r\n\r\n   //get action where user\r\nconst user = AuthService.getCurrentUser()\r\nconst listeActUser =ListeAction.filter(task=>task.id_utili===user.id)\r\nconsole.log(listeActUser)\r\n\r\n\r\n// Get ID from URL\r\nconst params = useParams();\r\nvar nb=parseInt(params.id);\r\nconst actItem =ID_societe.filter(task=>task.siret===nb)\r\nconsole.log(actItem)\r\n//inntial user state\r\n\r\n//intitial Action \r\n    const initial1ctionState = {\r\n     id_utili:\"\",\r\n    nom_interlocuteur: \"\",\r\n    type_action:\"\",\r\n    nom_societe: \"\",\r\n    description: \"\",\r\n    date_action: \"\",\r\n    date_rdv: \"\", \r\n    };\r\n\r\n  const [Action, setAction] = useState({initial1ctionState});\r\n\r\n console.log(nb) \r\n  \r\n  const saveAction = (e) => {\r\n  \r\n    var data = {\r\n      nom_interlocuteur:Action.nom_interlocuteur,\r\n      nom_societe:actItem[0].nom_soc,\r\n      date_rdv:Action.date_rdv,\r\n      date_action: new Date(),\r\n      id_utili:user.id,\r\n      type_action:Action.type_action,\r\n      description:Action.description,\r\n\r\n\r\n     \r\n    };\r\n  \r\n    e.preventDefault();\r\n    form.current.validateAll();\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthAction.create(data)\r\n        .then(response => {\r\n          setAction({\r\n           nom_interlocuteur:response.data.nom_interlocuteur,\r\n           nom_societe: response.data.nom_societe,\r\n           date_rdv: response.data.date_rdv,\r\n           date_action: response.data.date_action,\r\n           id_utili: response.data.id_utili,\r\n           type_action: response.data.type_action,\r\n           description: response.data.description,\r\n           \r\n          }\r\n          );\r\n          setSuccessful(true);\r\n          setMessage(response.data.message)\r\n        },\r\n        error => {\r\n          const resMessage =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      setMessage(resMessage);\r\n        }\r\n        )\r\n        .catch(e => {\r\n          console.log(e);\r\n\r\n        });\r\n    }\r\n};\r\nconst handleInputChange = event => {\r\n  const { name, value } = event.target;\r\n  setAction({ ...Action, [name]: value });\r\n\r\n};\r\n\r\n\r\n\r\n\r\nconst options = [\r\n  { value: 'RDV', label: 'RDV' },\r\n  { value: 'contact téléphonique', label: 'contact téléphonique' },\r\n  { value: 'contact teams', label: 'contact teams' },\r\n  { value: 'contact par courrier', label: 'contact par courrier' }\r\n]\r\n\r\n    return (\r\n        <div className=\"col-md-12\">\r\n  \r\n          \r\n   \r\n    \r\n   {/* ajouter un user */}\r\n  \r\n\r\n   <h3><i class='bx bxs-bank danger'></i> liste des actions</h3>\r\n            <TableContainer component={Paper}>\r\n                                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                                        <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>nom societe</TableCell>\r\n                                            <TableCell align=\"right\">date rdv</TableCell>\r\n                                            <TableCell align=\"right\">nom_interlocuteur</TableCell>\r\n                                            <TableCell align=\"right\">date_action</TableCell>\r\n                                            <TableCell align=\"right\">type</TableCell>\r\n                                        </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                        {listeActUser.map((row) => (\r\n                                            <TableRow\r\n                                            key={row.nom}\r\n                                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                            >\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {row.nom_societe}\r\n                                            </TableCell>\r\n                                            \r\n                                            <TableCell align=\"right\">{row.date_rdv}</TableCell>\r\n                                            <TableCell align=\"right\">{row.nom_interlocuteur}</TableCell>\r\n                                            <TableCell align=\"right\">{row.date_action}</TableCell>\r\n                                            <TableCell align=\"right\">{row.type_action}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n              </TableContainer>\r\n     \r\n\r\n              <br />\r\n              <h1>\r\n            Ajouter une action\r\n          </h1>\r\n              <div className=\"card card-container\">\r\n           \r\n            {actItem.map((e)=>(\r\n              <h3><i class='bx bxs-bank danger'></i>  {e.nom_soc}</h3>\r\n            ))}\r\n            <Form onSubmit={saveAction} ref={form}>\r\n                {!successful && (\r\n                    <div>\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">utlisateur</label>\r\n                         <FormControl fullWidth sx={{ m: 1 }} variant=\"standard\">\r\n                          <TextField\r\n                            id=\"outlined-multiline-static\"\r\n                            label=\"utlisateur\"\r\n                            multiline\r\n                            name=\"id_utili\"\r\n                            value={user.username}\r\n                            onChange={handleInputChange}\r\n                          />\r\n                         </FormControl>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Date du rendez vous</label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          className=\"form-control\"\r\n                          name=\"date_rdv\"\r\n                          value={Action.date_rdv}\r\n                          onChange={handleInputChange}\r\n                          \r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">description</label>\r\n                          <FormControl fullWidth sx={{ m: 1 }} variant=\"standard\">\r\n                            <TextField\r\n                              id=\"outlined-multiline-static\"\r\n                              label=\"description\"\r\n                              multiline\r\n                              rows={7}\r\n                              name=\"description\"\r\n                              value={Action.description}\r\n                              onChange={handleInputChange}\r\n                            />\r\n                          </FormControl>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">nom de l'interlocuteur</label>\r\n                       \r\n                        <FormControl fullWidth sx={{ m: 1 }} variant=\"standard\">\r\n                          <TextField\r\n                            id=\"outlined-multiline-static\"\r\n                            label=\"nom de l'interlocuteur\"\r\n                            multiline\r\n                            name=\"nom_interlocuteur\"\r\n                            value={Action.nom_interlocuteur}\r\n                            onChange={handleInputChange}\r\n                          />\r\n                         </FormControl>\r\n                      </div>          \r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">type d'action</label>\r\n\r\n                              <FormControl fullWidth>\r\n                                <InputLabel id=\"demo-simple-select-label\">Age</InputLabel>\r\n                                <Select\r\n                                  labelId=\"demo-simple-select-label\"\r\n                                  id=\"demo-simple-select\"\r\n                                  value={Action.type_action}\r\n                                  label=\"Age\"\r\n                                  name=\"type_action\"\r\n                                  onChange={handleInputChange}\r\n                                >\r\n                                  <MenuItem value={\"RDV\"}>RDV</MenuItem>\r\n                                  <MenuItem value={\"contact téléphonique\"}>contact téléphonique</MenuItem>\r\n                                  <MenuItem value={\"contact teams\"}>contact teams</MenuItem>\r\n                                  <MenuItem value={\"contact par courrier\"}>contact par courrier</MenuItem>\r\n                                </Select>\r\n                              </FormControl>\r\n              \r\n                      </div>\r\n\r\n                    \r\n\r\n                      <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary btn-block\">Valider l'action</button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {message && (\r\n                    <div className=\"form-group\">\r\n                      <div\r\n                        className={\r\n                          successful\r\n                            ? \"alert alert-success\"\r\n                            : \"alert alert-danger\"\r\n                        }\r\n                        role=\"alert\"\r\n                      >\r\n                        {message}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n              </Form>\r\n          </div> \r\n          </div>\r\n      );\r\n    }\r\n    export default Action;\r\n  \r\n  ","\r\nclass checkedForm{\r\n\r\n   required = value => {\r\n    if (!value) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          This field is required!\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n\r\n\r\n \r\n   vsiret = value => {\r\n    if (isNaN(value)&&(value.length<9)&&(value.length>13)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          siret invalide :(.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vsiren = value => {\r\n   if (isNaN(value)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          This is not a valid siren.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vnom_soc = value => {\r\n    if ((value.length<4)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n         nom socitété invalide !.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vnom_responsable = value => {\r\n    if ((value.length<4)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          nom responsable invalide !.\r\n        </div>\r\n      ); \r\n    }\r\n  };\r\n  \r\n   vdate_creation_soc = value => {\r\n    if ((value.length<4)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          date invalide !\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vactivité = value => {\r\n    if ((value.length<4)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          activité invalide !\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n   vadresse = value => {\r\n    if ((value.length<4)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          adresse invalide !\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n   vpays = value =>{\r\n    if ((value.length<4)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          pays invalide !\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n   cville = value => {\r\n    if (value.length < 4 || value.length > 10) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          ville invalide !\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vcode_postal = value => {\r\n    if (value.length < 4 || value.length > 10) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          code postal invalide !\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vopportunité = value => {\r\n    if (value.length < 4) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n           opportunité invalide !\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vobservation = value => {\r\n    if (value.length < 4) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n           opportunité invalide !\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vtel = value => {\r\n    if (value.length < 4 || value.length > 10) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n           télephone invalide !\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n   vid_role = value => {\r\n    if (isNaN(value)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          1 or 2.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n  \r\n}\r\nexport default new checkedForm();\r\n","\r\nimport React, { useState,useRef,useEffect } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthSociete from \"../services/societe\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport checkForm from '../common/Ajouter/checkedForm'\r\nimport './../assets/css/picklist.css'\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport axios from 'axios';\r\n\r\n\r\nconst AddTutorial = () => {\r\n  \r\n\r\n\r\n  //variable checked from \r\n  const required = checkForm.required;\r\n  const vsiret = checkForm.vsiret;\r\n  const vsiren = checkForm.vsiren;\r\n  const vnom_soc = checkForm.vnom_soc;\r\n  const vnom_responsable = checkForm.vnom_responsable;\r\n  const vdate_creation_soc = checkForm.vdate_creation_soc;\r\n  const vid_role = checkForm.vid_role;\r\n  const vcode_postal = checkForm.vcode_postal;\r\n  const vobservation = checkForm.vopportunité;\r\n  const cville = checkForm.cville;\r\n  const vsyndicat = checkForm.vobservation;\r\n  const vactivité = checkForm.vactivité;\r\n  const vtel = checkForm.vtel;\r\n  const vpays = checkForm.vpays;\r\n  const vadresse = checkForm.vadresse;\r\n\r\n  const initialSocieteState = {\r\n    siret: \"\",\r\n    siren: \"\",\r\n    nom_soc: \"\",\r\n    nom_responsable_soc: \"\",\r\n    date_creation_soc: \"\",\r\n    activite_soc: \"\",\r\n    adresse_local: \"\",\r\n    pays: \"\",\r\n    ville_soc: \"\",\r\n    code_postal: \"\",\r\n    syndicat: \"\",\r\n    observation: \"\",\r\n    tel: \"\",\r\n    app_sofitech: \"\",\r\n    app_cemeca: \"\",\r\n    soc_sofitech: \"\",\r\n    soc_cemeca: \"\",\r\n    id_role: \"\",\r\n   \r\n    \r\n  };\r\n  const liste = [\r\n  //FIM\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'ARTEMA'\r\n    },\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'AXEMA'\r\n    },\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'EVOLIS'\r\n    },\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'FABRILABO'\r\n    },\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'FEDERATION FORGE FONDERIE'\r\n    },\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'FFMI'\r\n    },\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'FIM-AC'\r\n    },\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'FIM METAUX EN FEUILLES'\r\n    },\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'FIM RESSORTS'\r\n    },\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'PHOTONICS'\r\n    },\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'SIBCO'\r\n    },\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'SM'\r\n    },\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'SNCT'\r\n    },\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'SNDEC'\r\n    },\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'SNITEM'\r\n    },\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'SYMOP'\r\n    },\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'SYNEG'\r\n    },\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'UITS'\r\n    },\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'UNICLIMA'\r\n    }\r\n    ,\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'UNIQ'\r\n    }\r\n    ,\r\n    {\r\n      TYPE: 'FIM',\r\n      NOM: 'UNITAM'\r\n    },\r\n                        \r\n  //FIEEC\r\n    {\r\n      TYPE: 'FIEEC',\r\n      NOM: 'ACN'\r\n    },\r\n    {\r\n      TYPE: 'FIEEC',\r\n      NOM: 'ACR'\r\n    },\r\n    {\r\n      TYPE: 'FIEEC',\r\n      NOM: 'ACSIEL'\r\n    },\r\n    {\r\n      TYPE: 'FIEEC',\r\n      NOM: 'AFNUM'\r\n    },\r\n    {\r\n      TYPE: 'FIEEC',\r\n      NOM: 'E-VISIONS'\r\n    },\r\n    {\r\n      TYPE: 'FIEEC',\r\n      NOM: 'FGME'\r\n    },\r\n    {\r\n      TYPE: 'FIEEC',\r\n      NOM: 'GIFAM'\r\n    },\r\n    {\r\n      TYPE: 'FIEEC',\r\n      NOM: 'GIL'\r\n    },\r\n    {\r\n      TYPE: 'FIEEC',\r\n      NOM: 'FFGME'\r\n    },\r\n    {\r\n      TYPE: 'FIEEC',\r\n      NOM: 'IGNES'\r\n    },\r\n    {\r\n      TYPE: 'FIEEC',\r\n      NOM: 'SER'\r\n    },\r\n    {\r\n      TYPE: 'FIEEC',\r\n      NOM: 'SIRMELEC'\r\n    },\r\n    {\r\n      TYPE: 'FIEEC',\r\n      NOM: 'SNESE'\r\n    },\r\n    {\r\n      TYPE: 'FIEEC',\r\n      NOM: 'SPAP'\r\n    },\r\n    {\r\n      TYPE: 'FIEEC',\r\n      NOM: 'SPDEI'\r\n    },\r\n    {\r\n      TYPE: 'FIEEC',\r\n      NOM: 'SYCABEL'\r\n    },\r\n    {\r\n      TYPE: 'FIEEC',\r\n      NOM: \"Syndicat de l'éclairage\"\r\n    },\r\n\r\n\r\n    ]\r\n  const liste_syndicat =[ {\r\n    TYPE: 'FIM',\r\n    NOM: 'ARTEMA'\r\n  }]  \r\n  const [Societe, setSociete] = useState({initialSocieteState});\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [myJSON, setactive] = useState([]);\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n\r\n  const land =(e) => {\r\n    setactive(Array.isArray(e)?e.map(x=>x.NOM):[])\r\n  }\r\n\r\n\r\n \r\n\r\n  const saveSociete = (e) => {\r\n        const syndicat = myJSON.join();\r\n        var data = {\r\n          siret: Societe.siret,\r\n          siren: Societe.siren,\r\n          nom_soc: Societe.nom_soc,\r\n          nom_responsable_soc: Societe.nom_responsable_soc,\r\n          date_creation_soc: Societe.date_creation_soc,\r\n          activite_soc: Societe.activite_soc,\r\n          adresse_local: Societe.adresse_local,\r\n          pays: Societe.pays,\r\n          ville_soc: Societe.ville_soc,\r\n          code_postal:Societe.code_postal,\r\n          syndicat:syndicat,\r\n          observation: Societe.observation,\r\n          tel: Societe.tel,   \r\n          id_role: Societe.id_role,\r\n          message: message.message,\r\n          successful:successful.successful,\r\n        };\r\n      \r\n        e.preventDefault();\r\n        form.current.validateAll();\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n          AuthSociete.create(data)\r\n            .then(response => {\r\n              setSociete({\r\n                siren:response.data.siren,\r\n                siret: response.data.siret,\r\n                nom_soc: response.data.nom_soc,\r\n                nom_responsable_soc: response.data.nom_responsable_soc,\r\n                activite_soc: response.data.activite_soc,\r\n                adresse_local: response.data.adresse_local,\r\n                pays: response.data.pays,\r\n                ville_soc: response.data.ville_soc,\r\n                code_postal: response.data.code_postal,\r\n                syndicat: response.data.syndicat,\r\n                observation: response.data.observation,\r\n                tel: response.data.tel,\r\n                date: response.data.date,\r\n                id_role: response.data.id_role\r\n              }\r\n              );\r\n              setSuccessful(true);\r\n              setMessage(response.data.message)\r\n              console.log(Societe.syndicat,'syndicat');\r\n            },\r\n            error => {\r\n              const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n          setMessage(resMessage);\r\n            }\r\n            )\r\n            .catch(e => {\r\n              console.log(e);\r\n\r\n            });\r\n        }\r\n  };\r\n  \r\n  console.log(\"test\",myJSON)\r\n \r\n\r\n\r\n //API INSEE\r\n  const API_INSEE_SIRET = 'https://entreprise.data.gouv.fr/api/sirene/v3/etablissements/?siret='\r\n   var b = String(Societe.siret)\r\n   console.log(b.length)\r\n   const chaine = API_INSEE_SIRET +b\r\n  const getAPINSEE =()=> {\r\n  \r\n    return axios.get(API_INSEE_SIRET+b);\r\n  }\r\n  console.log()\r\n  const [SIRETAPI, setSIRETAPI] = useState([]);\r\n  useEffect(() =>{\r\n        //afficher API insee\r\n        \r\n       \r\n},[]);\r\n\r\n\r\nconst handleInputChange = event => {\r\n  const { name, value } = event.target;\r\n  setSociete({ ...Societe, [name]: value });\r\n  getAPINSEE().then((response) => {\r\n               \r\n    setSIRETAPI(response.data.etablissements);\r\n  \r\n})\r\n};\r\n\r\nconsole.log(b)\r\nconsole.log(chaine)\r\nconsole.log(SIRETAPI)\r\n\r\n\r\n  return (\r\n    <div className=\"submit-form\">\r\n\r\n       \r\n      \r\n         <Form onSubmit={saveSociete} ref={form}>\r\n         {!successful && (\r\n           <div>\r\n\r\n              <div className=\"form-group\">\r\n              \r\n                <label htmlFor=\"title\">siret</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  value={Societe.siret}\r\n                  onChange={handleInputChange}\r\n                  validations={[required,vsiret]}\r\n                  name=\"siret\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">siren</label>\r\n                {SIRETAPI.map((e)=>\r\n             \r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  value={Societe.siren=e.siren}\r\n                  onChange={handleInputChange}\r\n                  validations={[required,vsiren]}\r\n                  name=\"siren\"\r\n                />\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">nom de la societe</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  value={Societe.nom_soc}\r\n                  onChange={handleInputChange}\r\n                  validations={[required,vnom_soc]}\r\n                  name=\"nom_soc\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">nom du delegué</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  value={Societe.nom_responsable_soc}\r\n                  onChange={handleInputChange}\r\n                  validations={[required, vnom_responsable]}\r\n                  name=\"nom_responsable_soc\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">code naf</label>      \r\n                  \r\n                   {SIRETAPI.map((e)=>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  value={Societe.activite_soc = e.activite_principale}\r\n                  onChange={handleInputChange}\r\n                  validations={[required,vsyndicat]}\r\n                  name=\"activite_soc\"\r\n                />\r\n                 )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">adresse_local</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  value={Societe.adresse_local}\r\n                  onChange={handleInputChange}\r\n                  validations={[required,vadresse]}\r\n                  name=\"adresse_local\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">pays</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  defaultValue=\"France\"\r\n                  value={Societe.pays}\r\n                  onChange={handleInputChange}\r\n                  validations={[required,vpays]}\r\n                  name=\"pays\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">ville_soc</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  value={Societe.ville_soc}\r\n                  onChange={handleInputChange}\r\n                  validations={[required,cville]}\r\n                  name=\"ville_soc\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"text\">code_postale</label>\r\n                {SIRETAPI.map((e)=>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  value={Societe.code_postal=e.code_postal}\r\n                  onChange={handleInputChange}\r\n                  validations={[required,vcode_postal]}\r\n                  name=\"code_postal\"\r\n                />\r\n                )}\r\n              </div>\r\n             \r\n              <div className=\"form-group\">\r\n                \r\n                <label htmlFor=\"title\">syndicat</label>\r\n                <Multiselect\r\n                    displayValue=\"NOM\"\r\n                    groupBy=\"TYPE\"\r\n                    value=\"4\"\r\n                    isObject={true}\r\n                    selectedValues={console.log}\r\n                    onChange={console.log}\r\n                    id={console.log}\r\n                    onNOMPressFn={function noRefCheck(){}}\r\n                    onRemove={function noRefCheck(){}}\r\n                    onSearch={function noRefCheck(){}}\r\n                    onSelect={land}\r\n                    options={liste}\r\n                    showCheckbox\r\n                  />\r\n                \r\n              </div>\r\n             \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">observation</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  defaultValue=\"Thierry\"\r\n                  value={Societe.observation}\r\n                  onChange={handleInputChange}\r\n                  validations={[required,vobservation]}\r\n                  name=\"observation\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">telephone Societes</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  value={Societe.tel}\r\n                  onChange={handleInputChange}\r\n                  validations={[required,vtel]}\r\n                  name=\"tel\"\r\n                />\r\n              </div>\r\n             \r\n              \r\n              <select  validations={[required,vid_role]}  value={Societe.id_role} onChange={handleInputChange} name=\"id_role\" >\r\n                <option>select une valeur</option>\r\n                <option value=\"1\">cemeca</option>\r\n                <option value=\"2\">sofitech</option>\r\n              </select>\r\n             \r\n              <button  className=\"btn btn-success\">\r\n                Submit\r\n              </button>\r\n             \r\n\r\n            </div>\r\n          )}\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div\r\n                className={\r\n                  successful\r\n                    ? \"alert alert-success\"\r\n                    : \"alert alert-danger\"\r\n                }\r\n                role=\"alert\"\r\n              >\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n          </Form>\r\n\r\n        </div>\r\n\r\n  );\r\n};\r\n\r\nexport default AddTutorial;\r\n","import axios from \"axios\";\r\n\r\n\r\nconst API_URL = \"https://sofcem.mtech.dev/api/auth/\";\r\n\r\n\r\n\r\nclass AuthAction {\r\n\r\n\r\n  create(data){\r\n    return axios.post(API_URL + \"interlocuteur\", data);\r\n  }\r\n \r\n\r\n  findAll(){\r\n    return axios.post(API_URL + \"interlocuteur\");\r\n\r\n  };\r\n \r\n\r\n \r\n}\r\n\r\nexport default new AuthAction();\r\n","import React, { useState, useRef ,useEffect} from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthAction from \"../services/Interlocuteur\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport UserService from \"../services/user.service\";\r\nimport axios from 'axios';\r\n//table class\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n\r\nconst Action = (props) => {\r\n\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n    const [ID_societe,setID_societe] = useState([]);\r\n    useEffect(()=>{\r\n      retrieveTutorials();\r\n      const user = AuthService.getCurrentUser();\r\n          if (user){\r\n                 //afficher cemca\r\n          UserService.getCemecaBoard().then(\r\n              response => {\r\n                  axios.get(\"http://localhost:8080/cemeca\").then((response)=>{\r\n                    setID_societe(response.data);\r\n                  })\r\n              },\r\n            );\r\n             //afficher cemca\r\n          UserService.getSofitechBoard().then(\r\n              response => {\r\n                  axios.get(\"http://localhost:8080/sofitech\").then((response)=>{\r\n                    setID_societe(response.data);\r\n                  })\r\n              },\r\n  \r\n            );\r\n            \r\n          }\r\n   },[]) \r\n// Get ID from URL\r\nconst params = useParams();\r\nvar nb=parseInt(params.id);\r\nconst actItem =ID_societe.filter(task=>task.siret===nb)\r\nconsole.log(actItem)\r\n//inntial user state\r\nconst user = AuthService.getCurrentUser()\r\n//intitial Action \r\n    const initialState = {\r\n    nom:\"\",\r\n    prenom: \"\",\r\n    email:\"\",\r\n    adresse: \"\",\r\n    code_postale: \"\",\r\n    tel: \"\",\r\n    activite: \"\", \r\n    id_soc: \"\",\r\n    };\r\n\r\n  const [Interlocuteur, setInterlocuteur] = useState({initialState});\r\n  const [listeinter ,Setlisteinter] = useState([]);\r\n\r\n  const retrieveTutorials = () => {\r\n    AuthAction.findAll()\r\n      .then((response) => {\r\n        Setlisteinter(response.data);\r\n       \r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  console.log(listeinter.data)\r\n  \r\n  const saveAction = (e) => {\r\n  \r\n    var data = {\r\n      nom:Interlocuteur.nom,\r\n      prenom:Interlocuteur.prenom,\r\n      email:Interlocuteur.email,\r\n      adresse: Interlocuteur.adresse,\r\n      code_postale:Interlocuteur.code_postale,\r\n      tel:Interlocuteur.tel,\r\n      fonction_inter:Interlocuteur.fonction_inter,\r\n      id_soc:nb,\r\n    };\r\n  \r\n    e.preventDefault();\r\n    form.current.validateAll();\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthAction.create(data)\r\n        .then(response => {\r\n        setInterlocuteur({\r\n           nom:response.data.nom,\r\n           prenom: response.data.prenom,\r\n           email: response.data.email,\r\n           adresse: response.data.adresse,\r\n           code_postale: response.data.code_postale,\r\n           tel: response.data.tel,\r\n           fonction_inter: response.data.fonction_inter,\r\n           id_soc: response.data.id_soc,\r\n          }\r\n          );\r\n          setSuccessful(true);\r\n          setMessage(response.data.message)\r\n        },\r\n        error => {\r\n          const resMessage =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      setMessage(resMessage);\r\n        }\r\n        )\r\n        .catch(e => {\r\n          console.log(e);\r\n\r\n        });\r\n    }\r\n};\r\nconst handleInputChange = event => {\r\n  const { name, value } = event.target;\r\n  setInterlocuteur({ ...Interlocuteur, [name]: value });\r\n\r\n};\r\n\r\n    return (\r\n        <div className=\"col-md-12\">\r\n  \r\n          <h1>\r\n            Ajouter un interlocuteur\r\n          </h1>\r\n   \r\n    \r\n   {/* ajouter un user */}\r\n   <div className=\"card card-container\">\r\n          \r\n            liste interlocuteur \r\n            <TableContainer component={Paper}>\r\n                                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                                        <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>nom</TableCell>\r\n                                            <TableCell align=\"right\">prenom</TableCell>\r\n                                            <TableCell align=\"right\">fonction</TableCell>\r\n                                            <TableCell align=\"right\">adresse postal</TableCell>\r\n                                            <TableCell align=\"right\">telephone</TableCell>\r\n                                        </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                      \r\n                                        </TableBody>\r\n                                    </Table>\r\n              </TableContainer>\r\n            <Form onSubmit={saveAction} ref={form}>\r\n                {!successful && (\r\n                    <div>\r\n                       <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">nom</label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"nom\"\r\n                          value={Interlocuteur.nom}\r\n                          onChange={handleInputChange}\r\n                          \r\n                        />\r\n                      </div>\r\n    \r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">prenom</label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"prenom\"\r\n                          value={Interlocuteur.prenom}\r\n                          onChange={handleInputChange}\r\n                          \r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">email</label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"email\"\r\n                          value={Interlocuteur.email}\r\n                          onChange={handleInputChange}\r\n                          \r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">adresse</label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"adresse\"\r\n                          value={Interlocuteur.adresse}\r\n                          onChange={handleInputChange}\r\n                          \r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">code postal</label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"code_postale\"\r\n                          value={Interlocuteur.code_postale}\r\n                          onChange={handleInputChange}\r\n                          \r\n                        />\r\n                      </div>\r\n      \r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">tel</label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"tel\"\r\n                          value={Interlocuteur.tel}\r\n                          onChange={handleInputChange}\r\n                          \r\n                        />\r\n                      </div>        \r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">fonction</label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"fonction_inter\"\r\n                          value={Interlocuteur.fonction_inter}\r\n                          onChange={handleInputChange}\r\n                          \r\n                        />\r\n                      </div>    \r\n                     \r\n                     \r\n\r\n                    \r\n\r\n                      <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary btn-block\">Valider l'action</button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {message && (\r\n                    <div className=\"form-group\">\r\n                      <div\r\n                        className={\r\n                          successful\r\n                            ? \"alert alert-success\"\r\n                            : \"alert alert-danger\"\r\n                        }\r\n                        role=\"alert\"\r\n                      >\r\n                        {message}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n              </Form>\r\n          </div> \r\n          </div>\r\n      );\r\n    }\r\n    export default Action;\r\n  \r\n  ","import React,{useEffect,useState} from 'react'\r\nimport axios from 'axios';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport UserService from \"../services/user.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Customersinfo () {\r\n  const[ListSociete,SetSociete]=useState([]);\r\n  const user = AuthService.getCurrentUser()\r\n  useEffect(() =>{\r\n    retrieveTutorials()\r\n    \r\n},[]);\r\n\r\n\r\nconst retrieveTutorials = () => {\r\n  if(user){\r\n    //afficher cemca\r\n    UserService.getCemecaBoard().then(\r\n        response => {\r\n            axios.get(\"http://localhost:8080/cemeca\").then((response)=>{\r\n              SetSociete(response.data);\r\n            })\r\n        },\r\n\r\n      );\r\n       //afficher sofitech\r\n    UserService.getSofitechBoard().then(\r\n        response => {\r\n            axios.get(\"http://localhost:8080/sofitech\").then((response)=>{\r\n              SetSociete(response.data);\r\n            })\r\n        },\r\n  \r\n\r\n        \r\n      );\r\n\r\n}\r\n\r\n};\r\n\r\nconsole.log(ListSociete)\r\n// Get ID from URL\r\nconst params = useParams();\r\nvar nb=parseInt(params.id);\r\nconst actItem =ListSociete.filter(task=>task.siret===nb)\r\nconsole.log(actItem)\r\n\r\n  const bull = (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\r\n    >\r\n      •\r\n    </Box>\r\n  );\r\n  const card = (\r\n    <React.Fragment>\r\n      {actItem.map((e)=>\r\n     \r\n      <CardContent>\r\n         <Typography variant=\"h5\" component=\"div\">\r\n         <i class='bx bxs-bank danger'></i>: {e.nom_soc}\r\n        </Typography>\r\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n          siret : {e.siret}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n         siren : {e.siren}\r\n        </Typography>\r\n        \r\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n          date de creation : {e.date_creation_soc}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n         date enregistré : {e.createdAt}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n          description:{e.observation}\r\n\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n          code naf : {e.activite_soc}\r\n\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n          nom résponsable : {e.nom_responsable_soc}\r\n\r\n        </Typography>\r\n\r\n        <Typography variant=\"body2\">\r\n        adresse postal  : {e.adresse_local} {e.ville_soc} {e.code_postal} \r\n          \r\n         \r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n        syndicat : {e.syndicat}\r\n\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n        observation : {e.observation}\r\n\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n        telephone : {e.tel}\r\n\r\n        </Typography>\r\n       \r\n      </CardContent>\r\n       )}\r\n      <CardActions>\r\n        <Button size=\"small\">modification</Button>\r\n      </CardActions>\r\n    </React.Fragment>\r\n  );\r\n  return (\r\n    <Box sx={{ minWidth: 275 }}>\r\n      <Card variant=\"outlined\">{card}</Card>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Customersinfo\r\n","import React from 'react'\r\n\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\nimport Dashboard from '../pages/Dashboard'\r\nimport Customers from '../pages/Customers'\r\nimport Register from '../pages/Register'\r\nimport Login from '../pages/Login'\r\nimport Action from '../pages/Action'\r\nimport Ajouter from '../pages/Ajouter'\r\nimport AuthService from \"../services/auth.service\";\r\nimport Interlocuteur from '../pages/Interlocuteur'\r\nimport  CustomerInfo from '../pages/CustomerInfo'\r\nconst Routes = () => {\r\n    const user = AuthService.getCurrentUser();\r\n    return (\r\n        <Switch>\r\n            <Route path='/' exact component={Dashboard}/>\r\n            {user? <Route path='/Action/:id' component={Action}/>: null }\r\n            <Route path='/Societes' component={Customers}/>\r\n            <Route path='/Societe/:id' component={CustomerInfo}/>\r\n            <Route path='/Interlocuteur/:id' component={Interlocuteur}/>\r\n            <Route path='/ajouter' component={Ajouter}/>\r\n            <Route path='/register' component={Register}/>\r\n            <Route path='/Login' component={Login}/>\r\n            <Route path='/Interlocuteur' component={Interlocuteur}/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React, {useEffect} from 'react'\r\n\r\nimport './layout.css'\r\n\r\nimport Sidebar from '../sidebar/Sidebar'\r\nimport TopNav from '../topnav/TopNav'\r\nimport Routes from '../Routes'\r\n\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport ThemeAction from '../../redux/actions/ThemeAction'\r\n\r\nconst Layout = () => {\r\n\r\n    const themeReducer = useSelector(state => state.ThemeReducer)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const themeClass = localStorage.getItem('themeMode', 'theme-mode-light')\r\n\r\n        const colorClass = localStorage.getItem('colorMode', 'theme-mode-light')\r\n\r\n        dispatch(ThemeAction.setMode(themeClass))\r\n\r\n        dispatch(ThemeAction.setColor(colorClass))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Route render={(props) => (\r\n                <div className={`layout ${themeReducer.mode} ${themeReducer.color}`}>\r\n                    <Sidebar {...props}/>\r\n                    <div className=\"layout__content\">\r\n                        <TopNav/>\r\n                        <div className=\"layout__content-main\">\r\n                            <Routes/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}/>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nimport { createStore } from 'redux'\r\n\r\nimport { Provider } from 'react-redux'\r\n\r\nimport rootReducer from './redux/reducers'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './assets/boxicons-2.0.7/css/boxicons.min.css'\r\nimport './assets/css/grid.css'\r\nimport './assets/css/theme.css'\r\nimport './assets/css/index.css'\r\n\r\nimport Layout from './components/layout/Layout'\r\n\r\nconst store = createStore(\r\n  rootReducer\r\n)\r\n\r\ndocument.title = 'CRM SOFITECH/CEMECA'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n\r\n      <Layout />\r\n\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}